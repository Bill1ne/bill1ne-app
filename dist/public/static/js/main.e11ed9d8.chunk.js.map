{"version":3,"sources":["utils/index.js","components/Layout/icon.png","registerServiceWorker.js","utils/bec.js","AppModule/selectors.js","AppModule/index.js","components/Notification/index.js","components/Modal/index.js","components/Layout/Vertical.js","components/Tabs/index.js","components/SearchBar/index.js","components/DropDown/index.js","components/Button/index.js","utils/api.js","components/Input/index.js","components/ListView/UserLi.js","screens/Users/Employees.js","components/Loading/index.js","screens/Users/AddOrEditEmployees.js","screens/ActionModals/ActivityView.js","components/SegmentExpandable/index.js","screens/DashboardAll/Dashboard.js","screens/Branch/AddOrEditBranch.js","components/GridView/BranchGrid.js","screens/Branch/index.js","screens/ActionModals/ChangePassword.js","components/ListView/CustomerLi.js","screens/Users/Account.js","screens/Auth/Logout.js","screens/DashboardAll/index.js","components/Page/index.js","screens/Customer/CustomerList.js","components/Stats/StatCount.js","components/ListView/InvoiceLi.js","screens/Customer/CustomerDetail.js","components/ListView/ProductLi.js","components/ListView/ServiceLi.js","screens/Items/index.js","screens/Items/AddOrEditItems.js","screens/Items/ProductDetail.js","screens/Items/ServiceDetail.js","screens/Invoice/index.js","screens/Invoice/InvoiceDetail.js","screens/Invoice/CreateInvoice.js","screens/Customer/AddCustomer.js","components/GridView/UserGrid.js","screens/Branch/Settings.js","screens/DashboardOne/index.js","screens/Main.js","reducers/index.js","Sagas/index.js","screens/Auth/Auth.js","index.js","store/configureStore.js"],"names":["setLocalStorage","key","value","global","localStorage","setItem","getLocalStorage","getItem","removeToken","removeItem","pad2","number","getDesiredDateTimeNow","dateAndTime","d","Date","month","getMonth","getDate","getFullYear","getDesiredDateNow","hours","getHours","getMinutes","getDesiredTimeNow","getBranchActionPerm","currentBranch","empId","type","action","employees","employee_id","perm","module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","seperate","resp","a","_uri","uri","fullUrl","obj","headers","_headers","method","body","toJS","toLowerCase","undefined","JSON","stringify","toUpperCase","Accept","Authorization","fetch","res","json","text","resBody","respError","ok","Error","data","href","status","response","bec","getPostCustomerData","appModuleReducer","get","getPostBillData","getPostProductData","getPostServiceData","getAddNewStockToProductData","getLoginCreds","deleteACustomerData","putCustomerData","deleteABranchData","updateHistoryFnData","takeSnapshotQueryData","postLoginSaga","getAllCustomerSaga","postCustomerSaga","putCustomerSaga","deleteACustomerSaga","getAllProductSaga","getByIdSaga","postProductSaga","updateProductSaga","getAllStockSaga","getAllServiceSaga","addStockToProductSaga","postServiceSaga","updateServiceSaga","postBillSaga","getAllBillsSaga","getAllBranchSaga","getAllEmployeesSaga","deleteABranchSaga","getAllActivitiesSaga","checkAuthSaga","takeSnapshotSaga","getStatsSaga","watchLoginSaga","watchGetAllCustomerSaga","watchPostCustomerSaga","watchPutCustomerSaga","watchDeleteACustomerSaga","watchPostProductSaga","watchUpdateProductSaga","watchGetAllProductSaga","watchGetByIdSaga","watchAddStockToProductSaga","watchPostNewServiceSaga","watchUpdateServiceSaga","watchGetAllServiceSaga","watchPostBillSaga","watchGetAllStockSaga","watchGetAllBillsSaga","watchGetAllBranchSaga","watchGetAllEmployeesSaga","watchDeleteABranchSaga","watchGetAllActivities","watchCheckAuth","watchTakeSnapshot","watchGetStats","appModuleSaga","ONCLICK_LOGIN","LOGIN_FAILS","ADD_NOTIFICATION","SUCCESS","GET_ALL_CUSTOMER","PUT_CUSTOMER","POST_NEW_BILL","POST_NEW_PRODUCT","POST_NEW_SERVICE","GET_ALL_PRODUCT","GET_BY_ID","GET_ALL_SERVICE","GET_ALL_BILLS","DELETE_BRANCH","TAKE_SNAPSHOT","UPDATE_PRODUCT","UPDATE_SERVICE","appModuleActions","updateUserAccessDetails","onClickLogin","loginSuccess","loginFails","loginLoading","success","failure","getAllCustomer","getAllCustomerSuccess","getAllCustomerFails","postNewCustomer","postNewCustomerSuccess","postNewCustomerFails","putCustomer","deleteACustomer","deleteACustomerSuccess","deleteACustomerFails","postNewService","postNewServiceSuccess","postNewServiceFails","updateService","getAllStock","getAllStockSuccess","getAllStockFails","postNewProduct","postNewProductSuccess","postNewProductFails","updateProduct","getAllProduct","getById","getAllProductSuccess","getAllProductFails","getAllService","getAllServiceSuccess","getAllServiceFails","addStockToProduct","addStockToProductSuccess","addStockToProductFails","postNewBill","postNewBillSuccess","postNewBillFails","getAllBills","getAllBillsSuccess","getAllBillsFails","getAllBranch","getAllBranchSuccess","getAllBranchFails","getAllEmployees","getAllEmployeesSuccess","getAllEmployeesFails","editBranch","deleteBranch","deleteBranchSuccess","deleteBranchFails","updateHistoryFun","getAllActivities","checkAuth","addNotification","takeSnapshot","setCurrentBranch","getStats","modalToggle","loadingToogle","commonErrorMsg","firstTimeBoot","put","select","selectors","creds","call","username","password","token","query","message","level","customerData","fullData","_id","push","queryId","id","successData","detailData","detail","product","invoicesAdded","servicesUsed","service","invoice","customer","branch","modal","PRODUCT_ADD_MODAL","view","productData","PRODUCT_EDIT_MODAL","addNewStockToProductData","serviceData","SERVICE_ADD_MODAL","SERVICE_EDIT_MODAL","billData","goBack","allActivitiesData","activities","start","setHours","end","toISOString","moment","subtract","toDate","stats","takeLatest","takeEvery","all","fork","initialState","fromJS","myUserAccess","role","bill","add","edit","items","credsDetail","postNewCustomerData","postNewProductData","postNewServiceData","postNewBillData","takeSnapshotQuery","allProductsData","products","count","total","page","totalPages","productQueryPage","allCustomerData","customers","customerQueryPage","allServiceData","services","serviceQueryPage","allStockData","allBillData","invoices","billQueryPage","allBranchData","editBranchData","allEmployeesData","admins","loading","postNewCustomerLoading","postNewProductLoading","viewProductsLoading","getProductLoading","addStockToProductLoading","getAllCustomerLoading","postNewServiceLoading","getServiceLoading","postNewBillLoading","getStockLoading","getBillLoading","deleteACustomerLoading","getAllBranchLoading","getAllEmployeesLoading","deleteABranchLoading","putCustomerLoading","getAllActivitiesLoading","takeSnapshotLoading","getByIdLoading","updateServiceLoading","getStatsLoading","customerAddModal","productAddModal","serviceAddModal","productEditModal","serviceEditModal","branchAddModal","branchEditModal","employeeAddModal","viewCustomersModal","updateHistoryFn","notification","style","NotificationItem","DefaultStyle","margin","backgroundColor","border","boxShadow","color","MessageWrapper","padding","Dismiss","top","right","warning","info","NotificationContainer","props","this","notificationSystem","refs","newProps","appModuleData","setState","ref","Component","mapDispatchToProps","actions","withRouter","connect","ModalIndex","open","onClose","header","content","footer","center","showCloseIcon","modalClass","size","classNames","className","VerticalLayout","leftMenuWidth","pageWidth","innerWidth","pageHeight","innerHeight","onSelectBranch","showLeftMenu","handleWindowResize","bind","addEventListener","removeEventListener","onClick","pageHeader","appName","display","map","actionItem","pathname","link","history","icon","isBranch","align","branchName","leftMenu","menu","includes","name","addLink","addFunc","Modal","marginTop","children","Tabs","tabActive","_getMenuItems","_getSelectedPanel","index","e","preventDefault","onTabClick","activeTab","panes","panel","setActive","menuItem","render","Dropdown","container","React","createRef","checkType","typeDropdown","showDropdown","event","isOpen","hideDropdown","current","contains","target","chooseItem","labelItem","renderDataDropDown","item","onSelectOption","label","toLocaleUpperCase","list","length","firstItem","document","cursor","width","src","defaultProps","Button","disabled","Input","onValChange","maxLength","minLength","options","required","isMulti","loadOptions","params","pattern","onChange","isNotValue","closeMenuOnSelect","selectedOption","styles","getOptionLabel","option","getOptionValue","cacheOptions","defaultOptions","isInputVal","toString","Number","RegExp","test","roleOptions","UserLi","showDetailModal","showEditModal","editCustomerData","editLoading","showDeleteModal","deleteCustomerData","editUserModal","editUserData","editUserPasswordModal","editUserPasswordData","isSuccessIndicator","isAllInputOkay","onSubmitEditUser","onSubmitDeleteUser","user","newPassword","repeatPassword","full_name","email","gender","address","age","mobileNo","mobile_number","api","onClickAction","customerOptions","deleted","emp_id","added_date_time","val","filter","ge","added_by","checked","delete","Employees","deleteModal","filterField","deleteEmployeeLoading","deleteEmployee","onChangeState","empData","employeesData","allAdminData","overflow","i","Loading","Loader","onRequestClose","overlayClassName","AddOrEditEmployees","postCustomerLoading","postEmployee","putEmployee","closeModal","empRole","emp","empl","String","ViewActivity","structured","activity","description","SegmentExpandable","show","expandAtStart","nextProps","CaretDown","CaretNext","paddingLeft","Dashboard","activeStat","statData","stat","added","totalInvoiceAmount","totalPaidAmount","totalUnPaidAmount","defaultPerm","AddOrEditBranch","addBranchLoading","checkOkayToAdd","onClickAddBranch","onChangePermission","renderEmployeesOptions","branchData","forEach","empsRet","permFlag","updatedEmp","branchId","allEmployeesCombined","concat","BranchGrid","onClickFn","onClickAdd","bKye","Branches","ChangePassword","updatePassLoading","onClickUpdatePass","setStateChangeValues","search","substring","updatePasswordModal","CustomerLi","minimal","Account","Logout","DashboardAll","Vertical","routeLinks","rightUserDetail","changePasswordFn","Notification","path","component","ViewEmployees","ActivityView","Page","currentPage","nextPage","prevPage","shownContent","totalContent","searchParams","URLSearchParams","set","ViewCustomers","deleteCustomerModal","whichCustomer","urlParams","branch_id","filteredCustomerData","cuData","custData","pg","StatCount","heading","noBorder","borderColor","main","InvoiceLi","final_bill_amount","toFixed","paid_amount","CustomerDetail","editCustomerModal","onSubmitDeleteCustomer","Object","keys","deleteLoading","paddingTop","ProductLi","showAvgUsage","isInvoiceView","product_unit","available_stocks","product_cost","quantity_used","ServiceLi","showSubStatDetail","average_stock_usage","product_used","serviceAvg","productUsed","pu","service_cost","Index","pagination","addIconFunc","addIcon","unitOptions","productOptions","AddOrEditItems","productName","productUnit","productCost","quantityInMl","totalQuantity","quantityInBox","serviceName","costOfService","onClickSubmit","setStockUsageQuantity","setStateValues","onCloseModal","checkAllInputOkay","onLoadProductSelectOption","productsData","uO","pr","avgUsedLi","avgStk","avgUsedData","renderProductOptions","averageQuantityOfStockUsed","fullObj","unit","cost","dataToPost","prUsed","averageStockUsage","inputVal","prUdObj","o","pD","ActionOptions","ProductDetail","addStockModal","addStockData","isAllStockInputOkay","onSubmitDeleteProduct","ModalActionOptions","addCustomerLoading","productId","quantityToAdd","alignSelf","justifySelf","float","stocks","reverse","stock","quantity","bill_ref","ServiceDetail","onSubmitDeleteService","asu","InvoiceDetail","balancePaidModal","completeBillLoading","paidby","amountPaid","nowPaying","completeBill","setCompState","balance_paid","actual_bill_amount","discount_amount","customerQueryList","discountAmount","srcTag","showAddRow","editProductUsed","editProductUsedIndex","createInvoice","billedby","onLoadCustomers","onLoadProductOrService","onRemoveItem","activeBr","activeBranchDetail","access_branches","br","toUpdate","renderCustomerOptions","qry","join","renderProductOrServiceOptions","itemKey","splice","itm","paid_by","billed_by","totalBillAmount","totalBillAmountFn","axis","renderBranchOptions","isDisabled","paddingBottom","productOrService","menuPlacement","menuContainerStyle","bottom","placeholder","marginBottom","qty","renderNumberOptions","prUsd","avgUsd","p","fontSize","fontWeight","fontStyle","avgStckUsd","actual","paddingRight","num","li","Checkbox","AddCustomer","addCustomerData","genderOptions","onSubmitAddCustomer","setTimeout","successMessage","UserGrid","onSubmitEditCustomer","userOptions","Settings","deleteBranchModal","whichBranch","updatePermissionModal","updatePermissionData","updateData","removeUserModal","settingsLoading","onClickUpdatePermission","onClickRemoveUser","userData","menuButton","menuButtonClick","onSubmitDeleteBranch","DashboardOne","activeBranch","prevProps","prevState","snapshot","prevBranchId","branchPerm","custAccData","itemAccData","billAccData","Items","ViewBills","CreateInvoice","BranchSettings","Main","loggedIn","navOpenState","modalVisible","modalType","checkedLogin","getIn","setInterval","combineReducers","merge","byData","branches","mergeDeep","root","Auth","loginError","loginView","setLoginState","doLogin","err","require","createBrowserHistory","routeMiddleware","routerMiddleware","sagaMiddleware","createSagaMiddleware","store","enhancer","compose","applyMiddleware","createStore","rootReducer","configureStore","run","ReactDOM","getElementById","URL","process","origin","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"sNAAA,sLAAO,IAIMA,EAAkB,SAACC,EAAKC,GACjCC,EAAOC,aAAaC,QAAQJ,EAAKC,IAGxBI,EAAkB,SAACL,GAAD,OAASE,EAAOC,aAAaG,QAAQN,IAEvDO,EAAc,WACvBL,EAAOC,aAAaK,WAAW,KAC/BN,EAAOC,aAAaK,WAAW,iBA4BnC,SAASC,EAAKC,GACV,OAAQA,EAAS,GAAK,IAAM,IAAMA,EAG/B,IAkBMC,EAAwB,SAACC,GAClC,OAP6B,SAACA,GAC9B,IAAIC,EAAI,IAAIC,KAAKF,GACbG,EAAQF,EAAEG,WAAa,EAC3B,OAAOP,EAAKI,EAAEI,WAAa,IAAMR,EAAKM,GAAS,IAAMF,EAAEK,cAIhDC,CAAkBP,GAAe,IAnBX,SAACA,GAC9B,IAAIC,EAAI,IAAIC,KAAKF,GACbQ,EAAQP,EAAEQ,WACd,OAAID,EAAQ,GACDX,EAAKW,GAAS,IAAMX,EAAKI,EAAES,cAAgB,MAG3Cb,EADPW,GAAgB,IACK,IAAMX,EAAKI,EAAES,cAAgB,MAYRC,CAAkBX,IAwBvDY,EAAsB,SAACC,EAAeC,EAAOC,EAAMC,GAC5D,OAAOH,EAAcI,WACjBJ,EAAcI,UAAU,IACxBJ,EAAcI,UAAU,GAAGC,cAAgBJ,GAC3CD,EAAcI,UAAU,GAAGE,MAC3BN,EAAcI,UAAU,GAAGE,KAAKJ,GAAMC,M,4OC5F9CI,EAAOC,QAAU,IAA0B,kC,kMCUrCC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,M,+FC3EjE,aAA8FC,EAAUC,GAAxG,iDAAAC,EAAA,0DAAoBhC,YAApB,MAA2B,MAA3B,EAAuCiC,EAAvC,EAAkCC,IAAlC,IAA6CC,eAA7C,MAAuD,GAAvD,MAA2DC,WAA3D,MAAiE,GAAjE,MAAqEC,QAASC,OAA9E,MAAyF,GAAzF,EACQC,EAASvC,EACTkC,EAAMC,GAAO,UAJD,GAIC,gBAA4BF,GACzCI,EAAUC,EACVE,EAAOJ,EAAIK,KAAOL,EAAIK,OAASL,EAEpB,QAAXG,IAAkBA,EAAS,UANnC,KAQYA,EAAOG,cARnB,OASa,SATb,MAUa,QAVb,OAca,SAdb,MAea,QAfb,MAgBa,UAhBb,MAiBa,WAjBb,+BAWYF,OAAOG,EAXnB,oCAkBYH,EAAOI,KAAKC,UAAUL,GAlBlC,wEAwBID,EAASA,EAAOO,cAChBT,EAAO,aACHU,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYtE,YAAgB,MAExC2D,GA9BX,UAkCsBY,MAAMf,EAAK,CACzBK,SACAF,UACAG,SArCR,eAkCUU,EAlCV,iBAwC0BA,EAAIC,OACrBvB,OAAM,kBAAMsB,EAAIE,UAChBxB,OAAM,kBAAM,QA1CrB,WAwCUyB,EAxCV,OA4CUC,EAAY,GACbJ,EAAIK,IAAOzB,EA7CpB,uBA8CcD,EAAQ,IAAI2B,MAAM,wBAClBN,IAAMA,EACZrB,EAAMW,KAAOa,GACQ,kBAAjBA,EAAQI,MAEgB,gBAAjBJ,EAAQI,QADfhD,OAAOC,SAASgD,KAAO,KAIrB7B,EAtDd,SAuDgBqB,EAAIK,IAAMzB,IAClBwB,EAAUd,KAAOa,GAxDzB,YA2DQA,GAA8B,UAAnBA,EAAQM,QAAuB7B,EA3DlD,uBA4DcD,EAAQ,IAAI2B,MAAMH,EAAQI,OAC1BP,IAAMA,EACZrB,EAAMW,KAAOa,GACQ,kBAAjBA,EAAQI,MAEgB,gBAAjBJ,EAAQI,QADfhD,OAAOC,SAASgD,KAAO,KAIrB7B,EApEd,iCAuEWC,EAAWC,EAAKuB,EAAW,CAACd,KAAMa,IAAY,CAACH,MAAKV,KAAMa,EAAQO,WAvE7E,6C,sBA0EeC,M,gGC9EFC,EAAsB,SAAC,GAAD,SAAEC,iBAAuCC,IAAI,wBACnEC,EAAkB,SAAC,GAAD,SAAEF,iBAAuCC,IAAI,oBAC/DE,EAAqB,SAAC,GAAD,SAAEH,iBAAuCC,IAAI,uBAClEG,EAAqB,SAAC,GAAD,SAAEJ,iBAAuCC,IAAI,uBAClEI,EAA8B,SAAC,GAAD,SAAEL,iBAAuCC,IAAI,6BAC3EK,EAAgB,SAAC,GAAD,SAAEN,iBAAuCC,IAAI,gBAC7DM,EAAsB,SAAC,GAAD,SAAEP,iBAAuCC,IAAI,wBACnEO,EAAkB,SAAC,GAAD,SAAER,iBAAuCC,IAAI,oBAC/DQ,EAAoB,SAAC,GAAD,SAAET,iBAAuCC,IAAI,sBACjES,EAAsB,SAAC,GAAD,SAAEV,iBAAuCC,IAAI,mBAAmBvB,QACtFiC,EAAwB,SAAC,GAAD,SAAEX,iBAAuCC,IAAI,sB,WCuJjEW,I,WA2BAC,I,WAkBAC,I,WA+BAC,I,WAoCAC,I,WA0BAC,I,WAkBAC,I,WA4FAC,I,WA8BAC,I,WAiCAC,I,YAkBAC,I,YAkBAC,I,YA+BAC,I,YA+BAC,I,YAgCAC,I,YA+BAC,I,YAkBAC,I,YAgBAC,I,YAgBAC,I,YAsBAC,I,YAgBAC,I,YAqBAC,I,YA6CAC,I,YAgBPC,I,YAKAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIOC,IAv3BJC,GAAgB,0BAEhBC,GAAc,0BAEdC,GAAmB,6BAGnBC,GAAU,oBAIVC,GAAmB,6BAMnBC,GAAe,yBAKfC,GAAgB,0BAGhBC,GAAmB,6BAGnBC,GAAmB,6BAGnBC,GAAkB,4BAClBC,GAAY,sBAGZC,GAAkB,4BASlBC,GAAgB,0BAgBhBC,GAAgB,0BAMhBC,GAAgB,0BAChBC,GAAiB,2BACjBC,GAAiB,2BASjBC,GAAmB,CAC5BC,wBAAyB,SAACnF,GAAD,MAAW,CAACzD,KA/EC,uCA+EiCyD,SACvEoF,aAAc,SAACpF,GAAD,MAAW,CAACzD,KAAM0H,GAAejE,SAC/CqF,aAAc,iBAAO,CAAC9I,KA/EG,4BAgFzB+I,WAAY,SAACtF,GAAD,MAAW,CAACzD,KAAM2H,GAAalE,SAC3CuF,aAAc,SAACvF,GAAD,MAAW,CAACzD,KA/ED,0BA+EsByD,SAG/CwF,QAAS,SAACxF,GAAD,MAAW,CAACzD,KAAM6H,GAASpE,SACpCyF,QAAS,SAACzF,GAAD,MAAW,CAACzD,KA9EF,oBA8EiByD,SAGpC0F,eAAgB,SAAC1F,GAAD,MAAW,CAACzD,KAAM8H,GAAkBrE,SACpD2F,sBAAuB,SAAC3F,GAAD,MAAW,CAACzD,KA9EC,qCA8E+ByD,SACnE4F,oBAAqB,SAAC5F,GAAD,MAAW,CAACzD,KA9EC,mCA8E6ByD,SAC/D6F,gBAAiB,SAAC7F,GAAD,MAAW,CAACzD,KA9EA,8BA8EyByD,SACtD8F,uBAAwB,SAAC9F,GAAD,MAAW,CAACzD,KA9EC,sCA8EgCyD,SACrE+F,qBAAsB,SAAC/F,GAAD,MAAW,CAACzD,KA9EC,oCA8E8ByD,SACjEgG,YAAa,SAAChG,GAAD,MAAW,CAACzD,KAAM+H,GAActE,SAC7CiG,gBAAiB,SAACjG,GAAD,MAAW,CAACzD,KA9EA,8BA8EyByD,SACtDkG,uBAAwB,SAAClG,GAAD,MAAW,CAACzD,KA9EC,sCA8EgCyD,SACrEmG,qBAAsB,SAACnG,GAAD,MAAW,CAACzD,KA9EC,oCA8E8ByD,SAEjEoG,eAAgB,SAACpG,GAAD,MAAW,CAACzD,KAAMkI,GAAkBzE,SACpDqG,sBAAuB,SAACrG,GAAD,MAAW,CAACzD,KAxEC,qCAwE+ByD,SACnEsG,oBAAqB,SAACtG,GAAD,MAAW,CAACzD,KAxEC,mCAwE6ByD,SAC/DuG,cAAe,SAACvG,GAAD,MAAW,CAACzD,KAAM0I,GAAgBjF,SACjDwG,YAAa,SAACxG,GAAD,MAAW,CAACzD,KA/DA,0BA+DqByD,SAC9CyG,mBAAoB,SAACzG,GAAD,MAAW,CAACzD,KA/DC,kCA+D4ByD,SAC7D0G,iBAAkB,SAAC1G,GAAD,MAAW,CAACzD,KA/DC,gCA+D0ByD,SACzD2G,eAAgB,SAAC3G,GAAD,MAAW,CAACzD,KAAMiI,GAAkBxE,SACpD4G,sBAAuB,SAAC5G,GAAD,MAAW,CAACzD,KAlFC,qCAkF+ByD,SACnE6G,oBAAqB,SAAC7G,GAAD,MAAW,CAACzD,KAlFC,mCAkF6ByD,SAC/D8G,cAAe,SAAC9G,GAAD,MAAW,CAACzD,KAAMyI,GAAgBhF,SACjD+G,cAAe,SAAC/G,GAAD,MAAW,CAACzD,KAAMmI,GAAiB1E,SAClDgH,QAAS,SAAChH,GAAD,MAAW,CAACzD,KAAMoI,GAAW3E,SACtCiH,qBAAsB,SAACjH,GAAD,MAAW,CAACzD,KAhFC,oCAgF8ByD,SACjEkH,mBAAoB,SAAClH,GAAD,MAAW,CAACzD,KAhFC,kCAgF4ByD,SAC7DmH,cAAe,SAACnH,GAAD,MAAW,CAACzD,KAAMqI,GAAiB5E,SAClDoH,qBAAsB,SAACpH,GAAD,MAAW,CAACzD,KAhFC,oCAgF8ByD,SACjEqH,mBAAoB,SAACrH,GAAD,MAAW,CAACzD,KAhFC,kCAgF4ByD,SAC7DsH,kBAAmB,SAACtH,GAAD,MAAW,CAACzD,KAhFC,iCAgF2ByD,SAC3DuH,yBAA0B,SAACvH,GAAD,MAAW,CAACzD,KAhFE,yCAgFkCyD,SAC1EwH,uBAAwB,SAACxH,GAAD,MAAW,CAACzD,KAhFE,uCAgFgCyD,SACtEyH,YAAa,SAACzH,GAAD,MAAW,CAACzD,KAAMgI,GAAevE,SAC9C0H,mBAAoB,SAAC1H,GAAD,MAAW,CAACzD,KAnGC,kCAmG4ByD,SAC7D2H,iBAAkB,SAAC3H,GAAD,MAAW,CAACzD,KAnGC,gCAmG0ByD,SACzD4H,YAAa,SAAC5H,GAAD,MAAW,CAACzD,KAAMsI,GAAe7E,SAC9C6H,mBAAoB,SAAC7H,GAAD,MAAW,CAACzD,KAhFC,kCAgF4ByD,SAC7D8H,iBAAkB,SAAC9H,GAAD,MAAW,CAACzD,KAhFC,gCAgF0ByD,SACzD+H,aAAc,SAAC/H,GAAD,MAAW,CAACzD,KAhFA,2BAgFsByD,SAChDgI,oBAAqB,SAAChI,GAAD,MAAW,CAACzD,KAhFC,mCAgF6ByD,SAC/DiI,kBAAmB,SAACjI,GAAD,MAAW,CAACzD,KAhFC,iCAgF2ByD,SAC3DkI,gBAAiB,SAAClI,GAAD,MAAW,CAACzD,KA7EA,8BA6EyByD,SACtDmI,uBAAwB,SAACnI,GAAD,MAAW,CAACzD,KA7EC,sCA6EgCyD,SACrEoI,qBAAsB,SAACpI,GAAD,MAAW,CAACzD,KA7EC,oCA6E8ByD,SACjEqI,WAAY,SAACrI,GAAD,MAAW,CAACzD,KA1ED,wBA0EoByD,SAC3CsI,aAAc,SAACtI,GAAD,MAAW,CAACzD,KAAMuI,GAAe9E,SAC/CuI,oBAAqB,SAACvI,GAAD,MAAW,CAACzD,KA1EA,kCA0E6ByD,SAC9DwI,kBAAmB,SAACxI,GAAD,MAAW,CAACzD,KA1EA,gCA0E2ByD,SAC1DyI,iBAAkB,SAACzI,GAAD,MAAW,CAACzD,KA1ED,8BA0E0ByD,SACvD0I,iBAAkB,SAAC1I,GAAD,MAAW,CAACzD,KA1EA,+BA0E0ByD,SACxD2I,UAAW,SAAC3I,GAAD,MAAW,CAACzD,KA1ED,yBA2EtBqM,gBAAiB,SAAC5I,GAAD,MAAW,CAACzD,KAAM4H,GAAkBnE,SACrD6I,aAAc,SAAC7I,GAAD,MAAW,CAACzD,KAAMwI,GAAe/E,SAC/C8I,iBAAkB,SAAC9I,GAAD,MAAW,CAACzD,KAzEA,+BAyE0ByD,SAExD+I,SAAU,SAAC/I,GAAD,MAAW,CAACzD,KA1ED,sBA0EkByD,SAEvCgJ,YAAa,SAAChJ,GAAD,MAAW,CAACzD,KA1ED,yBA0EqByD,SAC7CiJ,cAAe,SAACjJ,GAAD,MAAW,CAACzD,KA1ED,2BA0EuByD,SACjDkJ,eAAgB,SAAClJ,GAAD,MAAW,CAACzD,KA1EI,iCA0EwByD,SACxDmJ,cAAe,SAACnJ,GAAD,MAAW,CAACzD,KA1EA,4BA0EuByD,UAG/C,SAAUkB,KAAV,2EACH,OADG,SACGkI,YAAIlE,GAAiBK,cAAa,IADrC,OAEH,OAFG,SAEG6D,YAAIlE,GAAiBI,WAAW,KAFnC,OAGW,OAHX,SAGiB+D,YAAOC,GAHxB,OAKgB,OAFbC,EAHH,0BAKsBC,YAAKpJ,EAAK,CAC3B7D,KAAM,OACNkC,IAAK,aACLE,IAAK,CACD8K,SAAUF,EAAMhJ,IAAI,YACpBmJ,SAAUH,EAAMhJ,IAAI,eAV7B,QAcC,OAdD,SAKQxB,EALR,EAKQA,KAQPpE,YAAgB,IAAKoE,EAAK4K,OAb3B,UAcOP,YAAIlE,GAAiBG,aAAatG,IAdzC,QAeC,OAfD,UAeOqK,YAAIlE,GAAiBK,cAAa,IAfzC,QAiBCvI,OAAOC,SAASgD,KAAO,IAjBxB,wBAoBC,OApBD,oCAoBOmJ,YAAIlE,GAAiBI,WAAW,KAAEvG,KAAKiB,OApB9C,QAqBC,OArBD,UAqBOoJ,YAAIlE,GAAiBK,cAAa,IArBzC,sDA2BA,SAAUpE,KAAV,2EACH,OADG,SACGiI,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KAD5E,OAGW,OAHX,SAGiBwO,aAAO,qBAAE/I,iBAAuCC,IAAI,wBAHrE,OAKgB,OAFbqJ,EAHH,yBAKsBJ,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAK,kBAAoBmL,IAP9B,OASC,OATD,SAKQ7K,EALR,EAKQA,KALR,UASOqK,YAAIlE,GAAiBS,sBAAsB5G,IATlD,QAUC,OAVD,UAUOqK,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KAVhF,gCAYC,OAZD,oCAYOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAZ1E,QAaC,OAbD,UAaOV,YAAIlE,GAAiBU,oBAAoB,KAAE7G,KAAKiB,OAbvD,QAcC,OAdD,UAcOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KAdhF,sDAkBA,SAAUuG,KAAV,+EACH,OADG,SACGgI,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,yBAA0BC,OAAO,KAD7E,OAEkB,OAFlB,SAEwBwO,YAAOC,GAF/B,OAGyB,OADtBS,EAFH,gBAG+BV,YAAOC,GAHtC,OAagB,OAVbtI,EAHH,gBAKKgJ,EAAW,CACXzN,KAAM,OACNkC,IAAK,WACLE,IAAI,eACGoL,EAAa/K,SATzB,UAasBwK,YAAKpJ,EAAK4J,GAbhC,QAcC,OAdD,SAaQjL,EAbR,EAaQA,KAbR,UAcOqK,YAAIlE,GAAiBY,uBAAuB/G,IAdnD,QAeC,OAfD,UAeOqK,YAAIlE,GAAiBQ,kBAf5B,YAgBK3G,EAAK8K,UAAW9K,EAAKkL,IAhB1B,iBAiBK,OAjBL,UAiBWb,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAQ,YAAD,OAAcE,EAAaxJ,IAAI,QAA/B,cAA4CxB,EAAKkL,IAAjD,0BACPH,MAAO,aAnBhB,QAsBC,OAtBD,UAsBOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,yBAA0BC,OAAO,KAtBjF,QAuBCmG,EAAoBkJ,KAAK,cAvB1B,wBAyBC,OAzBD,oCAyBOd,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAzB1E,QA0BC,OA1BD,UA0BOV,YAAIlE,GAAiBa,qBAAqB,KAAEhH,KAAKiB,OA1BxD,QA2BC,OA3BD,UA2BOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,yBAA0BC,OAAO,KA3BjF,sDA+BA,SAAUwG,KAAV,qFACH,OADG,SACG+H,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,qBAAsBC,OAAO,KADzE,OAEkB,OAFlB,SAEwBwO,YAAOC,GAF/B,OAGyB,OADtBS,EAFH,gBAG+BV,YAAOC,GAHtC,OAKe,OALf,0BAKqBD,aAAO,qBAAE/I,iBAAuCC,IAAI,iBALzE,QAMuB,OADhBqJ,EALP,iBAM6BP,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UANlG,QAiBgB,OAXT3C,EANP,OAOO8N,EAAUP,EAAMrJ,IAAI,WACpBhE,EAAOqN,EAAMrJ,IAAI,QACnByJ,EAAW,CACXzN,KAAM,MACNkC,IAAI,YAAD,OAAcpC,EAAc4N,IAA5B,YAAmCF,EAAaxJ,IAAI,aACvD5B,IAAI,eACGoL,EAAa/K,SAbzB,UAiBsBwK,YAAKpJ,EAAK4J,GAjBhC,QAkBC,OAlBD,SAiBQjL,EAjBR,EAiBQA,KAjBR,UAkBOqK,YAAIlE,GAAiBM,WAlB5B,QAoBC,OApBD,UAoBO4D,YAAIlE,GAAiB8B,QAAQ,CAACzK,OAAM6N,GAAID,KApB/C,YAqBKpL,EAAK8K,UAAW9K,EAAKkL,IArB1B,iBAsBK,OAtBL,UAsBWb,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAQ,YAAD,OAAcE,EAAaxJ,IAAI,QAA/B,cAA4CwJ,EAAaxJ,IAAI,YAA7D,0BACPuJ,MAAO,aAxBhB,QA2BC,OA3BD,UA2BOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,qBAAsBC,OAAO,KA3B7E,gCA8BC,OA9BD,oCA8BOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WA9B1E,QA+BC,OA/BD,UA+BOV,YAAIlE,GAAiBO,QAAQ,KAAE1G,KAAKiB,OA/B3C,QAgCC,OAhCD,UAgCOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,qBAAsBC,OAAO,KAhC7E,sDAoCA,SAAUyG,KAAV,6EACH,OADG,SACG8H,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,yBAA0BC,OAAO,KAD7E,OAEyB,OAFzB,SAE+BwO,YAAOC,GAFtC,OAGyB,OADtBzI,EAFH,gBAG+BwI,YAAOC,GAHtC,OAKgB,OAFbtI,EAHH,0BAKsBwI,YAAKpJ,EAAK,CAC3B7D,KAAM,SACNkC,IAAK,YAAcoC,EAAoBN,IAAI,mBAPhD,QAUC,OAVD,SAKQxB,EALR,EAKQA,KAIPiC,EAAoBkJ,KAAK,cAT1B,UAUOd,YAAIlE,GAAiBQ,kBAV5B,YAWK3G,EAAK8K,UAAW9K,EAAKkL,IAX1B,iBAYK,OAZL,UAYWb,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAQ,YAAD,OAAchJ,EAAoBN,IAAI,aAAtC,cAAwDM,EAAoBN,IAAI,OAAhF,0BACPuJ,MAAO,aAdhB,QAiBC,OAjBD,UAiBOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,yBAA0BC,OAAO,KAjBjF,gCAmBC,OAnBD,oCAmBOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAnB1E,QAoBC,OApBD,UAoBOV,YAAIlE,GAAiBiB,qBAAqB,KAAEpH,KAAKiB,OApBxD,QAqBC,OArBD,UAqBOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,yBAA0BC,OAAO,KArBjF,sDA0BA,SAAU0G,KAAV,6EACH,OADG,SACG6H,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,oBAAqBC,OAAO,KADxE,OAGe,OAHf,kBAGqBwO,aAAO,qBAAE/I,iBAAuCC,IAAI,uBAHzE,OAIuB,OADhBqJ,EAHP,gBAI6BP,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UAJlG,OAKgB,OADT3C,EAJP,iBAKsBmN,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAI,YAAD,OAAcpC,EAAc4N,IAA5B,kBAAyCL,KAPjD,QASC,OATD,SAKQ7K,EALR,EAKQA,KALR,UASOqK,YAAIlE,GAAiB+B,qBAAqBlI,IATjD,QAUC,OAVD,UAUOqK,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,oBAAqBC,OAAO,KAV5E,gCAYC,OAZD,oCAYOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAZ1E,QAaC,OAbD,UAaOV,YAAIlE,GAAiBO,QAAQ,KAAE1G,KAAKiB,OAb3C,QAcC,OAdD,UAcOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,oBAAqBC,OAAO,KAd5E,sDAkBA,SAAU2G,KAAV,qFACH,OADG,SACG4H,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,iBAAkBC,OAAO,KADrE,OAGe,OAHf,kBAGqBwO,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAHzE,OAIuB,OADhBqJ,EAHP,gBAI6BP,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UAJlG,OAIO3C,EAJP,OAKO8N,EAAUP,EAAMrJ,IAAI,WACpBhE,EAAOqN,EAAMrJ,IAAI,QACnB9B,EAPL,UAOclC,EAPd,YAOsB4N,GAPtB,KAQS5N,EART,OASU,YATV,MAUU,YAVV,MAWU,YAXV,QAcU,WAdV,gCAYSkC,EAAG,UAAMlC,EAAN,YAAcF,EAAc4N,IAA5B,YAAmCE,GAZ/C,oCAeS1L,EAAG,UAAMlC,EAAN,YAAcF,EAAc4N,IAA5B,KAfZ,iEAqBgB,OArBhB,UAqBsBT,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,QAvBL,iBAqBQM,EArBR,EAqBQA,KAIHsL,EAAc,GAzBnB,KA0BS9N,EA1BT,OA2BU,YA3BV,QAuCU,YAvCV,QAkDU,YAlDV,QA4DU,aA5DV,QAuEU,WAvEV,gCA4BS8N,EAAc,CACVC,WAAY,CACRC,OAAQxL,EAAKyL,QACbC,cAAe1L,EAAK0L,cACpBC,aAAc3L,EAAK2L,aACnBP,UACA5N,SAlCjB,oCAwCS8N,EAAc,CACVC,WAAY,CACRC,OAAQxL,EAAK4L,QACbF,cAAe1L,EAAK0L,cACpBN,UACA5N,SA7CjB,oCAmDS8N,EAAc,CACVC,WAAY,CACRC,OAAQxL,EAAK6L,QACbT,UACA5N,SAvDjB,oCA6DS8N,EAAc,CACVC,WAAY,CACRC,OAAQxL,EAAK8L,SACbJ,cAAe1L,EAAK0L,cACpBN,UACA5N,SAlEjB,oCAwES8N,EAAc,CACVC,WAAY,CACRC,OAAQxL,EAAK+L,OACbvO,SA3EjB,iEAmFC,OAnFD,UAmFO6M,YAAIlE,GAAiBM,QAAQ6E,IAnFpC,QAoFC,OApFD,UAoFOjB,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,iBAAkBC,OAAO,KApFzE,gCAsFC,OAtFD,oCAsFOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAtF1E,QAuFC,OAvFD,UAuFOV,YAAIlE,GAAiBO,QAAQ,KAAE1G,KAAKiB,OAvF3C,QAwFC,OAxFD,UAwFOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,iBAAkBC,OAAO,KAxFzE,sDA4FA,SAAU4G,KAAV,6EACH,OADG,SACG2H,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KAD5E,OAEkB,OAFlB,SAEwBwO,YAAOC,GAF/B,OAGmB,OADhBS,EAFH,gBAGyBV,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UAH9F,OAKgB,OAFb3C,EAHH,0BAKsBmN,YAAKpJ,EAAK,CAC3B7D,KAAM,OACNkC,IAAI,WAAD,OAAapC,EAAc4N,KAC9BtL,IAAI,eACGoL,EAAa/K,UATzB,QAaC,OAbD,SAKQD,EALR,EAKQA,KALR,UAaOqK,YAAIlE,GAAiB8D,YAAY,CAAC+B,MAAOC,GAAmBC,MAAM,KAbzE,QAcC,OAdD,UAcO7B,YAAIlE,GAAiBM,QAAQzG,IAdpC,QAeC,OAfD,UAeOqK,YAAIlE,GAAiB6B,iBAf5B,YAgBKhI,EAAK8K,UAAW9K,EAAKkL,IAhB1B,iBAiBK,OAjBL,UAiBWb,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAQ,WAAD,OAAa9K,EAAKkL,IAAlB,wBACPH,MAAO,aAnBhB,QAsBC,OAtBD,UAsBOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KAtBhF,gCAwBC,OAxBD,oCAwBOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAxB1E,QAyBC,OAzBD,UAyBOV,YAAIlE,GAAiBO,QAAQ,KAAE1G,KAAKiB,OAzB3C,QA0BC,OA1BD,UA0BOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KA1BhF,sDA8BA,SAAU6G,KAAV,mFACH,OADG,SACG0H,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KAD5E,OAEiB,OAFjB,SAEuBwO,YAAOC,GAF9B,OAIe,OAFZ4B,EAFH,yBAIqB7B,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAJzE,OAKuB,OADhBqJ,EAJP,iBAK6BP,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UALlG,QAQgB,OAHT3C,EALP,OAMO8N,EAAUP,EAAMrJ,IAAI,WACpBhE,EAAOqN,EAAMrJ,IAAI,QAPxB,UAQsBiJ,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAI,WAAD,OAAapC,EAAc4N,IAA3B,YAAkCiB,EAAY3K,IAAI,QACrD5B,IAAI,eACGuM,EAAYlM,UAZxB,QAeC,OAfD,SAQQD,EARR,EAQQA,KARR,UAeOqK,YAAIlE,GAAiB8D,YAAY,CAAC+B,MAAOI,GAAoBF,MAAM,KAf1E,QAgBC,OAhBD,UAgBO7B,YAAIlE,GAAiBM,QAAQzG,IAhBpC,QAiBC,OAjBD,UAiBOqK,YAAIlE,GAAiB8B,QAAQ,CAACzK,OAAM6N,GAAID,KAjB/C,YAkBKpL,EAAK8K,UAAW9K,EAAKkL,IAlB1B,iBAmBK,OAnBL,UAmBWb,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAS9K,EAAK8K,QACdC,MAAO,aArBhB,QAwBC,OAxBD,UAwBOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KAxBhF,gCA0BC,OA1BD,oCA0BOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WA1B1E,QA2BC,OA3BD,UA2BOV,YAAIlE,GAAiBO,QAAQ,KAAE1G,KAAKiB,OA3B3C,QA4BC,OA5BD,UA4BOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KA5BhF,sDAiCA,SAAU8G,KAAV,2EACH,OADG,SACGyH,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,kBAAmBC,OAAO,KADtE,OAGuB,OAHvB,kBAG6BwO,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UAHlG,OAIgB,OADT3C,EAHP,gBAIsBmN,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAI,SAAD,OAAWpC,EAAc4N,OANjC,OAQC,OARD,SAIQlL,EAJR,EAIQA,KAJR,UAQOqK,YAAIlE,GAAiBuB,mBAAmB1H,IAR/C,QASC,OATD,UASOqK,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,kBAAmBC,OAAO,KAT1E,gCAWC,OAXD,oCAWOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAX1E,QAYC,OAZD,UAYOV,YAAIlE,GAAiBwB,iBAAiB,KAAE3H,KAAKiB,OAZpD,QAaC,OAbD,UAaOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,kBAAmBC,OAAO,KAb1E,sDAkBA,SAAU+G,KAAV,6EACH,OADG,SACGwH,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,oBAAqBC,OAAO,KADxE,OAGe,OAHf,kBAGqBwO,aAAO,qBAAE/I,iBAAuCC,IAAI,uBAHzE,OAIuB,OADhBqJ,EAHP,gBAI6BP,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UAJlG,OAKgB,OADT3C,EAJP,iBAKsBmN,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAI,YAAD,OAAcpC,EAAc4N,IAA5B,iBAAwCL,KAPhD,QASC,OATD,SAKQ7K,EALR,EAKQA,KALR,UASOqK,YAAIlE,GAAiBkC,qBAAqBrI,IATjD,QAUC,OAVD,UAUOqK,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,oBAAqBC,OAAO,KAV5E,gCAYC,OAZD,oCAYOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAZ1E,QAaC,OAbD,UAaOV,YAAIlE,GAAiBmC,mBAAmB,KAAEtI,KAAKiB,OAbtD,QAcC,OAdD,UAcOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,oBAAqBC,OAAO,KAd5E,uDAkBA,SAAUgH,KAAV,mFACH,OADG,SACGuH,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,2BAA4BC,OAAO,KAD/E,OAE8B,OAF9B,SAEoCwO,YAAOC,GAF3C,OAIe,OAFZ8B,EAFH,yBAIqB/B,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAJzE,OAKuB,OADhBqJ,EAJP,iBAK6BP,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UALlG,QAQgB,OAHT3C,EALP,OAMO8N,EAAUP,EAAMrJ,IAAI,WACpBhE,EAAOqN,EAAMrJ,IAAI,QAPxB,UAQsBiJ,YAAKpJ,EAAK,CAC3B7D,KAAM,OACNkC,IAAI,SAAD,OAAWpC,EAAc4N,KAC5BtL,IAAI,eACGyM,EAAyBpM,UAZrC,QAeC,OAfD,SAQQD,EARR,EAQQA,KARR,UAeOqK,YAAIlE,GAAiBqC,yBAAyBxI,IAfrD,QAgBC,OAhBD,UAgBOqK,YAAIlE,GAAiB8B,QAAQ,CAACzK,OAAM6N,GAAID,KAhB/C,YAiBKpL,EAAK8K,UAAW9K,EAAKkL,IAjB1B,iBAkBK,OAlBL,UAkBWb,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAQ,SAAD,OAAW9K,EAAKkL,IAAhB,wBACPH,MAAO,aApBhB,QAuBC,OAvBD,UAuBOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,2BAA4BC,OAAO,KAvBnF,gCAyBC,OAzBD,oCAyBOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAzB1E,QA0BC,OA1BD,UA0BOV,YAAIlE,GAAiBsC,uBAAuB,KAAEzI,KAAKiB,OA1B1D,QA2BC,OA3BD,UA2BOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,2BAA4BC,OAAO,KA3BnF,uDA+BA,SAAUiH,KAAV,6EACH,OADG,SACGsH,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KAD5E,OAEiB,OAFjB,SAEuBwO,YAAOC,GAF9B,OAIuB,OAFpB+B,EAFH,yBAI6BhC,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UAJlG,OAKgB,OADT3C,EAJP,iBAKsBmN,YAAKpJ,EAAK,CAC3B7D,KAAM,OACNkC,IAAI,WAAD,OAAapC,EAAc4N,KAC9BtL,IAAI,eACG0M,EAAYrM,UATxB,QAaC,OAbD,SAKQD,EALR,EAKQA,KALR,UAaOqK,YAAIlE,GAAiB8D,YAAY,CAAC+B,MAAOO,GAAmBL,MAAM,KAbzE,QAcC,OAdD,UAcO7B,YAAIlE,GAAiBmB,sBAAsBtH,IAdlD,QAeC,OAfD,UAeOqK,YAAIlE,GAAiBiC,iBAf5B,YAgBKpI,EAAK8K,UAAW9K,EAAKkL,IAhB1B,iBAiBK,OAjBL,UAiBWb,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAQ,WAAD,OAAa9K,EAAKkL,IAAlB,0BACPH,MAAO,aAnBhB,QAsBC,OAtBD,UAsBOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KAtBhF,QAuBC,OAvBD,UAuBOuO,YAAIlE,GAAiB8D,YAAY,CAACpO,IAAK,kBAAmBC,OAAO,KAvBxE,gCAyBC,OAzBD,oCAyBOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAzB1E,QA0BC,OA1BD,UA0BOV,YAAIlE,GAAiBoB,oBAAoB,KAAEvH,KAAKiB,OA1BvD,QA2BC,OA3BD,UA2BOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,wBAAyBC,OAAO,KA3BhF,uDA+BA,SAAUkH,KAAV,mFACH,OADG,SACGqH,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,uBAAwBC,OAAO,KAD3E,OAEiB,OAFjB,SAEuBwO,YAAOC,GAF9B,OAIe,OAFZ+B,EAFH,yBAIqBhC,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAJzE,OAKuB,OADhBqJ,EAJP,iBAK6BP,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UALlG,QAQgB,OAHT3C,EALP,OAMO8N,EAAUP,EAAMrJ,IAAI,WACpBhE,EAAOqN,EAAMrJ,IAAI,QAPxB,UAQsBiJ,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAI,WAAD,OAAapC,EAAc4N,IAA3B,YAAkCoB,EAAY9K,IAAI,QACrD5B,IAAI,eACG0M,EAAYrM,UAZxB,QAeC,OAfD,SAQQD,EARR,EAQQA,KARR,UAeOqK,YAAIlE,GAAiB8D,YAAY,CAAC+B,MAAOQ,GAAoBN,MAAM,KAf1E,QAgBC,OAhBD,UAgBO7B,YAAIlE,GAAiBM,QAAQzG,IAhBpC,QAiBC,OAjBD,UAiBOqK,YAAIlE,GAAiB8B,QAAQ,CAACzK,OAAM6N,GAAID,KAjB/C,YAkBKpL,EAAK8K,UAAW9K,EAAKkL,IAlB1B,iBAmBK,OAnBL,UAmBWb,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAQ,WAAD,OAAa9K,EAAKkL,IAAlB,0BACPH,MAAO,aArBhB,QAwBC,OAxBD,UAwBOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,uBAAwBC,OAAO,KAxB/E,gCA0BC,OA1BD,oCA0BOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WA1B1E,QA2BC,OA3BD,UA2BOV,YAAIlE,GAAiBO,QAAQ,KAAE1G,KAAKiB,OA3B3C,QA4BC,OA5BD,UA4BOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,uBAAwBC,OAAO,KA5B/E,uDAgCA,SAAUmH,KAAV,+EACH,OADG,SACGoH,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,qBAAsBC,OAAO,KADzE,OAEc,OAFd,SAEoBwO,YAAOC,GAF3B,OAGyB,OADtBkC,EAFH,gBAG+BnC,YAAOC,GAHtC,OAKuB,OAFpBtI,EAHH,0BAK6BqI,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UALlG,QAMgB,OADT3C,EALP,iBAMsBmN,YAAKpJ,EAAK,CAC3B7D,KAAM,OACNkC,IAAI,WAAD,OAAapC,EAAc4N,KAC9BtL,IAAI,eACG6M,EAASxM,UAVrB,oBAMQD,EANR,EAMQA,KAQPiC,EAAoByK,UAChB1M,EAAK8K,UAAW9K,EAAKkL,IAf1B,iBAgBK,OAhBL,UAgBWb,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAQ,WAAD,OAAa9K,EAAKkL,IAAlB,0BACPH,MAAO,aAlBhB,QAsBC,OAtBD,UAsBOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,qBAAsBC,OAAO,KAtB7E,QAuBC,OAvBD,UAuBOuO,YAAIlE,GAAiB8D,YAAY,CAACpO,IAAK,eAAgBC,OAAO,KAvBrE,gCAyBC,OAzBD,oCAyBOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAzB1E,QA0BC,OA1BD,UA0BOV,YAAIlE,GAAiByC,iBAAjB,OA1BX,QA2BC,OA3BD,UA2BOyB,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,qBAAsBC,OAAO,KA3B7E,uDA+BA,SAAUoH,KAAV,6EACH,OADG,SACGmH,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,iBAAkBC,OAAO,KADrE,OAGe,OAHf,kBAGqBwO,aAAO,qBAAE/I,iBAAuCC,IAAI,oBAHzE,OAIuB,OADhBqJ,EAHP,gBAI6BP,aAAO,qBAAE/I,iBAAuCC,IAAI,iBAAiBvB,UAJlG,OAKgB,OADT3C,EAJP,iBAKsBmN,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAI,YAAD,OAAcpC,EAAc4N,IAA5B,iBAAwCL,KAPhD,QASC,OATD,SAKQ7K,EALR,EAKQA,KALR,UASOqK,YAAIlE,GAAiB2C,mBAAmB9I,IAT/C,QAUC,OAVD,UAUOqK,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,iBAAkBC,OAAO,KAVzE,gCAYC,OAZD,oCAYOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAZ1E,QAaC,OAbD,UAaOV,YAAIlE,GAAiB4C,iBAAiB,KAAE/I,KAAKiB,OAbpD,QAcC,OAdD,UAcOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,iBAAkBC,OAAO,KAdzE,uDAkBA,SAAUqH,KAAV,yEACH,OADG,SACGkH,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,sBAAuBC,OAAO,KAD1E,OAGgB,OAHhB,kBAGsB2O,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAK,aALV,OAOC,OAPD,SAGQM,EAHR,EAGQA,KAHR,SAOOqK,YAAIlE,GAAiB8C,oBAAoBjJ,IAPhD,OAQC,OARD,UAQOqK,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,sBAAuBC,OAAO,KAR9E,gCAUC,OAVD,oCAUOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAV1E,QAWC,OAXD,UAWOV,YAAIlE,GAAiB+C,kBAAkB,KAAElJ,KAAKiB,OAXrD,QAYC,OAZD,UAYOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,sBAAuBC,OAAO,KAZ9E,uDAgBA,SAAUsH,KAAV,yEACH,OADG,SACGiH,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,yBAA0BC,OAAO,KAD7E,OAGgB,OAHhB,kBAGsB2O,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAK,mBALV,OAOC,OAPD,SAGQM,EAHR,EAGQA,KAHR,SAOOqK,YAAIlE,GAAiBiD,uBAAuBpJ,IAPnD,OAQC,OARD,UAQOqK,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,yBAA0BC,OAAO,KARjF,gCAUC,OAVD,oCAUOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAV1E,QAWC,OAXD,UAWOV,YAAIlE,GAAiBkD,qBAAqB,KAAErJ,KAAKiB,OAXxD,QAYC,OAZD,UAYOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,yBAA0BC,OAAO,KAZjF,uDAgBA,SAAUuH,KAAV,yEACH,OADG,SACGgH,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,uBAAwBC,OAAO,KAD3E,OAEuB,OAFvB,SAE6BwO,YAAOC,GAFpC,OAIgB,OAFbvI,EAFH,yBAIsByI,YAAKpJ,EAAK,CAC3B7D,KAAM,SACNkC,IAAK,UAAYsC,EAAkBR,IAAI,SAN5C,OAQC,OARD,WAIQxB,KAJR,UAQOqK,YAAIlE,GAAiB6C,gBAR5B,QASC,OATD,UASOqB,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAQ,GAAD,OAAK9I,EAAkBR,IAAI,QAA3B,cAAwCQ,EAAkBR,IAAI,OAA9D,0BACPuJ,MAAO,aAXZ,QAaC,OAbD,UAaOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,uBAAwBC,OAAO,KAb/E,gCAeC,OAfD,oCAeOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAf1E,QAgBC,OAhBD,UAgBOV,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAhB1E,QAiBC,OAjBD,UAiBOV,YAAIlE,GAAiBsD,kBAAkB,KAAEzJ,KAAKiB,OAjBrD,QAkBC,OAlBD,UAkBOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,uBAAwBC,OAAO,KAlB/E,uDAsBA,SAAUwH,KAAV,yEACH,OADG,SACG+G,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,0BAA2BC,OAAO,KAD9E,OAGgB,OAHhB,kBAGsB2O,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAK,aALV,OAOC,OAPD,SAGQM,EAHR,EAGQA,KAHR,SAOOqK,YAAIlE,GAAiBM,QAAQ,CAACkG,kBAAmB3M,EAAK4M,cAP7D,OAQC,OARD,UAQOvC,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,0BAA2BC,OAAO,KARlF,gCAUC,OAVD,oCAUOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAV1E,QAWC,OAXD,UAWOV,YAAIlE,GAAiBO,QAAQ,KAAE1G,KAAKiB,OAX3C,QAYC,OAZD,UAYOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,0BAA2BC,OAAO,KAZlF,uDAgBA,SAAUyH,KAAV,yEAEgB,OAFhB,kBAEsBkH,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAK,gBAJV,OAOC,OAPD,SAEQM,EAFR,EAEQA,KAFR,SAOOqK,YAAIlE,GAAiBC,wBAAwBpG,IAPpD,OAQCd,QAAQC,IAAI,kBARb,wBAUC,OAVD,oCAUOkL,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,kBAAmBC,MAAO,WAVhF,QAaiC,OAFhC7L,QAAQC,IAAI,mBAXb,oBAauCmL,YAAOC,GAb9C,eAcyBY,KAAK,SAd9B,kHAqBA,SAAU3H,KAAV,2FACH,OADG,SACG6G,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,sBAAuBC,OAAO,KAD1E,OAG+B,OAH/B,kBAGqCwO,YAAOC,GAH5C,OA4BgB,OAzBTrI,EAHP,OAIK2I,EAAQ,GACkB,UAA1B3I,IACI2K,EAAQ,IAAIlQ,MACVmQ,SAAS,EAAG,EAAG,EAAG,IACpBC,EAAM,IAAIpQ,MACVmQ,SAAS,GAAI,GAAI,GAAI,KACzBjC,EAAK,gBAAYgC,EAAMG,cAAlB,gBAAuCD,EAAIC,gBACf,SAA1B9K,GACH2K,EAAQI,MAASC,SAAS,EAAG,QAAQC,UACrCJ,EAAM,IAAIpQ,MACVmQ,SAAS,GAAI,GAAI,GAAI,KACzBjC,EAAK,gBAAYgC,EAAZ,gBAAyBE,IACG,UAA1B7K,GACH2K,EAAQI,MAASC,SAAS,GAAI,QAAQC,UACtCJ,EAAM,IAAIpQ,MACVmQ,SAAS,GAAI,GAAI,GAAI,KACzBjC,EAAK,gBAAYgC,EAAMG,cAAlB,gBAAuCD,EAAIC,gBACf,SAA1B9K,IACH2K,EAAQI,MAASC,SAAS,IAAK,QAAQC,UACvCJ,EAAM,IAAIpQ,MACVmQ,SAAS,GAAI,GAAI,GAAI,KACzBjC,EAAK,gBAAYgC,EAAMG,cAAlB,gBAAuCD,EAAIC,gBAzBrD,UA4BsBvC,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAK,YAAcmL,IA9BxB,QAiCC,OAjCD,WA4BQ7K,KA5BR,UAiCOqK,YAAIlE,GAAiB0D,gBAAgB,CACvCiB,QAAS,6DACTC,MAAO,aAnCZ,QAqCC,OArCD,UAqCOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,sBAAuBC,OAAO,KArC9E,gCAwCC,OAxCD,oCAwCOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAxC1E,QAyCC,OAzCD,UAyCOV,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,sBAAuBC,OAAO,KAzC9E,uDA6CA,SAAU2H,KAAV,yEACH,OADG,SACG4G,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,kBAAmBC,OAAO,KADtE,OAGgB,OAHhB,kBAGsB2O,YAAKpJ,EAAK,CAC3B7D,KAAM,MACNkC,IAAI,gBALT,OAOC,OAPD,SAGQM,EAHR,EAGQA,KAHR,SAOOqK,YAAIlE,GAAiBM,QAAQ,CAAC2G,MAAOpN,EAAKoN,SAPjD,OAQC,OARD,UAQO/C,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,kBAAmBC,OAAO,KAR1E,gCAUC,OAVD,oCAUOuO,YAAIlE,GAAiB0D,gBAAgB,CAACiB,QAAS,KAAE9K,KAAKiB,KAAM8J,MAAO,WAV1E,QAWC,OAXD,UAWOV,YAAIlE,GAAiBO,QAAQ,KAAE1G,KAAKiB,OAX3C,QAYC,OAZD,UAYOoJ,YAAIlE,GAAiB+D,cAAc,CAACrO,IAAK,kBAAmBC,OAAO,KAZ1E,uDAgBP,SAAU4H,KAAV,iEACI,OADJ,SACU2J,YAAWnI,GAAe/C,IADpC,wCAKA,SAAUwB,KAAV,iEACI,OADJ,SACU0J,YAAW/H,GAAkBlD,IADvC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACUyJ,YAtxBuB,8BAsxBOhL,IADxC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACUwJ,YAAW9H,GAAcjD,IADnC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACUuJ,YA1xBuB,8BA0xBO9K,IADxC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACUsJ,YAAW5H,GAAkB/C,IADvC,wCAIA,SAAUsB,KAAV,iEACI,OADJ,SACUqJ,YAAWpH,GAAgBtD,IADrC,wCAIA,SAAUsB,KAAV,iEACI,OADJ,SACUoJ,YAAW1H,GAAiBnD,IADtC,wCAIA,SAAU0B,KAAV,iEACI,OADJ,SACUoJ,YAAU1H,GAAWnD,IAD/B,wCAIA,SAAU0B,KAAV,iEACI,OADJ,SACUkJ,YA1xB0B,iCA0xBOvK,IAD3C,wCAIA,SAAUsB,KAAV,iEACI,OADJ,SACUiJ,YAAW3H,GAAkB3C,IADvC,wCAIA,SAAUsB,KAAV,iEACI,OADJ,SACUgJ,YAAWnH,GAAgBlD,IADrC,wCAIA,SAAUsB,KAAV,iEACI,OADJ,SACU+I,YAAWxH,GAAiBhD,IADtC,wCAIA,SAAU0B,KAAV,iEACI,OADJ,SACU8I,YAAW7H,GAAevC,IADpC,wCAIA,SAAUuB,KAAV,iEACI,OADJ,SACU6I,YA3yBmB,0BA2yBOzK,IADpC,wCAIA,SAAU6B,KAAV,iEACI,OADJ,SACU4I,YAAWvH,GAAe5C,IADpC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACU2I,YA7yBoB,2BA6yBOlK,IADrC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACU0I,YA3yBuB,8BA2yBOjK,IADxC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACUyI,YAAWtH,GAAe1C,IADpC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACUwI,YAxyBwB,+BAwyBO/J,IADzC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACUuI,YA3yBgB,uBA2yBO9J,IADjC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACUsI,YAAWrH,GAAexC,IADpC,wCAIA,SAAUwB,KAAV,iEACI,OADJ,SACUqI,YA9yBe,sBA8yBO5J,IADhC,wCAIO,SAAUwB,KAAV,iEACH,OADG,SACGsI,YAAI,CACNC,YAAK9J,IACL8J,YAAK7J,IACL6J,YAAK3J,IACL2J,YAAK5J,IACL4J,YAAK1J,IACL0J,YAAKzJ,IACLyJ,YAAKxJ,IACLwJ,YAAKvJ,IACLuJ,YAAKtJ,IACLsJ,YAAKrJ,IACLqJ,YAAKpJ,IACLoJ,YAAKnJ,IACLmJ,YAAKlJ,IACLkJ,YAAKjJ,IACLiJ,YAAKhJ,IACLgJ,YAAK/I,IACL+I,YAAK9I,IACL8I,YAAK7I,IACL6I,YAAK5I,IACL4I,YAAK3I,IACL2I,YAAK1I,IACL0I,YAAKzI,IACLyI,YAAKxI,MAxBN,wCA4BP,IAAMyI,GAAeC,iBAAO,CACxBC,aAAc,CACVC,KAAM,GACNhQ,KAAM,CACFiQ,KAAM,CACFC,KAAK,EACLC,MAAM,EACN7B,MAAM,GAEVJ,SAAU,CACNgC,KAAK,EACLC,MAAM,EACN7B,MAAM,GAEV8B,MAAO,CACHF,KAAK,EACLC,MAAM,EACN7B,MAAM,KAIlB/B,eAAgB,GAChBC,eAAe,EACf5D,cAAc,EACdyH,YAAa,GACbxH,QAAS,GACTpH,MAAO,GACP6O,oBAAqB,GACrBnM,gBAAiB,GACjBoM,mBAAoB,GACpBC,mBAAoB,GACpBC,gBAAiB,GACjBC,kBAAmB,GACnBjC,yBAA0B,GAC1BkC,gBAAiB,CACbC,SAAU,GACVC,MAAO,CAACC,MAAO,EAAGC,KAAM,EAAGC,WAAY,IAE3CC,iBAAkB,EAClBtD,WAAY,CACRC,OAAQ,GACRE,cAAe,GACfC,aAAc,GACdP,QAAS,IAEb0D,gBAAiB,CACbC,UAAW,GACXN,MAAO,CAACC,MAAO,EAAGC,KAAM,EAAGC,WAAY,IAE3CI,kBAAmB,EACnBC,eAAgB,CACZC,SAAU,GACVT,MAAO,CAACC,MAAO,EAAGC,KAAM,EAAGC,WAAY,IAE3CO,iBAAkB,EAClBC,aAAc,GACdC,YAAa,CACTC,SAAU,GACVb,MAAO,CAACC,MAAO,EAAGC,KAAM,EAAGC,WAAY,IAE3CW,cAAe,EACfC,cAAe,GACfC,eAAgB,GAChBC,iBAAkB,CACdhS,UAAW,GACXiS,OAAQ,IAEZhD,kBAAmB,GACnB7K,oBAAqB,GACrBE,kBAAmB,GACnBoL,MAAO,GACP9P,cAAe,GACfsS,QAAS,CACLC,wBAAwB,EACxBC,uBAAuB,EACvBC,qBAAqB,EACrBC,mBAAmB,EACnBC,0BAA0B,EAC1BC,uBAAuB,EACvBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,iBAAiB,EACjBC,gBAAgB,EAChBC,wBAAwB,EACxBC,qBAAqB,EACrBC,wBAAwB,EACxBC,sBAAsB,EACtBC,oBAAoB,EACpBC,yBAAyB,EACzBC,qBAAqB,EACrBC,gBAAgB,EAChBC,sBAAsB,EACtBC,iBAAiB,GAErBjF,MAAO,CACHkF,kBAAkB,EAClBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,gBAAgB,EAChBC,iBAAiB,EACjBC,kBAAkB,EAClBC,oBAAoB,GAExBC,gBAAiB,GACjBC,aAAc,CACVpU,KAAM,GACNsN,QAAS,GACTC,MAAO,MAKFkB,GAAoB,kBACpBM,GAAoB,kBACpBH,GAAqB,mBACrBI,GAAqB,mB,8CC5gC9BqF,GAAQ,CACRC,iBAAkB,CACdC,aAAc,CACVC,OAAQ,mBACRC,gBAAiB,QACjBC,OAAQ,oBACRC,UAAW,4BAEf1L,QAAS,CACL2L,MAAO,SAEX/S,MAAO,CACH+S,MAAO,UACPF,OAAQ,oBACRD,gBAAiB,YAGzBI,eAAgB,CACZN,aAAc,CACVC,OAAQ,EACRM,QAAS,IAGjBC,QAAS,CACLR,aAAc,CACVE,gBAAiB,UACjBG,MAAO,UACPI,IAAK,MACLC,MAAO,OAEXhM,QAAS,CACLwL,gBAAiB,UACjBG,MAAO,WAEX/S,MAAO,CACH4S,gBAAiB,UACjBG,MAAO,SAEXM,QAAS,CACLT,gBAAiB,UACjBG,MAAO,WAEXO,KAAM,CACFV,gBAAiB,UACjBG,MAAO,aAKbQ,G,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACT8L,QAAS,GACTC,MAAO,IALI,E,gEAUf+H,KAAKC,mBAAqBD,KAAKE,KAAKD,qB,gDAGdE,GAAW,IAC1BrB,EAAgBqB,EAASC,cAAcjT,OAAvC2R,aACA9G,EAAkB8G,EAAlB9G,QAASC,EAAS6G,EAAT7G,MACZD,GAAWC,IACX+H,KAAKC,mBAAmBlJ,gBAAgB,CAACiB,UAASC,UAClD+H,KAAKK,SAAS,CAACrI,UAASC,UACxB+H,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS,KAAMC,MAAO,U,+BAKtD,OACI,kBAAC,KAAD,CAAoBqI,IAAI,qBAAqBvB,MAAOA,S,GA3B5BwB,aAoC9BC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6Cb,K,yBCzCxDc,G,uKAhDD,IAAD,EACyEZ,KAAKD,MAA5Ec,EADF,EACEA,KAAMC,EADR,EACQA,QAASC,EADjB,EACiBA,OAAQC,EADzB,EACyBA,QAASC,EADlC,EACkCA,OAAQC,EAD1C,EAC0CA,OAAQC,EADlD,EACkDA,cAEnDC,EAAa,GAEjB,OALK,EACiEC,MAKlE,IAAK,OACDD,EAAa,CAAClI,MAAO,cACrB,MAEJ,IAAK,MACDkI,EAAa,CAAClI,MAAO,aAO7B,OACI,kBAAC,KAAD,CACI2H,KAAMA,EACNC,QAASA,EACTI,OAAQA,EACRC,cAAeA,EACfG,WAAYF,GAEZ,yBAAKG,UAAU,cACTR,GAAUE,EACR,6BACI,yBAAKM,UAAU,UACX,6BAAMR,IAEV,yBAAKQ,UAAU,WACVP,GAEL,yBAAKO,UAAU,UACX,6BAAMN,KAGZ,6BAAMD,S,GAxCPT,aCoKViB,G,kDAjKX,WAAYzB,GAAQ,IAAD,6BACf,cAAMA,IAGD7T,MAAQ,CACTuV,cAFkB,IAGlBC,UAAWvW,OAAOwW,WAClBC,WAAYzW,OAAO0W,YAAc,GACjCC,eAAgB,GAChBC,cAAc,GAGlB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAZX,E,iEAgBfjC,KAAKK,SAAS,CACVqB,UAAWvW,OAAOwW,WAClBC,WAAYzW,OAAO0W,YAAc,O,2CAKrC1W,OAAO+W,iBAAiB,SAAUlC,KAAKgC,sB,6CAIvC7W,OAAOgX,oBAAoB,SAAUnC,KAAKgC,sB,+BAGpC,IAAD,OACEjC,EAASC,KAATD,MAEP,OACI,yBAAKwB,UAAU,YACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,uBACVa,QAAS,kBAAM,EAAK/B,SAAS,CAAC0B,cAAe,EAAK7V,MAAM6V,kBACvD/B,KAAK9T,MAAM6V,cAAgB,kBAAC,KAAD,CAAWV,KAAK,OAAO/B,MAAM,UACzDU,KAAK9T,MAAM6V,cAAgB,kBAAC,KAAD,CAAWV,KAAK,OAAO/B,MAAM,WAE7D,yBAAKiC,UAAU,oBAGf,yBAAKA,UAAU,mBACVxB,EAAMsC,WAAWC,UAG1B,yBACIf,UAAU,kCACVxC,MAAO,CAACwD,QAAUvC,KAAK9T,MAAMwV,UAAY,IAAO,QAAU,SAC1D,yBAAKH,UAAU,eACVxB,EAAMsC,WAAW5B,SAAWV,EAAMsC,WAAW5B,QAAQ+B,KAAI,SAACC,EAAY1Z,GACnE,OACI,yBACIA,IAAKA,EACLwY,UAAS,qBAAgB,EAAKxB,MAAM3U,SAASsX,WAAaD,EAAWE,MAAQ,qBAC7EP,QAAS,WACL,EAAK/B,SAAS,CAAC0B,cAAc,IAC7B,EAAKhC,MAAM6C,QAAQvK,KAAKoK,EAAWE,QAGtCF,EAAWI,UAK5B,yBAAKtB,UAAWxB,EAAMsC,WAAWS,SAAW,sBAAwB,IAC/D/C,EAAMsC,WAAWS,UAClB,yBAAKvB,UAAU,2BAA2BwB,MAAM,UAC3ChD,EAAMsC,WAAWW,YAEtB,yBAAKzB,UAAWxB,EAAMsC,WAAWS,SAAW,2BAA6B,IACpE/C,EAAMsC,WAAWY,SAAST,KAAI,SAACU,EAAMna,GAClC,OACI,yBACIA,IAAKA,EACLwY,UAAS,6BAAwB,EAAKxB,MAAM3U,SAASsX,SAASS,SAASD,EAAKP,OAAS,8BAErF,yBAAKpB,UAAU,qBACVa,QAAS,WACL,EAAK/B,SAAS,CAAC0B,cAAc,IAC7B,EAAKhC,MAAM6C,QAAQvK,KAAK6K,EAAKP,QAEjCO,EAAKE,OAERF,EAAKG,SAAWH,EAAKI,UACvB,yBAAK/B,UAAU,yBACVa,QAAS,WACDc,EAAKI,QACLJ,EAAKI,UACEJ,EAAKG,SACZ,EAAKtD,MAAM6C,QAAQvK,KAAK6K,EAAKG,WAGtC,kBAAC,KAAD,CAAUhC,KAAK,OACL/B,MAAO,EAAKS,MAAM3U,SAASsX,SAASS,SAASD,EAAKP,MAAQ,QAAU,kBAQxG3C,KAAK9T,MAAMwV,UAAY,KACzB,kBAAC6B,GAAD,CACI1C,KAAMb,KAAK9T,MAAM6V,aACjBjB,QAAS,kBAAM,EAAKT,SAAS,CAAC0B,cAAc,KAC5Cb,QAAQ,EACRC,eAAe,EACfE,KAAK,OACLL,QACI,yBAAKO,UAAU,cACX,yBAAKxC,MAAO,CAACS,QAAS,GAAIgE,UAAW,KAChCzD,EAAMsC,WAAWY,SAAST,KAAI,SAACU,EAAMna,GAClC,OACI,yBACIA,IAAKA,EACLwY,UAAS,6BAAwB,EAAKxB,MAAM3U,SAASsX,SAASS,SAASD,EAAKP,OAAS,8BAErF,yBAAKpB,UAAU,qBACVa,QAAS,WACL,EAAK/B,SAAS,CAAC0B,cAAc,IAC7B,EAAKhC,MAAM6C,QAAQvK,KAAK6K,EAAKP,QAEjCO,EAAKE,UAKtB,yBAAK7B,UAAU,eACVxB,EAAMsC,WAAW5B,SAAWV,EAAMsC,WAAW5B,QAAQ+B,KAAI,SAACC,EAAY1Z,GACnE,OACI,yBACIA,IAAKA,EACLwY,UAAS,qBAAgB,EAAKxB,MAAM3U,SAASsX,SAASS,SAASV,EAAWE,OAAS,qBACnFP,QAAS,WACL,EAAK/B,SAAS,CAAC0B,cAAc,IAC7B,EAAKhC,MAAM6C,QAAQvK,KAAKoK,EAAWE,QAGtCF,EAAWI,eAWhD,yBAAKtB,UAAU,eACVxB,EAAM0D,e,GA5JElD,a,mBCmFdmD,ICrFSnD,Y,yDDEpB,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTyX,UAAW,GAGf,EAAKC,cAAgB,EAAKA,cAAc3B,KAAnB,gBACrB,EAAK4B,kBAAoB,EAAKA,kBAAkB5B,KAAvB,gBARV,E,sDAYT6B,EAAOC,GACbA,EAAEC,iBACFhE,KAAKK,SAAS,CAACsD,UAAWG,IACtB9D,KAAKD,MAAMkE,YACXjE,KAAKD,MAAMkE,WAAWH,K,0CAKtB9D,KAAKD,MAAMmE,WACXlE,KAAKK,SAAS,CAACsD,UAAW3D,KAAKD,MAAMmE,c,sCAI5B,IAAD,OACPxZ,EAAQsV,KAAKD,MAAbrV,KAIL,OAHKA,IACDA,EAAO,SAGP,yBAAK6W,UAAS,oBAAe7W,GAAQqU,MAAO,CAACwD,QAAS,SAE9CvC,KAAKD,MAAMoE,MAAM3B,KAAI,SAAC4B,EAAON,GACzB,OACI,yBAAK/a,IAAK+a,EACLvC,UAAY,EAAKrV,MAAMyX,UAAY,IAAOG,EAAQ,wBAA0B,iBAC5E1B,QAAS,SAAC2B,GACN,EAAKM,UAAUP,EAAQ,EAAGC,KAQ/B,6BACKK,EAAME,iB,0CAWnC,IAAIR,EAAQ9D,KAAK9T,MAAMyX,UAAY,EAC/BS,EAAQpE,KAAKD,MAAMoE,MAAML,GACxBpZ,EAAQsV,KAAKD,MAAbrV,KAIL,OAHKA,IACDA,EAAO,SAGP,yBAAK6W,UAAS,oBAAe7W,IACxB0Z,EAAMG,U,+BAOf,OACI,yBAAKhD,UAAW,aACXvB,KAAK4D,gBACL5D,KAAK6D,yB,GA/EHtD,c,oBEDbiE,I,+DAOF,WAAYzE,GAAQ,IAAD,8BACf,cAAMA,IAHV0E,UAAYC,IAAMC,YAEC,EAgCnBC,UAAY,SAAC5b,GACT,EAAKqX,SAAS,CACVwE,aAAc7b,KAlCH,EAsCnB8b,aAAe,SAACC,GACZ,EAAK1E,SAAS,CAAC2E,QAAQ,KAvCR,EA0CnBC,aAAe,SAACF,GACR,EAAKN,UAAUS,UAAY,EAAKT,UAAUS,QAAQC,SAASJ,EAAMK,SACjE,EAAK/E,SAAS,CAAC2E,QAAQ,KA5CZ,EAgDnBK,WAAa,SAACrc,GACN,EAAKkD,MAAMoZ,YAActc,GACzB,EAAKqX,SAAS,CACViF,UAAWtc,KAnDJ,EAwDnBuc,mBAAqB,SAACC,EAAM1B,GAAW,IAC5B2B,EAAkB,EAAK1F,MAAvB0F,eAD2B,EAEX,CAACzc,MAAO8a,EAAO4B,MAAOF,GAAtCxc,EAF2B,EAE3BA,MAAO0c,EAFoB,EAEpBA,MACd,OACI,wBACI3c,IAAK+a,EACL9a,MAAOA,EACPoZ,QAAS,kBAAMqD,EAAeC,EAAM1c,SAGpC,uBAAGuY,UAAU,oBAAoBmE,GAASA,EAAM1c,OAAS0c,EAAM1c,MAAM2c,uBAhE7E,EAAKzZ,MAAQ,CACT8Y,QAAQ,EACRM,UAAW,KACXT,aAAc,MALH,E,gEAUf,GAAI7E,KAAKD,MAAM6F,KAAKC,OAAS,EAAG,CAAC,IACtBH,EAAS1F,KAAKD,MAAM6F,KAAK,GAAzBF,MACHI,EAAY,KACK,qBAAVJ,GACP1F,KAAK4E,WAAU,GACfkB,EAAYJ,IAEZ1F,KAAK4E,WAAU,GACfkB,EAAY9F,KAAKD,MAAM6F,KAAK,IAEhC5F,KAAKK,SAAS,CACViF,UAAWQ,IAInBC,SAAS7D,iBAAiB,YAAalC,KAAKiF,gB,6CAI5Cc,SAAS5D,oBAAoB,YAAanC,KAAKiF,gB,+BA0CzC,IACCW,EAAQ5F,KAAKD,MAAb6F,KACP,OACI,yBAAKtF,IAAKN,KAAKyE,WACX,yBAAK1F,MAAO,CAACiH,OAAQ,WAAY5D,QAASpC,KAAK8E,cAC3C,yBAAK/F,MAAO,CAACkH,MAAO,IAAKC,IAAI,mEAEjC,yBAAK3E,UAAS,mBAAcvB,KAAK9T,MAAM8Y,OAAS,OAAS,KACrD,wBAAIzD,UAAU,iBACTqE,EAAKC,OAAS,EAAID,EAAKpD,IAAIxC,KAAKuF,oBAAsB,4BAAI,iD,GAvF5DhF,cAAjBiE,GACK2B,aAAe,CAClBP,KAAM,IA6FCpB,UC3EA4B,I,yDAnBX,WAAYrG,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,GAHE,E,qDAMT,IAAD,EACwD8T,KAAKD,MAA3DqD,EADF,EACEA,KAAMhB,EADR,EACQA,QAAS9C,EADjB,EACiBA,MAAO2G,EADxB,EACwBA,MAAOI,EAD/B,EAC+BA,SAAUtH,EADzC,EACyCA,MAAO8D,EADhD,EACgDA,KACrD,OAAIA,GAIA,4BAAQtB,UAAU,cAAc8E,SAAUA,EAAUtH,MAAK,aAAGkH,QAAO3G,SAAUP,GACrEqD,QAAS,kBAAMA,MAAYgB,EAAK5V,mB,GAd/B+S,c,8CCArB,aAA8F/T,EAAUC,GAAxG,+CAAAC,EAAA,0DAAoBhC,YAApB,MAA2B,MAA3B,EAAuCiC,EAAvC,EAAkCC,IAAlC,IAA6CC,eAA7C,MAAuD,GAAvD,MAA2DC,WAA3D,MAAiE,GAAjE,MAAqEC,QAASC,OAA9E,MAAyF,GAAzF,EACQC,EAASvC,EACTkC,EAAMC,GAAO,UVHD,GUGC,gBAA4BF,GACzCI,EAAUC,EACVE,EAAOJ,EAAIK,KAAOL,EAAIK,OAASL,EAEpB,QAAXG,IAAkBA,EAAS,UANnC,KAQYA,EAAOG,cARnB,OASa,SATb,MAUa,QAVb,OAca,SAdb,MAea,QAfb,MAgBa,UAhBb,MAiBa,WAjBb,+BAWYF,OAAOG,EAXnB,oCAkBYH,EAAOI,KAAKC,UAAUL,GAlBlC,wEAwBID,EAASA,EAAOO,cAChBT,EAAO,aACHU,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYtE,YAAgB,MAExC2D,GA9BX,UAkCsBY,MAAMf,EAAK,CACzBK,SACAF,UACAG,SArCR,eAkCUU,EAlCV,iBAwC0BA,EAAIC,OACrBvB,OAAM,kBAAMsB,EAAIE,UAChBxB,OAAM,kBAAM,QA1CrB,WAwCUyB,EAxCV,OA4CSH,EAAIK,IAAqB,MAAfL,EAAIS,OA5CvB,uBA6Cc9B,EAAQ,IAAI2B,MAAMH,EAAQI,KAAOJ,EAAQI,KAAO,uBAChDP,IAAMA,EACZrB,EAAMW,KAAOa,GACQ,kBAAjBA,EAAQI,MAEgB,gBAAjBJ,EAAQI,QADfhD,OAAOC,SAASgD,KAAO,KAIrB7B,EArDd,YAwDQwB,GAA8B,UAAnBA,EAAQM,QAAuB7B,EAxDlD,uBAyDcD,EAAQ,IAAI2B,MAAMH,EAAQI,OAC1BP,IAAMA,EACZrB,EAAMW,KAAOa,GACQ,kBAAjBA,EAAQI,MAEgB,gBAAjBJ,EAAQI,QADfhD,OAAOC,SAASgD,KAAO,KAIrB7B,EAjEd,iCAoEW,CAACqB,MAAKV,KAAMa,EAAQO,WApE/B,6C,sBAuEeC,O,yFC+EA+X,G,kDA1IX,WAAYvG,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,GAHE,E,qDAMT,IAAD,EAC6G8T,KAAKD,MAAhHqD,EADF,EACEA,KAAMpa,EADR,EACQA,MAAOud,EADf,EACeA,YAAa7b,EAD5B,EAC4BA,KAAM8b,EADlC,EACkCA,UAAWC,EAD7C,EAC6CA,UAAWC,EADxD,EACwDA,QAASL,EADjE,EACiEA,SAAUM,EAD3E,EAC2EA,SAAUC,EADrF,EACqFA,QAASC,EAD9F,EAC8FA,YAE/FC,EAAS,GAcb,GAbIpc,GAAiB,kBAATA,IACRoc,EAAOC,QAAU,KACjBD,EAAON,UAAY,MACjB9b,GAAiB,YAATA,GACVoc,EAAOC,QAAU,UACjBD,EAAON,UAAY,KACZ9b,GAAiB,WAATA,GAEX8b,IACAM,EAAON,UAAYA,GAIvB9b,GAAiB,aAATA,EACR,OACI,yBAAK6W,UAAU,cACX,yBAAKA,UAAU,eACV6B,GAEL,yBAAK7B,UAAU,iBACX,4CAAUA,UAAU,yBAAyB8E,SAAUA,EAC7Crd,MAAOA,GAAgB,GAAIge,SAAU,SAACjD,GAAD,OAAOwC,EAAYxC,EAAEqB,UAAa0B,MAI1F,GAAIpc,GAAiB,WAATA,EAAmB,CAClC,IAAMuc,EAAcN,KAAc3d,IAAW4d,IAAY5d,EAAMA,OAAW4d,GAA4B,IAAjB5d,EAAM6c,QAC3F,OACI,yBAAKtE,UAAU,cACX,yBAAKA,UAAU,eACV6B,GAEL,yBACI7B,UAAW0F,EAAa,sBAAwB,iBAChD,yBACI1F,UAAW0F,EAAa,4CAA8C,qBACtE,kBAAC,KAAD,CACIC,mBAAmB,EACnBN,QAASA,EACTP,SAAUA,EACVrd,MAAOA,EACPge,SAAU,SAACG,GAAD,OAAoBZ,EAAYY,IAC1CT,QAASA,EACTU,OAAQ,CAACjI,gBAAkBwH,IAAa3d,EAAS,MAAQ,QACzDqe,eAAgB,SAAAC,GAAM,OAAIA,EAAOxZ,KAAOwZ,EAAOxZ,KAAOwZ,EAAOte,OAC7Due,eAAgB,SAAAD,GAAM,OAAIA,EAAOte,YAMlD,GAAI0B,GAAiB,gBAATA,EACf,OACI,yBAAK6W,UAAU,cACX,yBAAKA,UAAU,eACV6B,GAEL,yBACI7B,WAAYoF,GAAc3d,GAAUA,EAAM,GAA+B,gBAAxB,uBACjD,yBACIuY,WAAYoF,GAAc3d,GAAUA,EAAM,GAA6E,4CAAtE,qEACjD,kBAAC,KAAD,CACIke,mBAAmB,EACnBN,QAASA,EACTY,cAAY,EACZC,gBAAc,EACdZ,YAAaA,EACbR,SAAUA,EACVrd,MAAOA,EACPge,SAAU,SAACG,GAAD,OAAoBZ,EAAYY,IAC1CT,QAASA,EACTU,OAAQ,CAACjI,gBAAkBwH,IAAa3d,EAAS,MAAQ,QACzDqe,eAAgB,SAAAC,GAAM,OAAIA,EAAOxZ,KAAOwZ,EAAOxZ,KAAOwZ,EAAOte,OAC7Due,eAAgB,SAAAD,GAAM,OAAIA,EAAOte,YAQzD,IAAI0e,GAAa,EACjB,OAAQhd,GACJ,IAAK,SACDgd,GAAc1e,IAAUA,EAAM2e,WAC9B,MACJ,IAAK,gBACDD,GAAc1e,IAAUA,EAAM2e,YAAc3e,EAAM2e,WAAW9B,SAAW+B,OAAOd,EAAON,WACtF,MAEJ,IAAK,WACDkB,GAAc1e,IAAUA,EAAM2e,YAAc3e,EAAM2e,WAAW9B,OAAS+B,OAAOnB,GAC7E,MAEJ,QACIiB,GAAc1e,EAGtB,OACI,yBAAKuY,UAAU,cACX,yBAAKA,UAAU,eACV6B,GAEL,yBACI7B,UAAYoF,GAAYe,EAAc,sBAAwB,iBAC9D,yCACIrB,SAAUA,EACV9E,UAAYoF,GAAYe,EAAc,4CAA8C,oBACpF1e,MAAOA,EAAO0B,KAAe,WAATA,EAAoB,SAAWA,EACnDsc,SAAU,SAACjD,GACP,GAAa,WAATrZ,GAA8B,kBAATA,EAA0B,EAEnB,QAAvB0Y,EAAKhW,eAA2B,IAAIya,OAD9B,YACyCC,KAAK/D,EAAEqB,OAAOpc,QAEvD+a,EAAEqB,OAAOpc,OAA2C,kBAA3B4e,OAAO7D,EAAEqB,OAAOpc,SADhDud,EAAYxC,EAAEqB,aAKlBmB,EAAYxC,EAAEqB,UAEf0B,U,GAnIXvG,aCFPmG,GAAU,CACnB,CAAC1d,MAAO,OAAQ0c,MAAO,QACvB,CAAC1c,MAAO,SAAU0c,MAAO,WAGvBqC,GAAc,CAChB,CAAChf,IAAK,WAAY+E,KAAM,WAAY9E,MAAO,YAC3C,CAACD,IAAK,QAAS+E,KAAM,QAAS9E,MAAO,UA8gB1Bgf,G,kDA1gBX,WAAYjI,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACT+b,iBAAiB,EACjBC,eAAe,EACfC,iBAAkB,GAClBC,aAAa,EACbC,iBAAiB,EACjBC,mBAAoB,GACpBC,eAAe,EACfC,aAAc,GACdC,uBAAuB,EACvBC,qBAAsB,GACtBC,oBAAoB,EACpB3Q,QAAS,CACLtN,KAAM,GACNoD,KAAM,KAId,EAAK8a,eAAiB,EAAKA,eAAe3G,KAApB,gBACtB,EAAK4G,iBAAmB,EAAKA,iBAAiB5G,KAAtB,gBACxB,EAAK6G,mBAAqB,EAAKA,mBAAmB7G,KAAxB,gBAvBX,E,sGA0BI8G,G,oFACnB/I,KAAKK,SAAS,CAAC+H,aAAa,IACxBtb,EAAM,GACNF,EAAM,iBACNmc,EAAKC,aACLlc,EAAM,CACF,eAAgBic,EAAKC,YACrB,kBAAmBD,EAAKE,gBAE5Brc,EAAMA,EAAM,YAAcoT,KAAKD,MAAMgJ,KAAK3Q,MAE1CtL,EAAM,CACF,YAAaic,EAAKG,UAClBC,MAAOJ,EAAKI,MACZC,OAAQL,EAAKK,OAAOpgB,MACpBqgB,QAASN,EAAKM,QACdC,IAAKP,EAAKO,IACVC,SAAUR,EAAKS,cAAc7B,WAC7B7M,KAAMiO,EAAKjO,KAAK9R,OAEpB4D,GAAYmc,EAAK3Q,K,kBAGIqR,GAAI,CAAC/e,KAAM,MAAOkC,MAAKE,Q,iBAArCI,E,EAAAA,OACsB,UAAhBA,EAAKmB,QAKd2R,KAAKD,MAAM1J,kBACPnJ,EAAK8K,SACLgI,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS9K,EAAK8K,QAASC,MAAO,aAN1D/K,EAAKiB,MACL6R,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS9K,EAAKiB,KAAM8J,MAAO,U,kDAS/D+H,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS,KAAE2P,WAAY1P,MAAO,U,QAE9D+H,KAAKK,SAAS,CAAC+H,aAAa,I,mMAGPW,G,gFACrB/I,KAAKK,SAAS,CAAC+H,aAAa,I,kBAEHqB,GAAI,CAAC/e,KAAM,SAAUkC,IAAK,iBAAmBmc,EAAK3Q,M,gBAAhElL,E,EAAAA,KACP8S,KAAKK,SAAS,CACV+H,aAAa,EACbO,oBAAoB,EACpB3Q,QAAS,CAACtN,KAAM,UAAWoD,KAAMZ,EAAK8K,WAG1CgI,KAAKD,MAAM1J,kBACX2J,KAAKK,SAAS,CAACgI,iBAAiB,EAAOD,aAAa,I,kDAEpDpI,KAAKK,SAAS,CAAC+H,aAAa,EAAOC,iBAAiB,I,wJAI1C,IACPG,EAAgBxI,KAAK9T,MAArBsc,aACP,OAAQA,EAAaU,YAAcV,EAAagB,gBAAkBhB,EAAaY,SAAWZ,EAAac,M,+BAGjG,IAAD,SAC+BtJ,KAAKD,MAAlCgJ,EADF,EACEA,KAAMre,EADR,EACQA,KAAMgf,EADd,EACcA,cACZ7O,EAAgBmF,KAAKD,MAAMK,cAAcjT,OAAzC0N,aAED8O,EAAkB,GAExB,IAAKZ,EAAKa,QACN,OAAQlf,GACJ,IAAK,SACDif,EAAgBtR,KACZ,CACIwK,KAAM,cACN7Z,MAAO,eACR,CACC6Z,KAAM,kBACN7Z,MAAO,mBACR,CACC6Z,KAAM,qBACN7Z,MAAO,uBAGf,MACJ,QACI2gB,EAAgBtR,KACZ,CACIwK,KAAM,cACN7Z,MAAO,eACR,CACC6Z,KAAM,OACN7Z,MAAO,QACR,CACC6Z,KAAM,SACN7Z,MAAO,WAGX6R,EAAagP,SAAWd,EAAK3Q,KAC7BuR,EAAgBtR,KAAK,CACjBwK,KAAM,iBACN7Z,MAAO,mBAO3B,OACI,yBAAKuY,UAAU,2BACX,yBAAKA,UAAU,iCAAiCa,QAAS,kBAAM,EAAK/B,SAAS,CAAC4H,iBAAiB,MAC3F,yBAAK1G,UAAU,aACO,SAAhBwH,EAAKK,OACH,kBAAC,KAAD,CAAe7H,UAAU,iBAAiBF,KAAK,OAAO/B,MAAM,UAC5D,kBAAC,KAAD,CAAiBiC,UAAU,iBAAiBF,KAAK,OAAO/B,MAAM,WAEtE,yBAAKiC,UAAU,aACVwH,EAAKG,UACN,6BACKH,EAAK3Q,KACN,yBAAKmJ,UAAU,yBACVwH,EAAK3Q,KAET2Q,EAAKe,iBAAmB,yBAAKvI,UAAU,yBACnC7X,YAAsBqf,EAAKe,kBAE/Bf,EAAKa,SACN,yBAAKrI,UAAU,2BAAf,aAKR,yBAAKA,UAAU,yBACVwH,EAAKS,eACN,6BACI,yBAAKzK,MAAO,CAACkH,MAAO,IAAKC,IAAI,4DAC7B,6BACK6C,EAAKS,kBAKtB,yBAAKjI,UAAU,YACX,kBAAC,GAAD,CACIqE,KAAM+D,EACNlE,eAAgB,SAACsE,GACD,gBAARA,EACA,EAAK1J,SAAS,CAAC4H,iBAAiB,IACjB,WAAR8B,EACP,EAAK1J,SAAS,CAACgI,iBAAiB,IACjB,SAAR0B,EACP,EAAK1J,SAAS,CACVkI,eAAe,EACfC,aAAa,2BACNO,GADK,IAERK,OAAQ1C,GAAQsD,QAAO,SAACC,GAAD,OAAQA,EAAGjhB,QAAU+f,EAAKK,UAAQ,GACzDtO,KAAMiN,GAAYiC,QAAO,SAACC,GAAD,OAAQA,EAAGjhB,QAAU+f,EAAKjO,QAAM,OAGlD,mBAARiP,EACP,EAAK1J,SAAS,CAACoI,uBAAuB,IAEhCiB,GAAeA,EAAcK,EAAKhB,OAMxD,kBAACxF,GAAD,CACI1C,KAAMb,KAAK9T,MAAM+b,gBACjB/G,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAAC4H,iBAAiB,KAC/C9G,eAAe,EACfE,KAAK,MACLN,OACI,kDACuBgI,EAAKG,WAGhClI,QACI,yBAAKjC,MAAO,CAACS,QAAS,KAClB,yBAAK+B,UAAU,eACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,iCACVwH,EAAKG,WAEV,yBAAK3H,UAAU,+BACX,yBAAKA,UAAU,QACV2E,IAAI,mEACR6C,EAAK3Q,MAGd,yBAAKmJ,UAAU,oCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eAAf,qBACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,mBACV7X,YAAsBqf,EAAKe,mBAGpC,yBAAKvI,UAAU,kCACX,yBAAKA,UAAU,uBAAf,iBACA,yBAAKA,UAAU,mBAAmBwH,EAAKS,gBAE1CT,EAAKmB,UACN,yBAAK3I,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBACIA,UAAU,mBAAmBwH,EAAKmB,gBASpD,WAATxf,GACD,yBAAK6W,UAAU,uBACX,yBAAKA,UAAU,mCAAf,qBACA,yBAAKA,UAAU,2BACVwH,EAAKje,MACN,2BAAOyW,UAAU,wBACb,+BACA,4BACI,wBAAIA,UAAU,uBAAd,WACA,wBAAIA,UAAU,uBAAd,YACA,wBAAIA,UAAU,uBAAd,UAEJ,4BACI,wBAAIA,UAAU,uBACV,kBAAC,KAAD,CAAU8E,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKiQ,KAAKC,MAD/C,OAEI,6BACA,kBAAC,KAAD,CAAUqL,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKiQ,KAAK3B,OAH/C,QAII,6BACA,kBAAC,KAAD,CAAUiN,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKiQ,KAAKE,OAL/C,QAMI,6BACA,kBAAC,KAAD,CAAUoL,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKiQ,KAAKqP,SAP/C,UAQI,8BAEJ,wBAAI7I,UAAU,uBACV,kBAAC,KAAD,CAAU8E,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKkO,SAASgC,MADnD,QAC8D,6BAC1D,kBAAC,KAAD,CAAUqL,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKkO,SAASI,OAFnD,SAEgE,6BAC5D,kBAAC,KAAD,CAAUiN,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKkO,SAASiC,OAHnD,SAGgE,6BAC5D,kBAAC,KAAD,CAAUoL,UAAQ,EACR8D,QAASpB,EAAKje,KAAKkO,SAASoR,SAL1C,WAK2D,8BAE3D,wBAAI7I,UAAU,uBACV,kBAAC,KAAD,CAAU8E,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKoQ,MAAMF,MADhD,QAC2D,6BACvD,kBAAC,KAAD,CAAUqL,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKoQ,MAAM9B,OAFhD,SAE6D,6BACzD,kBAAC,KAAD,CAAUiN,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKoQ,MAAMD,OAHhD,SAG6D,6BACzD,kBAAC,KAAD,CAAUoL,UAAQ,EACR8D,QAASpB,EAAKje,KAAKoQ,MAAMkP,SALvC,WAKwD,oCAUhFnJ,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,QAAQhB,QAAS,kBAAM,EAAK/B,SAAS,CAAC4H,iBAAiB,UAO5EjI,KAAK9T,MAAMqc,eACX,kBAAChF,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAACkI,eAAe,EAAOC,aAAc,MAClErH,eAAe,EACfE,KAAK,MACLN,OACI,2CACe,0BAAMQ,UAAU,qBAAqBwH,EAAKG,YAG7DlI,QACI,6BACI,kBAAC,GAAD,CAAOoC,KAAM,OACNpa,MAAOgX,KAAK9T,MAAMsc,aAAaU,UAC/BvC,UAAU,EACVJ,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVmI,aAAa,2BACN,EAAKtc,MAAMsc,cADN,IAERU,UAAW/a,EAAKnF,aAMnC,kBAAC,GAAD,CAAOoa,KAAM,gBACNpa,MAAOgX,KAAK9T,MAAMsc,aAAagB,cAC/B9e,KAAK,gBACL8b,UAAU,KACVD,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVmI,aAAa,2BACN,EAAKtc,MAAMsc,cADN,IAERgB,cAAerb,EAAKnF,aAMvC,kBAAC,GAAD,CAAOoa,KAAM,UACNpa,MAAOgX,KAAK9T,MAAMsc,aAAaa,QAC/B3e,KAAK,WACL6b,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVmI,aAAa,2BACN,EAAKtc,MAAMsc,cADN,IAERa,QAASlb,EAAKnF,aAMjC,kBAAC,GAAD,CAAOoa,KAAM,QACNpa,MAAOgX,KAAK9T,MAAMsc,aAAaW,MAC/B5C,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVmI,aAAa,2BACN,EAAKtc,MAAMsc,cADN,IAERW,MAAOhb,EAAKnF,aAM/B,kBAAC,GAAD,CAAOoa,KAAM,SACNpa,MAAOgX,KAAK9T,MAAMsc,aAAaY,OAC/B1e,KAAK,SACLic,UAAU,EACVD,QAASA,GACTH,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVmI,aAAa,2BACN,EAAKtc,MAAMsc,cADN,IAERY,OAAQjb,SAM3B,kBAAC,GAAD,CAAOiV,KAAM,MACNpa,MAAOgX,KAAK9T,MAAMsc,aAAac,IAC/B5e,KAAK,SACL8b,UAAU,IACVG,UAAU,EACVJ,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVmI,aAAa,2BACN,EAAKtc,MAAMsc,cADN,IAERc,IAAKnb,EAAKnF,aAM7B,kBAAC,GAAD,CAAOoa,KAAM,OACNpa,MAAOgX,KAAK9T,MAAMsc,aAAa1N,KAC/BpQ,KAAK,SACLic,UAAU,EACVD,QAASqB,GACTxB,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVmI,aAAa,2BACN,EAAKtc,MAAMsc,cADN,IAER1N,KAAM3M,UAQjC8S,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLiD,SAAUrG,KAAK4I,iBACfxG,QAAO,sBAAE,sBAAA1V,EAAA,sEACC,EAAKmc,iBAAiB,EAAK3c,MAAMsc,cADlC,OAEL,EAAKnI,SAAS,CAACkI,eAAe,EAAOC,aAAc,KAF9C,6CAIjB,kBAAC,GAAD,CAAQpF,KAAK,QAAQhB,QAAS,WAC1B,EAAK/B,SAAS,CAACkI,eAAe,EAAOC,aAAc,WAQnExI,KAAK9T,MAAMuc,uBACX,kBAAClF,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAACoI,uBAAuB,EAAOC,qBAAsB,MAClFvH,eAAe,EACfE,KAAK,MACLN,OACI,oDACwB,0BAAMQ,UAAU,qBAAqBwH,EAAKG,YAGtElI,QACI,6BACI,kBAAC,GAAD,CAAOoC,KAAM,eACNpa,MAAOgX,KAAK9T,MAAMwc,qBAAqBM,YACvCrC,UAAU,EACVjc,KAAK,WACL6b,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVqI,qBAAqB,2BACd,EAAKxc,MAAMwc,sBADE,IAEhBM,YAAa7a,EAAKnF,aAMrC,kBAAC,GAAD,CAAOoa,KAAM,kBACNpa,MAAOgX,KAAK9T,MAAMwc,qBAAqBO,eACvCtC,UAAU,EACVjc,KAAK,WACL6b,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVqI,qBAAqB,2BACd,EAAKxc,MAAMwc,sBADE,IAEhBO,eAAgB9a,EAAKnF,cAOhDiY,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLiD,UAAWrG,KAAK9T,MAAMwc,qBAAqBM,cAAgBhJ,KAAK9T,MAAMwc,qBAAqBO,gBAC1FjJ,KAAK9T,MAAMwc,qBAAqBM,cAAgBhJ,KAAK9T,MAAMwc,qBAAqBO,eACjF7G,QAAO,sBAAE,sBAAA1V,EAAA,sEACC,EAAKmc,iBAAiB,EAAK3c,MAAMwc,sBADlC,OAEL,EAAKrI,SAAS,CAACoI,uBAAuB,EAAOC,qBAAsB,KAF9D,6CAIjB,kBAAC,GAAD,CAAQtF,KAAK,QAAQhB,QAAS,WAC1B,EAAK/B,SAAS,CAACoI,uBAAuB,EAAOC,qBAAsB,WAOvF,kBAACnF,GAAD,CACI1C,KAAMb,KAAK9T,MAAMmc,gBACjBnH,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAACgI,iBAAiB,KAC/ClH,eAAe,EACfE,KAAK,OACLN,OACI,4CACgB,8BAAOgI,EAAKG,YAGhClI,QACI,yBAAKjC,MAAO,CAACS,QAAS,KAAtB,gGAKJyB,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLhB,QAAO,sBAAE,sBAAA1V,EAAA,sEACC,EAAKoc,mBAAmBC,GADzB,6CAGjB,kBAAC,GAAD,CAAQ3F,KAAK,QAAQhB,QAAS,kBAAM,EAAK/B,SAAS,CAACgI,iBAAiB,e,GAjgB3E9H,aCTf8J,I,wDACF,WAAYtK,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACToe,YAAa,GACbC,YAAa,GACbC,uBAAuB,GAG3B,EAAKC,eAAiB,EAAKA,eAAexI,KAApB,gBACtB,EAAKyI,cAAgB,EAAKA,cAAczI,KAAnB,gBAVN,E,iEAcfjC,KAAKD,MAAM1J,oB,oCAGDlI,GACV6R,KAAKK,SAAL,eAAkBlS,M,qCAGPwc,GAAU,IACdD,EAAiB1K,KAAjB0K,cADa,EAEgC1K,KAAKD,MAAzC1J,GAFI,EAEbuM,QAFa,EAEJvM,iBAAiBU,EAFb,EAEaA,gBACjC2T,EAAc,CAACF,uBAAuB,IACtCjc,EAAI,CACA7D,KAAM,SACNkC,IAAK,kBAAoB+d,EAAQvS,MAClC,GAAM,SAAC7L,EAAD,GAAoB,IAAXW,EAAU,EAAVA,KACTA,GAAwB,UAAhBA,EAAKmB,QAMdqc,EAAc,CAACF,uBAAuB,IACtCnU,IACInJ,EAAKoB,SAAS0J,SACdjB,EAAgB,CACZiB,QAAS9K,EAAKoB,SAAS0J,QACvBC,MAAO,aAVflB,EAAgB,CACZiB,QAAS9K,EAAKiB,KACd8J,MAAO,e,+BAeb,IAAD,SAE6C+H,KAAKD,MAAMK,cAAcjT,OAA3DyP,GAFX,EAEEE,QAFF,EAEWF,kBAEVgO,GAJD,EAE6B/P,aAEZ+B,EAAiBhS,WACjCigB,EAAejO,EAAiBC,OAEhCsH,EAAQ,CACV,CACIG,SAAU,YACVC,OACI,yBAAKxF,MAAO,CAAC+L,SAAU,SAAU7E,MAAO,OAAQzG,QAAS,KACpDoL,EAAcpI,KAAI,SAACuG,EAAMhgB,GACtB,OACI,kBAAC,GAAD,eAAQA,IAAKA,EAAKggB,KAAMA,GAAU,EAAKhJ,aAK3D,CACIuE,SAAU,SACVC,OACI,yBAAKxF,MAAO,CAAC+L,SAAU,SAAU7E,MAAO,OAAQzG,QAAS,KACpDqL,EAAarI,KAAI,SAACuG,EAAMhgB,GACrB,OACI,kBAAC,GAAD,eAAQA,IAAKA,EAAKggB,KAAMA,GAAU,EAAKhJ,cAO/D,OACI,yBAAKwB,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,SACA,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAQ6B,KAAK,eAAehB,QAAS,kBAAM,EAAKrC,MAAM5I,YAAY,CAC9D+B,MXk7BM,mBWj7BNE,MAAM,SAIlB,yBAAKmI,UAAU,kBACX,kBAAC,GAAD,CAAM4C,MAAOA,EAAOD,UAAWlE,KAAK9T,MAAMgY,UAAWD,WAAY,SAAC8G,GAC9D,EAAK1K,SAAS,CAAC6D,UAAW6G,a,GA7F1BxK,cAyGlBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6C0J,K,6BCxFxDW,G,uKA5BD,IAAD,EAC0BhL,KAAKD,MAA7BjD,EADF,EACEA,QAASpS,EADX,EACWA,KAAMqU,EADjB,EACiBA,MACtB,IAAKjC,EACD,OAAO,KAGX,IAAMmO,EAAU,yBACZ1J,UAAS,gCAAqC,WAAVxC,EAAqB,uBAAyB,iBAAzE,yBAEb,OAAIrU,GAAiB,WAATA,EACDugB,EAGP,kBAAC,KAAD,CACIjG,OAAQlI,EACRoO,eAAgB,aAGhB3J,UAAU,gBACV4J,iBAAiB,mBAEhBF,O,GAtBK1K,aCOhB6K,G,kDAEF,WAAYrL,GAAQ,IAAD,8BACf,cAAMA,IACD7T,MAAQ,CACTkM,IAAK,GACLgR,OAAQ,GACRG,SAAU,GACV,YAAa,GACbJ,MAAO,GACPE,QAAS,GACTC,IAAK,GACLxO,KAAM,GACNuQ,qBAAqB,GAIzB,EAAKC,aAAe,EAAKA,aAAarJ,KAAlB,gBACpB,EAAKyI,cAAgB,EAAKA,cAAczI,KAAnB,gBACrB,EAAKsJ,YAAc,EAAKA,YAAYtJ,KAAjB,gBACnB,EAAKuJ,WAAa,EAAKA,WAAWvJ,KAAhB,gBAClB,EAAK2G,eAAiB,EAAKA,eAAe3G,KAApB,gBAnBP,E,gEAuBf,GAAIjC,KAAKD,MAAMzU,MAAMwb,OAAOvO,GAAI,CAC5B,IAAM9N,EAAQmd,OAAO5H,KAAKD,MAAMzU,MAAMwb,OAAOvO,IACvCkT,EAAUzL,KAAKD,MAAMzU,MAAMwb,OAAOhM,KAGlC4Q,EAFqB1L,KAAKD,MAAMK,cAAcjT,OAA7CyP,iBAEsB,GAAD,OAAI6O,EAAJ,MAAgBzB,QAAO,SAAC2B,GAAD,OAAUA,EAAKvT,MAAQ3N,KAEtEihB,EAAI7F,OAAS,GACb7F,KAAKK,SAAS,CACVjI,IAAKsT,EAAI,GAAGtT,IACZgR,OAAQsC,EAAI,GAAGtC,OACfG,SAAUqC,OAAOF,EAAI,GAAGlC,eACxB,YAAakC,EAAI,GAAGxC,UACpBC,MAAOuC,EAAI,GAAGvC,MACdE,QAASqC,EAAI,GAAGrC,QAChBvO,KAAM4Q,EAAI,GAAG5Q,KACbwO,IAAK1B,OAAO8D,EAAI,GAAGpC,KACnBxe,KAAM4gB,EAAI,GAAG5gB,U,oCAMfqD,GACV6R,KAAKK,SAAL,eAAkBlS,M,oKAIXuc,EAAiB1K,KAAjB0K,cACA3T,EAAmBiJ,KAAKD,MAAxBhJ,gBACP2T,EAAc,CAACW,qBAAqB,IAE9Bve,EAAM,CACRsc,OAAQpJ,KAAK9T,MAAMkd,OAAOrgB,IAC1BwgB,SAAUvJ,KAAK9T,MAAMqd,SACrB,YAAavJ,KAAK9T,MAAM,aACxBid,MAAOnJ,KAAK9T,MAAMid,MAClBE,QAASrJ,KAAK9T,MAAMmd,QACpBC,IAAKtJ,KAAK9T,MAAMod,IAChBxO,KAAMkF,KAAK9T,MAAM4O,KAAK/R,K,kBAID0gB,GAAI,CAAC/e,KAAM,OAAQkC,IAAK,gBAAiBE,Q,iBAAvDI,E,EAAAA,OAEsB,UAAhBA,EAAKmB,QASd2R,KAAKwL,aACLxL,KAAKD,MAAM1J,kBACPnJ,EAAK8K,SACLjB,EAAgB,CACZiB,QAAS9K,EAAK8K,QACdC,MAAO,cAbX/K,EAAKiB,MACL4I,EAAgB,CACZiB,QAAS9K,EAAKiB,KACd8J,MAAO,UAGf+H,KAAKwL,c,kDAaTzU,EAAgB,CACZiB,QAAS,KAAE2P,WACX1P,MAAO,UAEXyS,EAAc,CAACW,qBAAqB,I,oJAI7B,IACJX,EAAiB1K,KAAjB0K,cADG,EAEyB1K,KAAKD,MAAjC6C,EAFG,EAEHA,QAAS7L,EAFN,EAEMA,gBAChB2T,EAAc,CAACW,qBAAqB,IACpC9c,EAAI,CAAC7D,KAAM,MAAOkC,IAAK,iBAAmBoT,KAAK9T,MAAMkM,IAAKtL,IAAI,eAAKkT,KAAK9T,SAAS,GAAM,SAACK,EAAD,GAAoB,IAAXW,EAAU,EAAVA,KACvFA,GAAwB,UAAhBA,EAAKmB,QASdqc,EAAc,CAACW,qBAAqB,IACpCzI,EAAQvK,KAAK,cACTnL,EAAKoB,SAAS0J,SACdjB,EAAgB,CACZiB,QAAS9K,EAAKoB,SAAS0J,QACvBC,MAAO,cAbX/K,EAAKiB,MACL4I,EAAgB,CACZiB,QAAS9K,EAAKiB,KACd8J,MAAO,UAGfyS,EAAc,CAACW,qBAAqB,U,mCAe5CrL,KAAKK,SAAS,CACVjI,IAAK,GACLgR,OAAQ,SACRG,SAAU,GACV,YAAa,GACbJ,MAAO,GACPE,QAAS,GACTC,IAAK,GACLxO,KAAM,GACNuQ,qBAAqB,IAEzBrL,KAAKD,MAAM5I,YAAY,CAAC+B,Mbi4BE,mBaj4ByBE,MAAM,M,uCAIzD,OAAQ4G,KAAK9T,MAAM,eACX8T,KAAK9T,MAAMkd,SAAWpJ,KAAK9T,MAAMkd,OAAOrgB,KACxCiX,KAAK9T,MAAMod,MAAQtJ,KAAK9T,MAAMod,IAAI3B,YAClC3H,KAAK9T,MAAMqd,UAA2C,KAA/BvJ,KAAK9T,MAAMqd,SAAS1D,SAC3C7F,KAAK9T,MAAMid,QACXnJ,KAAK9T,MAAM4O,OAASkF,KAAK9T,MAAM4O,KAAK/R,M,+BAGtC,IAAD,OAWL,OACI,kBAACwa,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,kBAAM,EAAK0K,cACpBrK,eAAe,EACfE,KAAK,MACLN,OACI,6CAIJC,QACI,6BACI,6BACI,kBAAC,GAAD,CAAOoC,KAAM,OACNpa,MAAOgX,KAAK9T,MAAM,aAClBya,UAAU,EACVJ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAAC,YAAalS,EAAKnF,WAE/D,kBAAC,GAAD,CAAOoa,KAAM,gBACNpa,MAAOgX,KAAK9T,MAAL,SACPxB,KAAK,gBACL8b,UAAU,KACVG,UAAU,EACVJ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAACkJ,SAAUpb,EAAKnF,WAE5D,kBAAC,GAAD,CAAOoa,KAAM,QACNpa,MAAOgX,KAAK9T,MAAMid,MAClBxC,UAAU,EACVJ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAAC8I,MAAOhb,EAAKnF,WAEzD,kBAAC,GAAD,CAAOoa,KAAM,SACNpa,MAAOgX,KAAK9T,MAAMkd,OAClB1e,KAAK,SACLic,UAAU,EACVD,QA9CL,CAClB,CAAC3d,IAAK,SAAU+E,KAAM,SAAU9E,MAAO,UACvC,CAACD,IAAK,OAAQ+E,KAAM,OAAQ9E,MAAO,SA6CZud,YAAa,SAAC6C,GAAD,OAAY,EAAK/I,SAAS,CAAC+I,cAE/C,kBAAC,GAAD,CAAOhG,KAAM,UACNpa,MAAOgX,KAAK9T,MAAMmd,QAClB1C,UAAU,EACVJ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAACgJ,QAASlb,EAAKnF,WAE3D,kBAAC,GAAD,CAAOoa,KAAM,MACNpa,MAAOgX,KAAK9T,MAAMod,IAClB5e,KAAK,SACL8b,UAAU,IACVG,UAAU,EACVJ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAACiJ,IAAK1B,OAAOzZ,EAAKnF,YAE9D,kBAAC,GAAD,CAAOoa,KAAM,OACNpa,MAAOgX,KAAK9T,MAAM4O,KAClBpQ,KAAK,SACLic,UAAU,EACVD,QA5DP,CAChB,CAAC3d,IAAK,WAAY+E,KAAM,WAAY9E,MAAO,YAC3C,CAACD,IAAK,QAAS+E,KAAM,QAAS9E,MAAO,UA2Ddud,YAAa,SAACzL,GAAD,OAAU,EAAKuF,SAAS,CAACvF,aAGjD,kBAAC,GAAD,CAASgC,QAASkD,KAAK9T,MAAMmf,uBAGrCpK,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLiD,SAAUrG,KAAK4I,iBACfxG,QAAO,sBAAE,sBAAA1V,EAAA,sEACC,EAAK4e,eADN,6CAGjB,kBAAC,GAAD,CAAQlI,KAAK,QAAQhB,QAAS,kBAAM,EAAKoJ,uB,GApOhCjL,aAgP3BC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CyK,KCxPjES,I,wDACF,WAAY9L,GAAQ,uCACVA,G,iEAINC,KAAKD,MAAMlJ,qB,+BAGL,IAAD,EAC8CmJ,KAAKD,MAAMK,cAAcjT,OAA5D0M,GADX,EACEiD,QADF,EACWjD,mBADX,EAC8BgB,aAEnC,OACI,6BACI,yBAAK0G,UAAU,kBACX,2BAAOA,UAAU,wBACb,+BACA,4BACI,wBAAIA,UAAU,uBAAd,kBAMZ,yBAAKA,UAAU,iBAAiBxC,MAAO,CAACS,QAAS,KAC7C,2BAAOsM,YAAU,GACb,4BACI,oCACA,wCACA,sCACA,4CAGJ,+BACCjS,EAAkB2I,KAAI,SAACuJ,EAAUhjB,GAC9B,OACI,wBAAIA,IAAKA,GACL,4BAAKW,YAAsBqiB,EAASjC,kBACpC,4BAAKiC,EAAS7B,SAAShB,WACvB,4BAAK6C,EAAS9S,QAAU8S,EAAS9S,OAAOmK,KAAO2I,EAAS9S,OAAOmK,KAAO,QACtE,4BAAK2I,EAASC,yB,GAxCvBzL,cAwDrBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CkL,K,6BCtBxDI,G,kDAzCX,WAAYlM,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CAACggB,MAAM,EAAOC,eAAe,GAH3B,E,gEAOXnM,KAAKD,MAAMoM,eACXnM,KAAKK,SAAS,CAAC6L,KAAMlM,KAAKD,MAAMoM,cAAeA,cAAenM,KAAKD,MAAMoM,kB,gDAIvDC,GACjBA,EAAUD,gBAAkBnM,KAAK9T,MAAMigB,eACxCnM,KAAKK,SAAS,CAAC6L,KAAME,EAAUD,cAAeA,cAAeC,EAAUD,kB,+BAIrE,IAAD,OACL,OACI,yBAAK5K,UAAU,sBACX,0BAAMA,UAAU,4BAA4Ba,QAAS,kBAAM,EAAK/B,SAAS,CAAC6L,MAAO,EAAKhgB,MAAMggB,SACvFlM,KAAK9T,MAAMggB,KAAO,kBAACG,GAAA,EAAD,CAAWhL,KAAK,UAC/B,kBAACiL,GAAA,EAAD,CAAWjL,KAAK,UACpB,0BAAMtC,MAAO,CAACwN,YAAa,KAAMvM,KAAKD,MAAMgB,SAEhD,8BACKf,KAAKD,MAAMpV,QAEfqV,KAAKD,MAAMrH,QAAUsH,KAAKD,MAAMrH,OAChCsH,KAAK9T,MAAMggB,MACZ,yBAAK3K,UAAU,8BACVvB,KAAKD,MAAM0D,e,GAjCAlD,a,SCM1BiM,G,kDACF,WAAYzM,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTugB,WAAY,CAAC,EAAG,IAJL,E,iEASfzM,KAAKD,MAAM7I,a,+BAGL,IAAD,SACmC8I,KAAKD,MAAMK,cAAcjT,OAA1DuP,EADF,EACEA,cAAepC,EADjB,EACiBA,MAAOwC,EADxB,EACwBA,QAC7B,OACI,yBAAKyE,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,aACA,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAS7W,KAAK,SAASqU,MAAM,SAASjC,QAASA,EAAQqB,oBAG/D,yBAAKoD,UAAU,kBACX,yBAAKA,UAAU,oBACV7E,EAAcsN,QAAO,SAAA/Q,GAAM,OAAKA,EAAO2Q,WAASpH,KAAI,SAACvJ,EAAQlQ,GAC1D,IAAI2jB,EAAWpS,EAAM0P,QAAO,SAAC2C,GAAD,OAAUA,EAAK1T,SAAWA,EAAOb,OAC7D,OAAwB,IAApBsU,EAAS7G,OACF,MAEX6G,EAAWA,EAAS,GAEhB,yBAAK3jB,IAAKA,EAAKwY,UAAU,qBACrB,kBAAC,GAAD,CAAmB4K,cAAe,EAAKjgB,MAAMugB,WAAWtJ,SAASpa,GAC9CgY,OAAQ9H,EAAOmK,MAC9B,yBAAK7B,UAAU,uBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,0BAAf,mBACA,yBAAKA,UAAU,wBAAwBmL,EAAS3T,QAAQ6T,SAGhE,yBAAKrL,UAAU,uBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,0BAAf,uBACA,yBACIA,UAAU,wBAAwBmL,EAAS3T,QAAQ8T,sBAG/D,yBAAKtL,UAAU,uBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,0BAAf,qBACA,yBACIA,UAAU,wBAAwBmL,EAAS3T,QAAQ+T,mBAG/D,yBAAKvL,UAAU,uBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,0BAAf,iBACA,yBACIA,UAAU,wBAAwBmL,EAAS3T,QAAQgU,qBAG/D,yBAAKxL,UAAU,+CACVa,QAAS,kBAAM,EAAKrC,MAAM6C,QAAQvK,KAAnB,kBAAmCY,EAAOb,IAA1C,iBAChB,yBAAKmJ,UAAU,wBACX,yBAAKA,UAAU,0BAAf,SACA,yBACIA,UAAU,wBACV,kBAAC,KAAD,CAAiBF,KAAK,mBASpC,IAAjB/G,EAAMuL,QACP,yBAAK9G,MAAO,CAACO,MAAO,WAAYyD,MAAM,UAAtC,0B,GA/EAxC,aA8FlBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6C6L,KCzFjEQ,GAAc,CAChBjS,KAAM,CACFC,KAAK,EACLC,MAAM,EACNmP,QAAQ,EACRhR,MAAM,GAEVJ,SAAU,CACNgC,KAAK,EACLC,MAAM,EACNmP,QAAQ,EACRhR,MAAM,GAEV8B,MAAO,CACHF,KAAK,EACLC,MAAM,EACNmP,QAAQ,EACRhR,MAAM,IAIR6T,G,kDAEF,WAAYlN,GAAQ,IAAD,8BACf,cAAMA,IACD7T,MAAQ,CACTkX,KAAM,GACNhY,SAAU,GACVR,UAAW,GACX4e,cAAe,GACf0D,kBAAkB,GAGtB,EAAKC,eAAiB,EAAKA,eAAelL,KAApB,gBACtB,EAAKmL,iBAAmB,EAAKA,iBAAiBnL,KAAtB,gBACxB,EAAKyI,cAAgB,EAAKA,cAAczI,KAAnB,gBACrB,EAAKuJ,WAAa,EAAKA,WAAWvJ,KAAhB,gBAClB,EAAKoL,mBAAqB,EAAKA,mBAAmBpL,KAAxB,gBAC1B,EAAKqL,uBAAyB,EAAKA,uBAAuBrL,KAA5B,gBAff,E,gEAmBfjC,KAAKD,MAAM1J,kBADK,IAETwE,EAAgBmF,KAAKD,MAAMK,cAAcjT,OAAzC0N,aAFS,EAGWmF,KAAKD,MAAzBwN,EAHS,EAGTA,WAEP,GAAa,gBALG,EAGG7iB,KAES,CACxB,IAAIE,EAAY,GAChB2iB,EAAW3iB,UAAUof,QAAO,SAAC0B,GAAD,OAASA,EAAI7gB,YAAYuN,MAAQyC,EAAagP,UAAQ2D,SAAQ,SAAC9B,GACvF9gB,EAAUyN,KAAK,CACXtP,IAAK2iB,EAAI7gB,YAAYuN,IACrBpP,MAAO0iB,EAAI7gB,YAAYuN,IACvBtK,KAAK,GAAD,OAAK4d,EAAI7gB,YAAJ,UAAL,aAAsC6gB,EAAI7gB,YAAYiQ,KAAtD,KACJhQ,KAAM4gB,EAAI5gB,UAGlBkV,KAAKK,SAAS,CACV+C,KAAMmK,EAAWnK,KACjBhY,SAAUmiB,EAAWniB,SACrBoe,cAAe+D,EAAW/D,cAC1B5e,iB,6CAKWA,GAAY,IACxBiQ,EAAgBmF,KAAKD,MAAMK,cAAcjT,OAAzC0N,aADuB,EAEHmF,KAAKD,MAE5B0N,GAJ0B,EAEvBF,WAFuB,EAEX7iB,KAEL,IASd,OARAE,EAAUof,QAAO,SAAC0B,GAAD,OAASA,EAAItT,MAAQyC,EAAagP,UAAQ2D,SAAQ,SAAC9B,GAChE+B,EAAQpV,KAAK,CACTtP,IAAK2iB,EAAItT,IACTpP,MAAO0iB,EAAItT,IACXtK,KAAK,GAAD,OAAK4d,EAAI9B,QAAU,aAAe,IAAlC,OAAuC8B,EAAG,UAA1C,aAA4DA,EAAI5Q,KAAhE,KACJhQ,KAAMkiB,QAGPS,I,yCAGQ/B,EAAKhhB,EAAMC,EAAQ+iB,GAAW,IAEvCC,EADY3N,KAAK9T,MAAlBtB,UACwB4X,KAAI,SAACmJ,GAC9B,OAAIA,EAAK5iB,MAAQ2iB,EAAI3iB,KACjB4iB,EAAK7gB,KAAKJ,GAAMC,GAAU+iB,EACnB/B,GAEJA,KAEX3L,KAAKK,SAAS,CAACzV,UAAW+iB,M,oCAGhBxf,GACV6R,KAAKK,SAAL,eAAkBlS,M,uCAGJ,IACPjC,EAAS8T,KAAT9T,MACP,OAAQA,EAAMkX,OAASlX,EAAMd,WAAac,EAAMtB,WAAyC,IAA3BsB,EAAMtB,UAAUib,SAAkB3Z,EAAMsd,gB,0KAI/FkB,EAAiB1K,KAAjB0K,c,EACgB1K,KAAKD,MAAMK,cAAcjT,OAAzC0N,E,EAAAA,aACP6P,EAAc,CAACwC,kBAAkB,KAE3BpgB,EAAM,CACRsW,KAAMpD,KAAK9T,MAAMkX,KACjBhY,SAAU4U,KAAK9T,MAAMd,SACrBR,UAAWoV,KAAK9T,MAAMtB,UAAU4X,KAAI,SAACmJ,GACjC,MAAO,CACH,YAAeA,EAAK5iB,IACpB+B,KAAM6gB,EAAK7gB,SAGnB0e,cAAexJ,KAAK9T,MAAMsd,gBAI1B5e,UAAUyN,KAAK,CACfxN,YAAagQ,EAAagP,OAC1B/e,KAAM,CACFiQ,KAAM,CAACC,KAAK,EAAMC,MAAM,EAAMmP,QAAQ,EAAMhR,MAAM,GAClDJ,SAAU,CAACgC,KAAK,EAAMC,MAAM,EAAMmP,QAAQ,EAAMhR,MAAM,GACtD8B,MAAO,CAACF,KAAK,EAAMC,MAAM,EAAMmP,QAAQ,EAAMhR,MAAM,M,kBAKlCqQ,GAAI,CACrB/e,KAA0B,eAApBsV,KAAKD,MAAMrV,KAAwB,OAAS,MAClDkC,IAAI,UAAD,OAAgC,eAApBoT,KAAKD,MAAMrV,KAAwB,GAAKsV,KAAKD,MAAMwN,WAAWnV,KAC7EtL,Q,gBAHGI,E,EAAAA,KAKP8S,KAAKD,MAAM5I,YAAY,CAAC+B,MjBy3BJ,iBiBz3B6BE,MAAM,IACvD4G,KAAKD,MAAMjJ,YACa,gBAApBkJ,KAAKD,MAAMrV,KACXsV,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,SAAUkjB,SAAU5N,KAAKD,MAAMwN,WAAWnV,MAEpE4H,KAAKD,MAAM7J,eAEf8J,KAAKwL,aACLxL,KAAKD,MAAMhJ,gBAAgB,CACvBiB,QAAS9K,EAAK8K,QACdC,MAAO,Y,kDAGX+H,KAAKD,MAAMhJ,gBAAgB,CACvBiB,QAAS,KAAE2P,WACX1P,MAAO,U,mJAMf+H,KAAKK,SAAS,CACV+C,KAAM,GACNhY,SAAU,GACVR,UAAW,GACX4e,cAAe,GACf0D,kBAAkB,IAEE,gBAApBlN,KAAKD,MAAMrV,KACXsV,KAAKD,MAAM5I,YAAY,CAAC+B,MjB61BH,kBiB71B6BE,MAAM,IAExD4G,KAAKD,MAAM5I,YAAY,CAAC+B,MjB01BJ,iBiB11B6BE,MAAM,M,+BAIrD,IAAD,OACEwD,EAAoBoD,KAAKD,MAAMK,cAAcjT,OAA7CyP,iBAEDiR,EAAuBjR,EAAiBhS,UAAUkjB,OAAOlR,EAAiBC,QAEhF,OACI,kBAAC0G,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,kBAAM,EAAK0K,cACpBrK,eAAe,EACfE,KAAK,MACLN,OACI,6BACyB,eAApBf,KAAKD,MAAMrV,KAAwB,aAAe,eAG3DsW,QACI,6BACI,6BACI,kBAAC,GAAD,CAAOoC,KAAM,cACNpa,MAAOgX,KAAK9T,MAAL,KACPya,UAAU,EACVJ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAAC+C,KAAMjV,EAAKnF,WAExD,kBAAC,GAAD,CAAOoa,KAAM,kBACNpa,MAAOgX,KAAK9T,MAAL,SACPya,UAAU,EACVJ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAACjV,SAAU+C,EAAKnF,WAE5D,kBAAC,GAAD,CAAOoa,KAAM,uBACNpa,MAAOgX,KAAK9T,MAAMsd,cAClB9e,KAAK,gBACL8b,UAAU,KACVG,UAAU,EACVJ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAACmJ,cAAe5B,OAAOzZ,EAAKnF,YAExE,kBAAC,GAAD,CAAOoa,KAAM,mBACNpa,MAAOgX,KAAK9T,MAAMtB,UAClBF,KAAK,SACLkc,SAAS,EACTD,UAAU,EACVD,QAAS1G,KAAKsN,uBAAuBO,GACrCtH,YAAa,SAAC3b,GAAD,OAAe,EAAKyV,SAAS,CAACzV,iBAE5B,eAApBoV,KAAKD,MAAMrV,MAAyBsV,KAAK9T,MAAMtB,WAAaoV,KAAK9T,MAAMtB,UAAUib,OAAS,GAC5F,yBAAKtE,UAAU,2BACX,yBAAKA,UAAU,mCAAf,qBACA,yBAAKA,UAAU,2BACX,2BAAOA,UAAU,sDACb,+BACA,wBAAIA,UAAU,8BACV,wBAAIA,UAAU,uBAAd,QACA,wBAAIA,UAAU,uBAAd,WACA,wBAAIA,UAAU,uBAAd,YACA,wBAAIA,UAAU,uBAAd,UAEHvB,KAAK9T,MAAMtB,UAAU4X,KAAI,SAACmJ,EAAM5iB,GAC7B,OACI,wBAAIA,IAAK4iB,EAAK5iB,IAAKwY,UAAU,8BACzB,wBAAIA,UAAU,uBAAd,IACMoK,EAAK5iB,IADX,KACkB4iB,EAAK7d,MAEvB,wBAAIyT,UAAU,uBACV,kBAAC,KAAD,CACI4I,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKiQ,KAAKC,IACrCgM,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,OAAQ,MAAOxd,MAHzE,QAGsF,6BAClF,kBAAC,KAAD,CACIgc,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKiQ,KAAK3B,KACrC4N,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,OAAQ,OAAQxd,MAN1E,SAMwF,6BACpF,kBAAC,KAAD,CACIgc,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKiQ,KAAKE,KACrC+L,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,OAAQ,OAAQxd,MAT1E,SASwF,6BACpF,kBAAC,KAAD,CACIgc,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKiQ,KAAKqP,OACrCpD,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,OAAQ,SAAUxd,MAZ5E,WAY4F,8BAE5F,wBAAIoT,UAAU,uBACV,kBAAC,KAAD,CACI4I,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKkO,SAASgC,IACzCgM,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,WAAY,MAAOxd,MAH7E,QAG0F,6BACtF,kBAAC,KAAD,CACIgc,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKkO,SAASI,KACzC4N,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,WAAY,OAAQxd,MAN9E,SAM4F,6BACxF,kBAAC,KAAD,CACIgc,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKkO,SAASiC,KACzC+L,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,WAAY,OAAQxd,MAT9E,SAS4F,6BACxF,kBAAC,KAAD,CACIgc,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKkO,SAASoR,OACzCpD,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,WAAY,SAAUxd,MAZhF,WAYgG,8BAEhG,wBAAIoT,UAAU,uBACV,kBAAC,KAAD,CACI4I,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKoQ,MAAMF,IACtCgM,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,QAAS,MAAOxd,MAH1E,QAGuF,6BACnF,kBAAC,KAAD,CACIgc,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKoQ,MAAM9B,KACtC4N,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,QAAS,OAAQxd,MAN3E,SAMyF,6BACrF,kBAAC,KAAD,CACIgc,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKoQ,MAAMD,KACtC+L,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,QAAS,OAAQxd,MAT3E,SASyF,6BACrF,kBAAC,KAAD,CACIgc,QAASwB,EAAK7gB,MAAQ6gB,EAAK7gB,KAAKoQ,MAAMkP,OACtCpD,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB1B,EAAM,QAAS,SAAUxd,MAZ7E,WAY6F,uCAWpG,eAApB6R,KAAKD,MAAMrV,MACZ,yBAAKqU,MAAO,CAACS,QAAS,IAAKuD,MAAM,UAAjC,8DAGA,kBAAC,GAAD,CAASjG,QAASkD,KAAK9T,MAAMghB,oBAGrCjM,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLiD,SAAUrG,KAAKmN,iBACf/K,QAAO,sBAAE,sBAAA1V,EAAA,sEACC,EAAK0gB,mBADN,6CAGjB,kBAAC,GAAD,CAAQhK,KAAK,QAAQhB,QAAS,kBAAM,EAAKoJ,uB,GArRnCjL,aAiSxBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CsM,K,iBCzSxDc,G,kDA/BX,WAAYhO,GAAQ,uCACVA,G,qDAGA,IAAD,EAC0CC,KAAKD,MAA7CrD,EADF,EACEA,cAAesR,EADjB,EACiBA,UAAWC,EAD5B,EAC4BA,WACjC,OACI,yBAAK1M,UAAU,kBAEP7E,EAAc8F,KAAI,SAAC+K,EAAYW,GAC3B,OACI,yBAAK3M,UAAS,YAAexY,IAAKmlB,EAAM9L,QAAS,kBAAM4L,EAAUT,KAC7D,yBAAKhM,UAAU,oBAAoBgM,EAAWnK,KAA9C,IAAqDmK,EAAW3D,SAAW,0BAAMrI,UAAU,uBAAhB,YAC3E,yBAAKA,UAAU,wBAAwBgM,EAAWniB,UAClD,yBAAKmW,UAAU,sBAAf,kBAAmD,0BAC/CxC,MAAO,CAACO,MAAO,UAAWiO,EAAW/D,oBAKxDyE,GACD,yBAAK1M,UAAU,8BAA8Ba,QAAS,kBAAM6L,MACxD,kBAAC,KAAD,CAAQ5M,KAAM,W,GAvBTd,aCKnB4N,G,kDACF,WAAYpO,GAAQ,uCACVA,G,iEAINC,KAAKD,MAAM7J,iB,+BAGL,IAAD,SACiC8J,KAAKD,MAAMK,cAAcjT,OAAxDuP,EADF,EACEA,cAAe7B,EADjB,EACiBA,aACtB,OACI,yBAAK0G,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,YACA,yBAAKA,UAAU,uBACY,UAAtB1G,EAAaC,MACd,kBAAC,GAAD,CAAQsI,KAAI,iBAAoBhB,QAAS,kBAAM,EAAKrC,MAAM5I,YAAY,CAClE+B,MnBw/BI,iBmBv/BJE,MAAM,SAKlB,yBAAKmI,UAAU,kBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,4BAAf,YAGA,6BACI,kBAAC,GAAD,CACI7E,cAAeA,EAAcsN,QAAO,SAAA/Q,GAAM,OAAKA,EAAO2Q,WACtDoE,UAAW,SAACT,GACR,EAAKxN,MAAM9I,iBAAiBsW,GAC5B,EAAKxN,MAAM6C,QAAQvK,KAAnB,kBAAmCkV,EAAWnV,IAA9C,kBAGkB,IAAzBsE,EAAcmJ,QACf,yBAAK9G,MAAO,CAACO,MAAO,WAAYyD,MAAM,UAAtC,qBAGR,yBAAKxB,UAAU,oBACX,yBAAKA,UAAU,4BAAf,qBAGA,6BACI,kBAAC,GAAD,CACI7E,cAAeA,EAAcsN,QAAO,SAAA/Q,GAAM,OAAIA,EAAO2Q,WACrDoE,UAAW,SAACT,GACR,EAAKxN,MAAM9I,iBAAiBsW,GAC5B,EAAKxN,MAAM6C,QAAQvK,KAAnB,kBAAmCkV,EAAWnV,IAA9C,kBAGkB,IAAzBsE,EAAcmJ,QACf,yBAAK9G,MAAO,CAACO,MAAO,WAAYyD,MAAM,UAAtC,2B,GAtDLxC,aAmEjBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CwN,KCpEjEC,G,kDACF,WAAYrO,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACT8c,YAAa,GACbC,eAAgB,GAChBoF,mBAAmB,GAGvB,EAAKC,kBAAoB,EAAKA,kBAAkBrM,KAAvB,gBACzB,EAAKsM,qBAAuB,EAAKA,qBAAqBtM,KAA1B,gBAVb,E,oEAaiB,IAAdlZ,EAAa,EAAbA,IAAKC,EAAQ,EAARA,MACvBgX,KAAKK,SAAL,eAAgBtX,EAAMC,M,yKAICgX,KAAKD,MAAMK,cAAcjT,OAAzC0N,E,EAAAA,aACPmF,KAAKuO,qBAAqB,CAACxlB,IAAK,oBAAqBC,OAAO,I,kBAEnCygB,GAAI,CACrB/e,KAAM,MACNkC,IAAI,2BAAD,OAA6BiO,EAAY,QAC5C/N,IAAK,CAAC,eAAgBkT,KAAK9T,MAAM8c,YAAa,kBAAmBhJ,KAAK9T,MAAM+c,kB,iBAHzE/b,E,EAAAA,OAKsB,UAAhBA,EAAKmB,QAMdlD,OAAOC,SAASgD,KAAO,IACvB4R,KAAKD,MAAMhJ,gBAAgB,CACvBiB,QAAQ,qCAAD,OAAuC7M,OAAOC,SAASojB,OAAOC,UAAU,IAC/ExW,MAAO,aARX+H,KAAKD,MAAMhJ,gBAAgB,CACvBiB,QAAS,kCAAoC9K,EAAKiB,KAClD8J,MAAO,UASf+H,KAAKuO,qBAAqB,CAACxlB,IAAK,oBAAqBC,OAAO,I,kDAE5DgX,KAAKD,MAAMhJ,gBAAgB,CACvBiB,QAAS,kCAAoC,KAAE2P,WAC/C1P,MAAO,U,+IAKT,IAAD,OAEkB+H,KAAKD,MAAMK,cAAcjT,OAAzC0N,aAEP,OACI,kBAAC0I,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,kBAAM,EAAKf,MAAM2K,cAAc,CAACgE,qBAAqB,KAC9DvN,eAAe,EACfE,KAAK,MACLN,OACI,kEAIJC,QACI,6BACI,kBAAC,GAAD,CAAOoC,KAAM,eACNpa,MAAOgX,KAAK9T,MAAM8c,YAClBrC,UAAU,EACVF,UAAW,EACX/b,KAAK,WACL6b,YAAa,SAACpY,GAAD,OAAU,EAAKogB,qBAAqB,CAC7CxlB,IAAK,cACLC,MAAOmF,EAAKnF,WAGvB,kBAAC,GAAD,CAAOoa,KAAM,kBACNpa,MAAOgX,KAAK9T,MAAM+c,eAClBxC,UAAW,EACXE,UAAU,EACVjc,KAAK,WACL6b,YAAa,SAACpY,GAAD,OAAU,EAAKogB,qBAAqB,CAC7CxlB,IAAK,iBACLC,MAAOmF,EAAKnF,YAM/BiY,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,kBACLiD,UAAWrG,KAAK9T,MAAM8c,cACrBhJ,KAAK9T,MAAM+c,gBACXjJ,KAAK9T,MAAM8c,YAAYnD,OAAS,GAChC7F,KAAK9T,MAAM+c,eAAepD,OAAS,GACnC7F,KAAK9T,MAAM8c,cAAgBhJ,KAAK9T,MAAM+c,eACvC7G,QAAS,kBAAM,EAAKkM,uBAC5B,kBAAC,GAAD,CAAQlL,KAAK,QAAQhB,QAAS,kBAAM,EAAKrC,MAAM2K,cAAc,CAACgE,qBAAqB,c,GAlG9EnO,aA8GvBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CyN,KCnH1D1H,GAAU,CACnB,CAAC1d,MAAO,OAAQ0c,MAAO,QACvB,CAAC1c,MAAO,SAAU0c,MAAO,WA0EdiJ,G,kDAtEX,WAAY5O,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTgc,eAAe,EACfC,iBAAkB,GAClBC,aAAa,EACbC,iBAAiB,EACjBC,mBAAoB,GACpBK,oBAAoB,EACpB3Q,QAAS,CACLtN,KAAM,GACNoD,KAAM,KAZC,E,qDAiBT,IAAD,SACwBkS,KAAKD,MAA3B/G,EADF,EACEA,SAAU4U,EADZ,EACYA,SAEO5U,EAAS4Q,QAEjC,OACI,yBACIrI,UAAWvB,KAAK9T,MAAMkc,aAAepI,KAAK9T,MAAMyc,mBAAqB,mCAAqC,2BAE1G,yBAAKpH,UAAU,iCACVa,QAAS,kBAAM,EAAKrC,MAAM6O,QAAU,EAAK7O,MAAMqC,QAAQpJ,GAAY,EAAK+G,MAAM6C,QAAQvK,KAAnB,kBAAmCuV,EAAnC,qBAAwD5U,EAASZ,QACrI,yBAAKmJ,UAAU,aACW,SAApBvI,EAASoQ,OACP,kBAAC,KAAD,CAAe7H,UAAU,iBAAiBF,KAAK,OAAO/B,MAAM,UAC5D,kBAAC,KAAD,CAAiBiC,UAAU,iBAAiBF,KAAK,OAAO/B,MAAM,WAEtE,yBAAKiC,UAAU,aACVvI,EAAS4Q,SACV,yBAAKrI,UAAU,6CAAf,WAGCvI,EAASkQ,UACV,yBAAK3H,UAAU,6CACX,yBAAKA,UAAU,uBACX,kBAAC,KAAD,CAAaF,KAAK,OAAO/B,MAAM,WAEnC,yBAAKiC,UAAU,uBACVvI,EAASwQ,kBAIpBxJ,KAAKD,MAAM6O,SACb,yBAAKrN,UAAU,qBACX,yBAAKA,UAAU,4BAAf,OAGA,yBAAKA,UAAU,2BACVvI,EAASsQ,OAGhBtJ,KAAKD,MAAM6O,SAAW5V,EAASqQ,SACjC,yBAAK9H,UAAU,yBACX,kBAAC,KAAD,CAAeF,KAAK,OAAO/B,MAAM,UACjC,yBAAKiC,UAAU,+BAA+BvI,EAASqQ,gB,GA7DtD9I,aCAnBsO,G,kDACF,WAAY9O,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTwiB,qBAAqB,EACrBnE,YAAa,GACbC,uBAAuB,GAG3B,EAAKE,cAAgB,EAAKA,cAAczI,KAAnB,gBATN,E,iEAafjC,KAAKD,MAAM1J,oB,oCAGDlI,GACV6R,KAAKK,SAAL,eAAkBlS,M,+BAGZ,IAAD,OAEE0M,EAAgBmF,KAAKD,MAAMK,cAAcjT,OAAzC0N,aAiBP,OACI,yBAAK0G,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,WACA,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CACIqE,KAXG,CAAC,CACpB/C,KAAM,kBACN7Z,MAAO,oBAUSyc,eAAgB,SAACsE,GACD,oBAARA,GACA,EAAK1J,SAAS,CAACqO,qBAAqB,SAMxD,yBAAKnN,UAAU,kBACX,yBAAKA,UAAU,eACV1G,EAAagP,QACd,yBAAKtI,UAAU,4BACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,iCACV1G,EAAaqO,UADlB,IAC8BrO,EAAa+O,SAC3C,0CAEA,yBAAKrI,UAAU,+BACX,yBAAKA,UAAU,QACV2E,IAAI,mEACRrL,EAAagP,SAGtB,yBAAKtI,UAAU,oCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eAAf,qBACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,QACA,yBAAKA,UAAU,mBACV1G,EAAaqO,YAGtB,yBAAK3H,UAAU,kCACX,yBAAKA,UAAU,uBAAf,UACA,yBAAKA,UAAU,mBACV1G,EAAauO,SAGtB,yBAAK7H,UAAU,kCACX,yBAAKA,UAAU,uBAAf,iBACA,yBAAKA,UAAU,mBACV1G,EAAa2O,gBAGtB,yBAAKjI,UAAU,kCACX,yBAAKA,UAAU,uBAAf,OACA,yBAAKA,UAAU,mBACV1G,EAAayO,MAGtB,yBAAK/H,UAAU,kCACX,yBAAKA,UAAU,uBAAf,QACA,yBAAKA,UAAU,mBACV1G,EAAaC,YAUzCkF,KAAK9T,MAAMwiB,qBAAuB,kBAAC,GAAD,CAAgBhE,cAAe1K,KAAK0K,sB,GA/GrEnK,aA0HhBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CkO,KCvHxDC,G,kDAlBX,WAAY/O,GAAQ,uCACVA,G,gEAINzW,cACA6B,OAAOC,SAASgD,KAAO,M,+BAIvB,OACI,mD,GAZSmS,aCgBfwO,G,kDACF,WAAYhP,GAAQ,uCACVA,G,iEAINC,KAAKD,MAAM7J,iB,+BAGL,IAAD,SACyB8J,KAAKD,MAAMK,cAAcjT,OAAhD0N,EADF,EACEA,aAAc3B,EADhB,EACgBA,MACf+J,EAAW,CACb,CACIG,KAAM,WACN7K,GAAI,WACJoK,KAAM,cAIY,UAAtB9H,EAAaC,OACbmI,EAAS5K,KAAK,CACV+K,KAAM,QACN7K,GAAI,QACJoK,KAAM,SACNW,QAAS,kBAAM,EAAKvD,MAAM5I,YAAY,CAClC+B,MxBw+Bc,mBwBv+BdE,MAAM,OAGd6J,EAAS5K,KAAK,CACV+K,KAAM,aACN7K,GAAI,aACJoK,KAAM,cACNU,QAAS,QAIjB,IAAI5C,EAAU,CAAC,CACXkC,KAAM,aACNE,KAAM,kBAAC,KAAD,CAAaxB,KAAK,UACzB,CACCsB,KAAM,WACNE,KAAM,kBAAC,KAAD,CAAqBxB,KAAK,UACjC,CACCsB,KAAM,YACNE,KAAM,kBAAC,KAAD,CAAiBxB,KAAK,UAC7B,CACCsB,KAAM,UACNE,KAAM,kBAAC,KAAD,CAAYxB,KAAK,WAG3B,OACI,kBAAC2N,GAAD,CAAgBpM,QAAS5C,KAAKD,MAAM6C,QAASxX,SAAU4U,KAAKD,MAAM3U,SAAUiX,WAAY,CACpFC,QAAQ,UACR2M,WAAY,GACZC,gBAAiBrU,EACjBoI,WACAxC,UACA0O,iBAAkB,kBAAM,EAAKpP,MAAM6C,QAAQvK,KAAK,qBAChDvB,UAAWkJ,KAAKD,MAAMjJ,YAEtB,kBAACsY,GAAD,CAAoBrP,OAAK,IAExB7G,EAAMyF,kBAAoB,kBAAC,GAAD,CAAoBjU,KAAM,iBACpDwO,EAAMuF,gBAAkB,kBAAC,GAAD,CAAiB/T,KAAM,eAEhD,kBAAC,IAAD,CAAO2kB,KAAK,aAAaC,UAAW9C,KACpC,kBAAC,IAAD,CAAO6C,KAAK,YAAYC,UAAWnB,KACnC,kBAAC,IAAD,CAAOkB,KAAK,WAAWC,UAAWT,KAClC,kBAAC,IAAD,CAAOQ,KAAK,UAAUC,UAAWR,KACV,UAAtBjU,EAAaC,MAAoB,kBAAC,IAAD,CAAOuU,KAAK,SAASC,UAAWC,KAC3C,UAAtB1U,EAAaC,MAAoB,kBAAC,IAAD,CAAOuU,KAAK,cAAcC,UAAWE,U,GAvE5DjP,aAiFrBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CoO,KC5DxDU,I,2LAvCD,IAAD,SACsFzP,KAAKD,MAAzFjE,EADF,EACEA,WAAY4T,EADd,EACcA,YAAaC,EAD3B,EAC2BA,SAAUC,EADrC,EACqCA,SAAU9S,EAD/C,EAC+CA,QAAS+S,EADxD,EACwDA,aAAcC,EADtE,EACsEA,aAC3E,OACI,yBAAKvO,UAAU,aACVzE,GACD,yBAAKyE,UAAU,qCACX,kBAAC,GAAD,CAAS7W,KAAK,SAASqU,MAAM,SAASjC,QAASA,KAEnD,yBAAKyE,UAAU,mCAAmCa,QAAS,WACnDsN,EAAc,GACdE,EAASF,EAAc,KAG3B,yBAAK3Q,MAAO,CAACkH,MAAO,IACfC,IAAI,iEAEb,yBAAK3E,UAAU,qCACVmO,EADL,MACqB5T,EADrB,QAEI,yBAAKyF,UAAU,6BACVsO,EADL,MACsBC,IAG1B,yBAAKvO,UAAU,mCAAmCa,QAAS,WACvD,GAAIsN,EAAc5T,EAAY,CAC1B,IAAMiU,EAAe,IAAIC,gBAAgB,EAAKjQ,MAAM3U,SAASojB,QAC7DuB,EAAaE,IAAI,OAAQP,EAAc,GACvC,EAAK3P,MAAM6C,QAAQvK,KAAnB,UAA2B,EAAK0H,MAAM3U,SAASsX,SAA/C,YAA2DqN,EAAapI,aACxEgI,EAASD,EAAc,MAG3B,yBAAK3Q,MAAO,CAACkH,MAAO,IACfC,IAAI,uE,GAhCV3F,cCMb2P,G,kDACF,WAAYnQ,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTikB,qBAAqB,EACrBC,cAAe,GACf7F,YAAa,GACbrC,eAAe,GAPJ,E,iEAYf,IAAMmI,EAAY,IAAIL,gBAAgBhQ,KAAKD,MAAM3U,SAASojB,QAC1DxO,KAAKD,MAAMlM,eAAewc,EAAU3hB,IAAI,QAAU2hB,EAAU3hB,IAAI,QAAU,GAEhD,UADHsR,KAAKD,MAAMK,cAAcjT,OAAzC0N,aACUC,MACbkF,KAAKD,MAAM7J,iB,0CAK6B,oBAAxC/K,OAAOC,SAASojB,OAAOC,UAAU,IAA6BzO,KAAK9T,MAAMkkB,cAAclH,WACvFlJ,KAAKD,MAAM6C,QAAQvK,KAAK,cAFZ,IAKTwC,EAAgBmF,KAAKD,MAAMK,cAAcjT,OAAzC0N,aACmB,UAAtBA,EAAaC,MAAoBD,EAAa5B,QAC9C+G,KAAKK,SAAS,CAACiQ,UAAW,CAACtnB,MAAO6R,EAAa5B,OAAOb,IAAKsN,MAAO7K,EAAa5B,OAAOmK,U,+BAIpF,IAAD,SAE2DpD,KAAKD,MAAMK,cAAcjT,OAAlF6O,EAFF,EAEEA,gBAAiBc,EAFnB,EAEmBA,QAAStS,EAF5B,EAE4BA,cAAeqQ,EAF3C,EAE2CA,aAE1C0V,EAAuBvU,EAAgBC,UAAU+N,QAAO,SAACwG,GAC3D,OAAOA,EAAOtH,UAAU9b,cAAc+V,SAAS,EAAKjX,MAAMqe,YAAYnd,kBAG1E,OACI,yBAAKmU,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,YACA,yBAAKA,UAAU,uBACVhX,YAAoBC,EAAeqQ,EAAagP,OAAQ,WAAY,QACrE,kBAAC,GAAD,CAAQzG,KAAI,eACJhB,QAAS,kBAAM,EAAKrC,MAAM5I,YAAY,CAClC+B,M1Bm9BF,mB0Bl9BEE,MAAM,SAK1B,yBAAKmI,UAAU,kBAEX,6BACKgP,GAAwBA,EAAqB/N,KAAI,SAACiO,EAAU1nB,GACzD,OACI,kBAAC,GAAD,CAAYA,IAAKA,EAAKiQ,SAAUyX,EACpB5U,KAAMG,EAAgBL,MAAME,KAC5B+G,QAAS,EAAK7C,MAAM6C,QACpBgL,SAAU,EAAK7N,MAAMzU,MAAMwb,OAAO8G,SAClC/Z,eAAgB,EAAKkM,MAAMlM,oBAGd,IAAhC0c,EAAqB1K,QACtB,yBAAK9G,MAAO,CAACO,MAAO,WAAYyD,MAAM,UAAtC,oBAEJ,yBAAKxB,UAAU,eACX,kBAAC,GAAD,CACIzE,QAASA,EAAQM,sBACjBsS,YAAa1T,EAAgBL,MAAME,KACnCC,WAAYE,EAAgBL,MAAMG,WAClC+T,aAAc7T,EAAgBC,UAAU4J,OACxCiK,aAAc9T,EAAgBL,MAAMC,MACpC+T,SAAU,SAACe,GAAD,OAAQ,EAAK3Q,MAAMlM,eAAe6c,IAC5Cd,SAAU,SAACc,GAAD,OAAQ,EAAK3Q,MAAMlM,eAAe6c,IAC5C9N,QAAS5C,KAAKD,MAAM6C,QACpBxX,SAAU4U,KAAKD,MAAM3U,kB,GA/ErBmV,aA4FtBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CuP,KC/DxDS,I,8KAxCD,IAAD,EACiD3Q,KAAKD,MAApD6Q,EADF,EACEA,QAASjV,EADX,EACWA,MAAO0F,EADlB,EACkBA,KAAMwP,EADxB,EACwBA,SAAUC,EADlC,EACkCA,YACnC1J,EAAS,CACT2J,KAAM,qBACNH,QAAS,UACTjV,MAAO,SAGX,OAAQ0F,GACJ,IAAK,QACD+F,EAAS,CACL2J,KAAM,2BACNH,QAAS,UACTjV,MAAO,SAYnB,OAJIkV,IACAzJ,EAAO2J,KAAO3J,EAAO2J,KAAO,cAI5B,yBAAKxP,UAAW6F,EAAO2J,KAAMhS,MAAO,CAAC+R,gBAChCF,GACD,yBAAKrP,UAAW6F,EAAOwJ,SAClBA,GAEL,yBAAKrP,UAAW6F,EAAOzL,OAClBA,Q,GAjCG4E,cC2DTyQ,G,kDAtDX,WAAYjR,GAAQ,uCACVA,G,qDAGA,IAAD,SACuBC,KAAKD,MAA1BhH,EADF,EACEA,QAAS6U,EADX,EACWA,SAEhB,OACI,yBAAKrM,UAAU,mCACVa,QAAS,kBAAM,EAAKrC,MAAM6C,QAAQvK,KAAnB,kBAAmCuV,EAAnC,oBAAuD7U,EAAQX,QAC/E,yBAAKmJ,UAAU,YAAYhJ,GAAG,QAC1B,kBAAC,KAAD,CAAcgJ,UAAU,iBAAiBF,KAAK,UAElD,yBAAKE,UAAU,YAAYhJ,GAAG,QACzBQ,EAAQC,SAASwQ,eAAiB,8BAAOzQ,EAAQC,SAASwQ,eAD/D,IACuFzQ,EAAQC,SAASkQ,WAAanQ,EAAQX,IACzH,6BACI,yBAAKmJ,UAAU,yBACVxI,EAAQX,KAEb,yBAAKmJ,UAAU,yBACV7X,YAAsBqP,EAAQ+Q,kBAEnC,yBAAKvI,UAAU,yBACVxI,EAAQmR,SAAShB,WAErBnQ,EAAQ6Q,SACT,yBAAKrI,UAAU,2BAAf,aAMR,yBAAKA,UAAU,sBAAsBhJ,GAAG,QACpC,kBAAC,GAAD,CAAWqY,QAAO,UAAK7X,EAAQ2C,SAASmK,QAC7BlK,MAAK,UACL0F,KAAK,UAChB,kBAAC,GAAD,CAAWuP,QAAO,UAAK7X,EAAQqD,SAASyJ,QAC7BlK,MAAK,UACL0F,KAAK,UACG,YAAlBtI,EAAQ7M,OACT,kBAAC,GAAD,CAAW0kB,QAAO,aAAQ7X,EAAQkY,kBAAkBC,QAAQ,GAAKnY,EAAQoY,YAAYD,QAAQ,GAA3E,KACPvV,MAAK,UACL0F,KAAK,QAAQyP,YAAY,YAEpC,kBAAC,GAAD,CAAWF,QAAO,aAAQ7X,EAAQkY,kBAAkBC,QAAQ,IACjDvV,MAAK,cACL0F,KAAK,gB,GA/CZd,aCYlB6Q,G,kDACF,WAAYrR,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTmlB,mBAAmB,EACnBhJ,iBAAiB,GAGrB,EAAKO,eAAiB,EAAKA,eAAe3G,KAApB,gBACtB,EAAKqP,uBAAyB,EAAKA,uBAAuBrP,KAA5B,gBATf,E,iEAYG,IACb1J,EAAMyH,KAAKD,MAAMzU,MAAMwb,OAAvBvO,GACLyH,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,WAAY6N,S,uCAGxB,IACP4P,EAAoBnI,KAAK9T,MAAzBic,iBACP,OAAQA,EAAiBe,WAC8B,IAAhDqI,OAAOC,KAAKrJ,EAAiBiB,QAAQvD,UAAkB+B,OAAOO,EAAiBmB,KAAO,IACjC,KAArDnB,EAAiBqB,cAAc7B,WAAW9B,S,sFAGxB7M,G,kFACzBgH,KAAKK,SAAS,CAACgI,iBAAiB,EAAOoJ,eAAe,I,kBAE7BhI,GAAI,CAAC/e,KAAM,SAAUkC,IAAK,YAAcoM,EAASZ,M,gBAA/DlL,E,EAAAA,KACP8S,KAAKK,SAAS,CACV+H,aAAa,EACbO,oBAAoB,EACpB3Q,QAAS,CAACtN,KAAM,UAAWoD,KAAMZ,EAAK8K,WAGrC9K,GAAwB,UAAhBA,EAAKmB,QAKTkK,EAAMyH,KAAKD,MAAMzU,MAAMwb,OAAvBvO,GACLyH,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,WAAY6N,OAClCrL,EAAK8K,SACLgI,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS9K,EAAK8K,QAASC,MAAO,aAP1D/K,EAAKiB,MACL6R,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS9K,EAAKiB,KAAM8J,MAAO,UAS/D+H,KAAKK,SAAS,CAACoR,eAAe,I,kDAE9BzR,KAAKK,SAAS,CAACoR,eAAe,IAC9BzR,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS,KAAE2P,WAAY1P,MAAO,U,gJAIxD,IAAD,SAEsD+H,KAAKD,MAAMK,cAAcjT,OAA7EsL,EAFF,EAEEA,WAAYjO,EAFd,EAEcA,cAAesS,EAF7B,EAE6BA,QAASjC,EAFtC,EAEsCA,aACpCnC,EAAkCD,EAAlCC,OAAQE,EAA0BH,EAA1BG,cAETuL,GAFmC1L,EAAXH,QAEhB,CACV,CACIgM,SAAS,aAAD,OAAe1L,GAAiBA,EAAciN,OAA9C,KACRtB,OACI,yBAAKhD,UAAU,iCACV3I,GAAiBA,EAAc4J,KAAI,SAACzJ,EAAShQ,GAC1C,OAAO,kBAAC,GAAD,CAAWgQ,QAASA,EACT6J,QAAS,EAAK7C,MAAM6C,QACpB7Z,IAAKA,EAAK6kB,SAAU7U,EAAQE,gBAMlE,OACI,yBAAKsI,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBACIgJ,UAAU,oBADd,WAC0C7I,EAAON,IAAP,aAAmBM,EAAOwQ,UAA1B,cAAyCxQ,EAAON,KAAQ,IAClG,yBAAKmJ,UAAU,uBACX,kBAAC,GAAD,CAAS7W,KAAK,SAASqU,MAAM,SACpBjC,QAASA,EAAQmB,gBAAkBnB,EAAQgB,sBACjDhB,EAAQmB,iBAAmBnB,EAAQgB,qBAAwBpF,EAAOkR,SACrErf,YAAoBC,EAAeqQ,EAAagP,OAAQ,WAAY,SACpE,kBAAC,KAAD,CAAQxI,KAAK,OAAOtC,MAAO,CAACG,OAAQ,IAAKqC,UAAU,cAC3Ca,QAAS,kBAAM,EAAK/B,SAAS,CACzBgR,mBAAmB,EACnBlJ,iBAAiB,2BACVzP,GADS,IAEZ0Q,OAAQ1C,GAAQsD,QAAO,SAACC,GAAD,OAAQA,EAAGjhB,QAAU0P,EAAO0Q,UAAQ,WAGxEtM,EAAQmB,iBAAmBnB,EAAQgB,qBAAwBpF,EAAOkR,SACrErf,YAAoBC,EAAeqQ,EAAagP,OAAQ,WAAY,WACpE,kBAAC,KAAD,CAAiBxI,KAAK,OAAOtC,MAAO,CAACG,OAAQ,IAAKqC,UAAU,cAC3Ca,QAAS,kBAAM,EAAK/B,SAAS,CAACgI,iBAAiB,SAGxE,yBAAK9G,UAAU,kBACX,yBAAKA,UAAU,eACU,aAApB9I,EAAW/N,MAAuBgO,EAAON,KAC1C,6BACI,yBAAKmJ,UAAU,4BACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,iCACV7I,EAAOwQ,UADZ,IACwBxQ,EAAOkR,SAC/B,0CAEA,yBAAKrI,UAAU,+BACX,yBAAKA,UAAU,QACV2E,IAAI,mEACRxN,EAAON,MAGhB,yBAAKmJ,UAAU,oCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eAAf,yBACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,QACA,yBAAKA,UAAU,mBACV7I,EAAOwQ,YAGhB,yBAAK3H,UAAU,kCACX,yBAAKA,UAAU,uBAAf,iBACA,yBAAKA,UAAU,mBACV7I,EAAO8Q,gBAGhB,yBAAKjI,UAAU,kCACX,yBAAKA,UAAU,uBAAf,OACA,yBAAKA,UAAU,mBACV7I,EAAO4Q,MAGhB,yBAAK/H,UAAU,kCACX,yBAAKA,UAAU,uBAAf,WACA,yBAAKA,UAAU,mBACV7I,EAAO2Q,YAKxB,yBAAK9H,UAAU,aACX,yBAAKA,UAAU,eAAf,wBACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,iBACA,yBAAKA,UAAU,mBACV3I,EAAciN,aAOvC,yBAAK9G,MAAO,CAAC2S,WAAY,KACrB,kBAAC,GAAD,CAAMvN,MAAOA,EAAOzZ,KAAK,gBAQrCsV,KAAK9T,MAAMmlB,mBACX,kBAAC9N,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,WACL,EAAKT,SAAS,CAACgR,mBAAmB,EAAOlJ,iBAAkB,MAE/DhH,eAAe,EACfE,KAAK,MACLN,OACI,+CACmB,0BAAMQ,UAAU,qBAAqB7I,EAAOwQ,YAGnElI,QACI,6BACI,kBAAC,GAAD,CAAOoC,KAAM,OACNpa,MAAOgX,KAAK9T,MAAMic,iBAAiBe,UACnCvC,UAAU,EACVJ,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACV8H,iBAAiB,2BACV,EAAKjc,MAAMic,kBADF,IAEZe,UAAW/a,EAAKnF,aAMnC,kBAAC,GAAD,CAAOoa,KAAM,gBACNpa,MAAOgX,KAAK9T,MAAMic,iBAAiBqB,cACnC9e,KAAK,gBACL2b,UAAU,EACVG,UAAU,KACVD,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACV8H,iBAAiB,2BACV,EAAKjc,MAAMic,kBADF,IAEZqB,cAAerb,EAAKnF,aAMvC,kBAAC,GAAD,CAAOoa,KAAM,eACNpa,MAAOgX,KAAK9T,MAAMic,iBAAiBkB,QACnC3e,KAAK,WACL6b,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACV8H,iBAAiB,2BACV,EAAKjc,MAAMic,kBADF,IAEZkB,QAASlb,EAAKnF,aAMjC,kBAAC,GAAD,CAAOoa,KAAM,QACNpa,MAAOgX,KAAK9T,MAAMic,iBAAiBgB,MACnC5C,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACV8H,iBAAiB,2BACV,EAAKjc,MAAMic,kBADF,IAEZgB,MAAOhb,EAAKnF,aAM/B,kBAAC,GAAD,CAAOoa,KAAM,MACNpa,MAAOgX,KAAK9T,MAAMic,iBAAiBmB,IACnC5e,KAAK,SACL8b,UAAU,IACVG,UAAU,EACVJ,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACV8H,iBAAiB,2BACV,EAAKjc,MAAMic,kBADF,IAEZmB,IAAKnb,EAAKnF,aAM7B,kBAAC,GAAD,CAAOoa,KAAM,SACNpa,MAAOgX,KAAK9T,MAAMic,iBAAiBiB,OACnC1e,KAAK,SACLic,UAAU,EACVD,QAASA,GACTH,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACV8H,iBAAiB,2BACV,EAAKjc,MAAMic,kBADF,IAEZiB,OAAQjb,UAOnC8S,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLiD,SAAUrG,KAAK4I,iBACfxG,QAAS,WAAO,IACL+F,EAAoB,EAAKjc,MAAzBic,iBACP,EAAKpI,MAAM5L,YAAY,CACnBiP,KAAM+E,EAAiBe,UACvBC,MAAOhB,EAAiBgB,MACxBC,OAAQjB,EAAiBiB,OAAOpgB,MAChCqgB,QAASlB,EAAiBkB,QAC1BC,IAAK1B,OAAOO,EAAiBmB,KAC7BC,SAAU3B,OAAOO,EAAiBqB,eAClC8G,UAAW1I,OAAOpd,EAAc4N,OAEpC,EAAKiI,SAAS,CAAC8H,iBAAkB,GAAIkJ,mBAAmB,OAEpE,kBAAC,GAAD,CAAQjO,KAAK,QAAQhB,QAAS,WAC1B,EAAK/B,SAAS,CAAC8H,iBAAkB,GAAIkJ,mBAAmB,UAQxErR,KAAK9T,MAAMmc,iBACX,kBAAC9E,GAAD,CACI1C,KAAMb,KAAK9T,MAAMmc,gBACjBnH,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAACgI,iBAAiB,KAC/ClH,eAAe,EACfE,KAAK,OACLN,OACI,gDACoB,8BAAOrI,EAAOwQ,YAGtClI,QACI,yBAAKjC,MAAO,CAACS,QAAS,KAAtB,uKAMJyB,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLhB,QAAO,sBAAE,sBAAA1V,EAAA,sEACC,EAAK4kB,uBAAuB5Y,GAD7B,6CAGjB,kBAAC,GAAD,CAAQ0K,KAAK,QAAQhB,QAAS,kBAAM,EAAK/B,SAAS,CAACgI,iBAAiB,e,GA3TvE9H,aAyUvBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CyQ,KCnSxDO,I,wDArDX,WAAY5R,GAAQ,uCACVA,G,qDAGA,IAAD,SAC0CC,KAAKD,MAA7CpH,EADF,EACEA,QAASiZ,EADX,EACWA,aAAcC,EADzB,EACyBA,cAE9B,OACI,yBAAKtQ,UAAU,mCACVa,QAAS,kBAAM,EAAKrC,MAAM6C,QAAQvK,KAAnB,kBAAmC,EAAK0H,MAAM6N,SAA9C,oBAAkEjV,EAAQP,QAC1F,yBAAKmJ,UAAU,YAAYhJ,GAAG,QAC1B,kBAAC,KAAD,CAAWgJ,UAAU,iBAAiBF,KAAK,UAE/C,yBAAKE,UAAU,YAAYhJ,GAAG,QACzBI,EAAQyK,KACT,6BACKzK,EAAQP,KACT,yBAAKmJ,UAAU,yBACV5I,EAAQP,KAEZO,EAAQmR,iBAAmB,yBAAKvI,UAAU,yBACtC7X,YAAsBiP,EAAQmR,kBAElCnR,EAAQiR,SACT,yBAAKrI,UAAU,2BAAf,cAKNsQ,GACF,yBAAKtQ,UAAU,sBAAsBhJ,GAAG,QACnCqZ,GACD,kBAAC,GAAD,CAAWhB,QAAO,UAAKgB,EAAL,YAAqBjZ,EAAQmZ,cACpCnW,MAAK,WACL0F,KAAK,UAChB,kBAAC,GAAD,CAAWuP,QAAO,UAAKjY,EAAQoZ,iBAAiBb,QAAQ,GAAtC,YAA4CvY,EAAQmZ,cAC3DnW,MAAK,YACL0F,KAAK,UAChB,kBAAC,GAAD,CAAWuP,QAAQ,OAAOjV,MAAOhD,EAAQqZ,aAAc3Q,KAAK,WAG/DwQ,GACD,yBAAKtQ,UAAU,sBAAsBhJ,GAAG,QACpC,kBAAC,GAAD,CAAWqY,QAAO,UAAKjY,EAAQsZ,eAAiBtW,MAAK,UAAKhD,EAAQmZ,cAAgBzQ,KAAK,UACvF,kBAAC,GAAD,CAAWuP,QAAQ,OAAOjV,MAAOhD,EAAQqZ,aAAc3Q,KAAK,gB,GA7CxDd,cCkFT2R,G,kDAhFX,WAAYnS,GAAQ,uCACVA,G,qDAGA,IAAD,SAC+CC,KAAKD,MAAlDjH,EADF,EACEA,QAASqZ,EADX,EACWA,kBAAmBN,EAD9B,EAC8BA,cAEnC,OACI,yBAAKtQ,UAAU,mCACVa,QAAS,kBAAM,EAAKrC,MAAM6C,QAAQvK,KAAnB,kBAAmC,EAAK0H,MAAM6N,SAA9C,oBAAkE9U,EAAQV,QAC1F,yBAAKmJ,UAAU,YAAYhJ,GAAG,QAC1B,kBAAC,KAAD,CAAYgJ,UAAU,iBAAiBF,KAAK,UAEhD,yBAAKE,UAAU,YAAYhJ,GAAG,QACzBO,EAAQsK,KACT,6BACKtK,EAAQV,KACT,yBAAKmJ,UAAU,yBACVzI,EAAQV,KAEZyZ,GAAiB/Y,EAAQV,KAC1B,yBAAKmJ,UAAU,yBACVzI,EAAQV,KAEZU,EAAQgR,iBAAmB,yBAAKvI,UAAU,yBACtC7X,YAAsBoP,EAAQgR,kBAElChR,EAAQoR,UACT,yBAAK3I,UAAU,yBACVzI,EAAQoR,SAAShB,WAErBpQ,EAAQ8Q,SACT,yBAAKrI,UAAU,2BAAf,aAKR,yBAAKA,UAAU,sBAAsBhJ,GAAG,SAClC4Z,GACF,kBAAC,GAAD,CAAWvB,QAAO,UAAK9X,EAAQsZ,oBAAoBvM,QACxClK,MAAO,gBACP0F,KAAK,WAEb8Q,IAAsBN,GACzB,kBAAC,GAAD,CAAWjB,QAAO,UAAK9X,EAAQuZ,aAAaxM,QACjClK,MAAO,gBACP0F,KAAK,UAEd8Q,IAAsBN,GAAkB/Y,EAAQsZ,oBAAoB5P,KAAI,SAAC8P,EAAYvpB,GACnF,IAAMwpB,EAAczZ,EAAQuZ,aAAarI,QAAO,SAACwI,GAAD,OAAQA,EAAGpa,MAAQka,EAAWla,OAAK,GACnF,OAAIma,EAEI,kBAAC,GAAD,CAAW3B,QAAO,UAAK2B,EAAYnP,MAAQra,IAAKA,EACrC4S,MAAK,UAAK2W,EAAWL,cAAhB,YAAiCM,EAAYT,cAClDzQ,KAAK,UAGjB,QAET8Q,GAAqBN,GAAkB/Y,EAAQuZ,aAAa7P,KAAI,SAAC8P,EAAYvpB,GAC3E,OACI,kBAAC,GAAD,CAAW6nB,QAAO,UAAK0B,EAAWlP,MAAQra,IAAKA,EACpC4S,MAAK,UAAK2W,EAAWL,cAAhB,YAAiCK,EAAWR,cACjDzQ,KAAK,aAIvBwQ,GACD,kBAAC,GAAD,CAAWjB,QAAO,aAAQ9X,EAAQ2Z,cACvB9W,MAAK,OACL0F,KAAK,gB,GAvEZd,aCMlBmS,G,kDACF,WAAY3S,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTgY,UAAW,GAJA,E,iEASf,IAAMmM,EAAY,IAAIL,gBAAgBhQ,KAAKD,MAAM3U,SAASojB,QAC1D,OAAQ6B,EAAU3hB,IAAI,QAClB,IAAK,IACDsR,KAAKK,SAAS,CAAC6D,UAAW0D,OAAOyI,EAAU3hB,IAAI,UAC/CsR,KAAKD,MAAMzK,cAAc+a,EAAU3hB,IAAI,QAAU2hB,EAAU3hB,IAAI,QAAU,GACzE,MAEJ,QACIsR,KAAKD,MAAM7K,cAAcmb,EAAU3hB,IAAI,QAAU2hB,EAAU3hB,IAAI,QAAU,M,+BAM3E,IAAD,SAE4FsR,KAAKD,MAAMK,cAAcjT,OAAnHsO,EAFF,EAEEA,gBAAiBU,EAFnB,EAEmBA,eAAgBtB,EAFnC,EAEmCA,aAAcgE,EAFjD,EAEiDA,gBAAiBrU,EAFlE,EAEkEA,cAAesS,EAFjF,EAEiFA,QAEhFqH,EAAQ,CACV,CACIG,SAAU,WACVC,OACI,yBAAKxF,MAAO,CAAC+L,SAAU,WAClBrP,EAAgBC,SAAS8G,KAAI,SAACrU,EAAMpF,GACjC,OACI,kBAAC,GAAD,CAAW4P,QAASxK,EAAMyU,QAAS/D,EAAiB9V,IAAKA,EAC9C6kB,SAAU,EAAK7N,MAAMzU,MAAMwb,OAAO8G,cAGhB,IAApCnS,EAAgBC,SAASmK,QAC1B,yBAAK9G,MAAO,CAACO,MAAO,UAAWE,QAAS,IAAKuD,MAAM,UAAnD,qBAGZ,CACIuB,SAAU,WACVC,OACI,yBAAKxF,MAAO,CAAC+L,SAAU,WAClB3O,EAAeC,SAASoG,KAAI,SAACrU,EAAMpF,GAChC,OACI,kBAAC,GAAD,CAAW+P,QAAS3K,EAAMyU,QAAS,EAAK7C,MAAM6C,QAAS7Z,IAAKA,EACjD6kB,SAAU,EAAK7N,MAAMzU,MAAMwb,OAAO8G,cAGjB,IAAnCzR,EAAeC,SAASyJ,QACzB,yBAAK9G,MAAO,CAACO,MAAO,UAAWE,QAAS,IAAKuD,MAAM,UAAnD,sBAKZ4P,EAAa,GACjB,OAAQ3S,KAAK9T,MAAMgY,WACf,KAAK,EACDyO,EAAa,CACT7V,QAASA,EAAQI,kBACjBwS,YAAajU,EAAgBE,MAAME,KACnCC,WAAYL,EAAgBE,MAAMG,WAClC+T,aAAcpU,EAAgBC,SAASmK,OACvCiK,aAAcrU,EAAgBE,MAAMC,MACpC+T,SAAU,SAACe,GAAD,OAAQ,EAAK3Q,MAAM7K,cAAcwb,IAC3Cd,SAAU,SAACc,GAAD,OAAQ,EAAK3Q,MAAM7K,cAAcwb,KAE/C,MAEJ,KAAK,EACDiC,EAAa,CACT7V,QAASA,EAAQQ,kBACjBoS,YAAavT,EAAeR,MAAME,KAClCC,WAAYK,EAAeR,MAAMG,WACjC+T,aAAc1T,EAAeC,SAASyJ,OACtCiK,aAAc3T,EAAeR,MAAMC,MACnC+T,SAAU,SAACe,GAAD,OAAQ,EAAK3Q,MAAMzK,cAAcob,IAC3Cd,SAAU,SAACc,GAAD,OAAQ,EAAK3Q,MAAMzK,cAAcob,KAIvD,IACIkC,EADAC,EAAU,kBAEd,OAAQ7S,KAAK9T,MAAMgY,WACf,KAAK,EACD2O,EAAU,UACVD,EAAc,kBAAM,EAAK7S,MAAM5I,YAAY,CAAC+B,MAAOC,GAAmBC,MAAM,KAC5E,MACJ,KAAK,EACDyZ,EAAU,UACVD,EAAc,kBAAM,EAAK7S,MAAM5I,YAAY,CAAC+B,MAAOO,GAAmBL,MAAM,KAQpF,OACI,yBAAKmI,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,qBACA,yBAAKA,UAAU,uBACVhX,YAAoBC,EAAeqQ,EAAagP,OAAQ,QAAS,QAClE,kBAAC,GAAD,CAAQzG,KAAI,cAASyP,GAAWzQ,QAAS,kBAAMwQ,SAKvD,yBAAKrR,UAAU,eAAehJ,GAAG,eAC7B,kBAAC,GAAD,CAAM4L,MAAOA,EAAOD,UAAWlE,KAAK9T,MAAMgY,UAAWD,WAAY,SAAC8G,GAC9D,EAAK1K,SAAS,CAAC6D,UAAW6G,IAC1B,IAAMgF,EAAe,IAAIC,gBAAgB,EAAKjQ,MAAM3U,SAASojB,QAC7DuB,EAAaE,IAAI,MAAOlF,GACxB,IAAIlP,EAAO,EACX,OAAQkP,GACJ,KAAK,EACDlP,EAAOM,EAAeR,MAAME,KACW,IAAnCM,EAAeC,SAASyJ,QACxB,EAAK9F,MAAMzK,cAAcuG,GAE7B,MAEJ,QACIA,EAAOJ,EAAgBE,MAAME,KACW,IAApCJ,EAAgBC,SAASmK,QACzB,EAAK9F,MAAM7K,cAAc2G,GAKrCkU,EAAaE,IAAI,OAAQpU,EAAK8L,YAC9B,EAAK5H,MAAM6C,QAAQvK,KAAnB,kBAAmC,EAAK0H,MAAMzU,MAAMwb,OAAO8G,SAA3D,mBAA8EmC,EAAapI,gBAE/F,yBAAKpG,UAAU,eACX,kBAAC,GAAD,iBAAYoR,EAAZ,CACQ/P,QAAS5C,KAAKD,MAAM6C,QACpBxX,SAAU4U,KAAKD,MAAM3U,mB,GA7IjCmV,aA0JdC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6C+R,KC1JjEI,GAAc,CAChB,CAAC/pB,IAAK,KAAM+E,KAAM,KAAM9E,MAAO,MAC/B,CAACD,IAAK,OAAQ+E,KAAM,OAAQ9E,MAAO,QACnC,CAACD,IAAK,QAAS+E,KAAM,QAAS9E,MAAO,SACrC,CAACD,IAAK,QAAS+E,KAAM,QAAS9E,MAAO,SACrC,CAACD,IAAK,MAAO+E,KAAM,MAAO9E,MAAO,OACjC,CAACD,IAAK,OAAQ+E,KAAM,OAAQ9E,MAAO,QACnC,CAACD,IAAK,KAAM+E,KAAM,KAAM9E,MAAO,MAC/B,CAACD,IAAK,MAAO+E,KAAM,MAAO9E,MAAO,OACjC,CAACD,IAAK,WAAY+E,KAAM,WAAY9E,MAAO,YAC3C,CAACD,IAAK,WAAY+E,KAAM,WAAY9E,MAAO,aAG3C+pB,GAAiB,GAEfC,G,kDAEF,WAAYjT,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTxB,KAAM,GACN0N,IAAK,GACL6a,YAAa,GACbC,YAAa,GACbC,YAAa,EACbC,aAAc,EACdC,cAAe,EACfC,cAAe,EACfC,YAAa,GACbC,cAAe,EACfjB,YAAa,GACbtZ,OAAQ,IAGZ,EAAKwa,cAAgB,EAAKA,cAAcxR,KAAnB,gBACrB,EAAKyR,sBAAwB,EAAKA,sBAAsBzR,KAA3B,gBAC7B,EAAK0R,eAAiB,EAAKA,eAAe1R,KAApB,gBACtB,EAAK2R,aAAe,EAAKA,aAAa3R,KAAlB,gBACpB,EAAK4R,kBAAoB,EAAKA,kBAAkB5R,KAAvB,gBACzB,EAAK6R,0BAA4B,EAAKA,0BAA0B7R,KAA/B,gBAvBlB,E,gEA0BE,IAAD,EAC0BjC,KAAKD,MAAxCgU,EADS,EACTA,aAAcva,EADL,EACKA,YAAa9O,EADlB,EACkBA,KAElC,GAAa,gBAATA,EACAsV,KAAKK,SAAS,CAAC3V,KAAM,qBAClB,GAAa,gBAATA,EACPsV,KAAKK,SAAS,CAAC3V,KAAM,qBAClB,GAAa,iBAATA,GACP,GAAI6mB,OAAOC,KAAKuC,GAAclO,OAAS,EAAG,CACtC,IAAI1X,EAAO,CACPzD,KAAM,eACN0N,IAAK2b,EAAa3b,IAClB6a,YAAac,EAAa3Q,KAC1B8P,YAAaJ,GAAY9I,QAAO,SAACgK,GAAD,OAAQA,EAAGhrB,QAAU+qB,EAAajC,gBAAc,GAChFqB,YAAaY,EAAa/B,cAE9BhS,KAAKK,SAASlS,SAEf,GAAa,iBAATzD,GACH6mB,OAAOC,KAAKhY,GAAaqM,OAAS,EAAG,CACrC,IAAI1X,EAAO,CACPzD,KAAM,eACN0N,IAAKoB,EAAYpB,IACjBmb,YAAa/Z,EAAY4J,KACzBoQ,cAAe5H,OAAOpS,EAAYiZ,cAClCF,YAAa/Y,EAAY6Y,aAAarI,QAAO,SAACiK,GAAD,OAASA,EAAGrK,WAASpH,KAAI,SAACyR,GACnE,IAAMC,EAAY1a,EAAY4Y,oBAAoBpI,QAAO,SAACmK,GAAD,OAAYF,EAAG7b,MAAQ+b,EAAO/b,OACjFgc,EAAcF,EAAUrO,OAAS,EAAIqO,EAAU,GAAGjC,cAAgB,EACxE,OAAO,2BACAoC,GAAqB,CAACJ,IAAK,IADlC,IACsCK,2BAA4BF,EAAaG,QAASN,QAIhGjU,KAAKK,SAASlS,M,sCAKT,IAAD,EAC4D6R,KAAK9T,MAAtExB,EADK,EACLA,KAAM0N,EADD,EACCA,IAAK6a,EADN,EACMA,YAAaC,EADnB,EACmBA,YAAaC,EADhC,EACgCA,YAAaI,EAD7C,EAC6CA,YACzDvT,KAAKD,MAAMnJ,iBAAiBoJ,KAAKD,MAAM6C,SAEvC,IAAIgL,EAAW,CAAC0C,UAAWtQ,KAAKD,MAAMzU,MAAMwb,OAAO8G,UACnD,GAAa,gBAATljB,EACAsV,KAAKD,MAAMjL,eAAX,aACIsO,KAAM6P,EACNuB,KAAMtB,EAAYlqB,MAClByrB,KAAM7M,OAAOuL,IACVvF,SAEJ,GAAa,iBAATljB,EACPsV,KAAKD,MAAM9K,cAAX,aACImD,MACAgL,KAAM6P,EACNuB,KAAMtB,EAAYlqB,MAClByrB,KAAM7M,OAAOuL,IACVvF,SAEJ,GAAa,iBAATljB,EAAyB,CAChC,IAAIgqB,EAAU,aACVtc,MACAgL,KAAMmQ,EAAaC,cAAexT,KAAK9T,MAAMsnB,cAAc7L,YAAeiG,GAE9E8G,EAAWnC,YAAcvS,KAAK9T,MAAMqmB,YAAY/P,KAAI,SAAC+P,GAAD,OAAiBA,EAAYxpB,OAC3DiX,KAAK9T,MAAMqmB,YAAYvI,QAAO,SAAC2K,GAAD,OAAYA,EAAOL,4BAA8B1M,OAAO+M,EAAOL,6BAAgC1M,OAAO+M,EAAOL,4BAA8B,KAC7KzO,OAAS,IACvB6O,EAAWE,kBAAoB5U,KAAK9T,MAAMqmB,YAAY/P,KAAI,SAACmS,GACvD,MAAO,CAACvc,IAAKuc,EAAOJ,QAAQnc,IAAK6Z,cAAerK,OAAO+M,EAAOL,iCAGtEtU,KAAKD,MAAMrL,cAAcggB,OACtB,CACH,IAAIA,EAAU,aACVtR,KAAMmQ,EAAaC,cAAexT,KAAK9T,MAAMsnB,cAAc7L,YAAeiG,GAE9E8G,EAAWnC,YAAcvS,KAAK9T,MAAMqmB,YAAY/P,KAAI,SAAC+P,GAAD,OAAiBA,EAAYxpB,OAC3DiX,KAAK9T,MAAMqmB,YAAYvI,QAAO,SAAC2K,GAAD,OAAYA,EAAOL,4BAA8B1M,OAAO+M,EAAOL,6BAAgC1M,OAAO+M,EAAOL,4BAA8B,KAC7KzO,OAAS,IACvB6O,EAAWE,kBAAoB5U,KAAK9T,MAAMqmB,YAAY/P,KAAI,SAACmS,GACvD,MAAO,CAACvc,IAAKuc,EAAOJ,QAAQnc,IAAK6Z,cAAerK,OAAO+M,EAAOL,iCAGtEtU,KAAKD,MAAMxL,eAAemgB,GAE9B1U,KAAK4T,iB,qCAGMzlB,GACX6R,KAAKK,SAASlS,K,4CAGIpF,EAAKC,GAAQ,IACxBupB,EAAevS,KAAK9T,MAApBqmB,YACPA,EAAYxpB,GAAKurB,2BAA6BtrB,EAC9CgX,KAAK2T,eAAe,CAACpB,kB,0CAIrB,MAAwB,gBAApBvS,KAAK9T,MAAMxB,MACHsV,KAAK9T,MAAM+mB,aACmC,IAA/C1B,OAAOC,KAAKxR,KAAK9T,MAAMgnB,aAAarN,SACnC7F,KAAK9T,MAAMinB,YAAYxL,WACJ,gBAApB3H,KAAK9T,MAAMxB,MACVsV,KAAK9T,MAAMqnB,cAAgBvT,KAAK9T,MAAMsnB,cAAc7L,WACjC,iBAApB3H,KAAK9T,MAAMxB,MACVsV,KAAK9T,MAAM+mB,aACmC,IAA/C1B,OAAOC,KAAKxR,KAAK9T,MAAMgnB,aAAarN,SACnC7F,KAAK9T,MAAMinB,YAAYxL,WACJ,iBAApB3H,KAAK9T,MAAMxB,MACVsV,KAAK9T,MAAMqnB,cAAgBvT,KAAK9T,MAAMsnB,cAAc7L,gBADzD,I,qCAKK,IACL7K,EAAWkD,KAAKD,MAAMK,cAAcjT,OAApC2P,QACiB,gBAApBkD,KAAK9T,MAAMxB,MACVoS,EAAQE,wBAA0BF,EAAQO,uBAAyB2C,KAAKD,MAAM5I,YAAY,CACvF+B,MAAOC,GACPC,MAAM,IAEiB,gBAApB4G,KAAK9T,MAAMxB,MACjBoS,EAAQE,wBAA0BF,EAAQO,uBAAyB2C,KAAKD,MAAM5I,YAAY,CACvF+B,MAAOO,GACPL,MAAM,IAEiB,iBAApB4G,KAAK9T,MAAMxB,KAClBsV,KAAKD,MAAM5I,YAAY,CAAC+B,MAAOI,GAAoBF,MAAM,IAC9B,iBAApB4G,KAAK9T,MAAMxB,MAClBsV,KAAKD,MAAM5I,YAAY,CAAC+B,MAAOQ,GAAoBN,MAAM,M,yFAIjCyb,G,kFACJ7U,KAAKD,MAAMK,cAAcjT,OAA1C3C,E,EAAAA,eACHqqB,E,0CAEyBpL,GAAI,CAAC/e,KAAM,MAAOkC,IAAI,YAAD,OAAcpC,EAAc4N,IAA5B,iBAAwCyc,K,uBAA3E3nB,E,EAAAA,K,kBACAmnB,GAAqBnnB,EAAKwO,W,kCAGjCtP,QAAQC,IAAR,M,iCAGD,I,gJAGD,IAAD,OACL,OACI,kBAACkX,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,kBAAM,EAAK8S,gBACpBzS,eAAe,EACfE,KAAK,MACLN,OACI,6BACKf,KAAK9T,MAAMxB,KAAK8C,eAGzBwT,QACI,8BAC0B,gBAApBhB,KAAK9T,MAAMxB,MAA8C,iBAApBsV,KAAK9T,MAAMxB,OAClD,6BACI,kBAAC,GAAD,CAAO0Y,KAAK,eACLpa,MAAOgX,KAAK9T,MAAM+mB,YAClBtM,UAAU,EACVJ,YAAa,SAACpY,GACV,EAAKkS,SAAS,CAAC4S,YAAa9kB,EAAKnF,WAG5C,kBAAC,GAAD,CAAOoa,KAAM,sBACNpa,MAAOgX,KAAK9T,MAAMgnB,YAClBxoB,KAAK,SACLic,UAAU,EACVD,QAASoM,GACTvM,YAAa,SAAC2M,GAAD,OAAiB,EAAK7S,SAAS,CAAC6S,mBAEpD,kBAAC,GAAD,CAAO9P,KAAK,eACLpa,MAAOgX,KAAK9T,MAAMinB,YAClBxM,UAAU,EACVjc,KAAK,SACL6b,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAAC8S,YAAahlB,EAAKnF,aAK7C,gBAApBgX,KAAK9T,MAAMxB,MAA8C,iBAApBsV,KAAK9T,MAAMxB,OAClD,6BACI,kBAAC,GAAD,CAAO0Y,KAAK,eACLpa,MAAOgX,KAAK9T,MAAMqnB,YAClB5M,UAAU,EACVJ,YAAa,SAACpY,GACV,EAAKkS,SAAS,CAACkT,YAAaplB,EAAKnF,WAG5C,kBAAC,GAAD,CAAOoa,KAAK,eACLpa,MAAOgX,KAAK9T,MAAMsnB,cAClB7M,UAAU,EACVjc,KAAK,SACL6b,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAACmT,cAAerlB,EAAKnF,WAEjE,kBAAC,GAAD,CAAOoa,KAAM,sBACNpa,MAAOgX,KAAK9T,MAAMqmB,YAClB7nB,KAAK,cACLic,UAAU,EACVC,SAAS,EACTC,YAAW,uCAAE,WAAOgO,GAAP,SAAAnoB,EAAA,sEAA0B,EAAKonB,0BAA0Be,GAAzD,mFAAF,sDACXnO,QAASoM,GACTvM,YAAa,SAACgM,GACV,EAAKlS,SAAS,CAACkS,YAAaA,GAA4B,QAIlEvS,KAAK9T,MAAMqmB,YAAY1M,OAAS,GACjC,yBAAKtE,UAAU,yBAEPvB,KAAK9T,MAAMqmB,YAAY/P,KAAI,SAACsS,EAAS/rB,GACjC,OACI,yBAAKA,IAAKA,GACN,kBAAC,GAAD,CAAO2B,KAAK,SACL0Y,KAAI,8BAAyB0R,EAAQP,QAAQnR,KAAzC,oBAAyD0R,EAAQP,QAAQzC,cAC7E9oB,MAAO8rB,EAAQR,2BACf/N,YAAa,SAACpY,GACV,EAAKulB,sBAAsB3qB,EAAKoF,EAAKnF,iBAYhFiY,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SAASiD,SAAUrG,KAAK6T,oBAAqBzR,QAAS,kBAAM,EAAKqR,mBAC9E,kBAAC,GAAD,CAAQrQ,KAAK,QAAQhB,QAAS,kBAAM,EAAKwR,yB,GA1QpCrT,aAuRvBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CqS,KAcvE,IAAMqB,GAAuB,SAAUlmB,GASnC,OARA4kB,GAAiC,IAAhB5kB,EAAK0X,OAAekN,GAAiB,GACtD5kB,EAAK6b,QAAO,SAAC+K,GAAD,OAAQA,EAAEnL,WAAS4D,SAAQ,SAACwH,GAKpCjC,GAAe1a,KAAK,CAACtP,IAAKisB,EAAG5c,IAAKpP,MAAOgsB,EAAG5c,IAAKtK,KAAMknB,EAAG5R,KAAMmR,QAASS,OAEtEjC,IC9TLkC,GAAgB,CAAC,CACnBpS,KAAM,MACN7Z,MAAO,OACR,CAAC6Z,KAAM,SAAU7Z,MAAO,WAErBksB,G,kDACF,WAAYnV,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTipB,eAAe,EACfC,aAAc,CAAC1qB,KAAMuqB,GAAc,GAAIxrB,OAAQ,IAC/C4e,iBAAiB,EACjBoJ,eAAe,GAGnB,EAAK0D,cAAgB,EAAKA,cAAclT,KAAnB,gBACrB,EAAKoT,oBAAsB,EAAKA,oBAAoBpT,KAAzB,gBAC3B,EAAKqT,sBAAwB,EAAKA,sBAAsBrT,KAA3B,gBAZd,E,iEAeG,IACb1J,EAAMyH,KAAKD,MAAMzU,MAAMwb,OAAvBvO,GACLyH,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,UAAW6N,S,4CAIrC,QAASyH,KAAK9T,MAAMkpB,aAAa3rB,OAAS,K,sCAG7B,IAAD,SACsCuW,KAAKD,MAAMK,cAAcjT,OAApEsL,EADK,EACLA,WAAYjO,EADP,EACOA,cAAeqQ,EADtB,EACsBA,aAC3BnC,EAAUD,EAAVC,OAEH6c,EAAqB,CAAC,CACtB1S,KAAM,MACN7Z,MAAO,QAMX,OAHIuB,YAAoBC,EAAeqQ,EAAagP,OAAQ,QAAS,SACjE0L,EAAmBld,KAAK,CAACwK,KAAM,SAAU7Z,MAAO,WAGhD,kBAACua,GAAD,CACI1C,KAAMb,KAAK9T,MAAMipB,cACjBjU,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAAC8U,eAAe,KAC7ChU,eAAe,EACfE,KAAK,OACLN,OACI,mDAEM,oDAA0BrI,EAAOqZ,iBAAiBb,QAAQ,GAA1D,IAA+DxY,EAAOoZ,aAAtE,MAGV9Q,QACI,6BACI,kBAAC,GAAD,CAAOoC,KAAM,cACNpa,MAAOgX,KAAK9T,MAAMkpB,aAAa1qB,KAC/BA,KAAK,SACLic,UAAU,EACVD,QAAS6O,EACThP,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACV+U,aAAa,2BACN,EAAKlpB,MAAMkpB,cADN,IAER1qB,KAAMyD,SAKzB,kBAAC,GAAD,CAAOiV,KAAI,2BAAsB1K,EAAOoZ,aAA7B,KACJ9oB,MAAOgX,KAAK9T,MAAMkpB,aAAa3rB,OAC/Bkd,UAAU,EACVjc,KAAK,SACL6b,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACV+U,aAAa,2BACN,EAAKlpB,MAAMkpB,cADN,IAER3rB,OAAQ0E,EAAKnF,aAKhC,kBAAC,GAAD,CAAS8T,QAASkD,KAAK9T,MAAMspB,sBAGrCvU,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SAASiD,SAAUrG,KAAKqV,sBAAuBjT,QAAS,WACjE,EAAKrC,MAAMtK,kBAAkB,CACzB/K,KAAM,EAAKwB,MAAMkpB,aAAa1qB,KAAK1B,MAAMoE,cACzCqoB,UAAW/c,EAAON,IAClBsd,cAAe9N,OAAO,EAAK1b,MAAMkpB,aAAa3rB,QAC9C6mB,UAAW5X,EAAOO,OAAOb,MAE7B,EAAKiI,SAAS,CAAC8U,eAAe,EAAOC,aAAc,CAAC1qB,KAAMuqB,GAAc,GAAIxrB,OAAQ,QAExF,kBAAC,GAAD,CAAQ2Z,KAAK,QAAQhB,QAAS,WAC1B,EAAK/B,SAAS,CAAC8U,eAAe,EAAOC,aAAc,CAAC1qB,KAAMuqB,GAAc,GAAIxrB,OAAQ,a,qFAShFkP,G,sFACxBqH,KAAKK,SAAS,CAACgI,iBAAiB,EAAOoJ,eAAe,I,WAE1BzR,KAAKD,MAAMK,cAAcjT,OAA1C3C,E,EAAAA,c,SACcif,GAAI,CAAC/e,KAAM,SAAUkC,IAAI,WAAD,OAAapC,EAAc4N,IAA3B,YAAkCO,EAAQP,O,iBAAhFlL,E,EAAAA,OAEsB,UAAhBA,EAAKmB,QAKTkK,EAAMyH,KAAKD,MAAMzU,MAAMwb,OAAvBvO,GACLyH,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,UAAW6N,OACjCrL,EAAK8K,SACLgI,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS9K,EAAK8K,QAASC,MAAO,aAP1D/K,EAAKiB,MACL6R,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS9K,EAAKiB,KAAM8J,MAAO,UAS/D+H,KAAKK,SAAS,CAACoR,eAAe,I,kDAE9BzR,KAAKK,SAAS,CAACoR,eAAe,IAC9BzR,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS,KAAE2P,WAAY1P,MAAO,U,gJAKxD,IAAD,SAE6D+H,KAAKD,MAAMK,cAAcjT,OAApFsL,EAFF,EAEEA,WAAYqE,EAFd,EAEcA,QAAS5D,EAFvB,EAEuBA,MAAO1O,EAF9B,EAE8BA,cAAeqQ,EAF7C,EAE6CA,aAC3CnC,EAAuCD,EAAvCC,OAAQG,EAA+BJ,EAA/BI,aAAcD,EAAiBH,EAAjBG,cAEvBgV,EAAW5N,KAAKD,MAAMzU,MAAMwb,OAAO8G,SAEnCzJ,EAAQ,CACV,CACIG,SAAU,gBACVC,OACI,yBAAKxF,MAAO,CAAC+L,SAAU,SAAUtL,QAAS,KACtC,yBAAK+B,UAAU,iCACX,yBAAKA,UAAU,eACRzE,EAAQmB,iBAAmBnB,EAAQK,2BAA6BL,EAAQE,wBAA0BgD,KAAK9T,MAAMulB,gBAC/G/Y,EAAOkR,SAAWrf,YAAoBC,EAAeqQ,EAAagP,OAAQ,QAAS,QACpF,yBAAK9K,MAAO,CAAC4W,UAAW,SAAUC,YAAa,WAC3C,kBAAC,KAAD,CAAQvU,KAAK,OAAOtC,MAAO,CAAC8W,MAAO,SAC3BtU,UAAU,mCACVa,QAAS,kBAAM,EAAK/B,SAAS,CAAC8U,eAAe,OACpDnV,KAAK9T,MAAMipB,eAAiBnV,KAAKmV,iBAGrCzc,EAAOod,QAAUpd,EAAOod,OAAOC,UAAUvT,KAAI,SAACwT,GAC3C,OACI,yBAAKzU,UAAS,0BAAqByU,EAAMtrB,OACrC,yBAAK6W,UAAU,sBAAsByU,EAAM5d,KAC3C,yBACImJ,UAAU,yBADd,UAC0CyU,EAAMC,SAAS/E,QAAQ,GADjE,YACuExY,EAAOoZ,eAC9D,QAAfkE,EAAMtrB,MACP,yBAAK6W,UAAU,wBAAf,SACgB,WAAfyU,EAAMtrB,MACP,yBAAK6W,UAAU,wBAAf,WACgB,SAAfyU,EAAMtrB,MACP,yBACI6W,UAAU,wBADd,QAC0C,0BACtCa,QAAS,kBAAM,EAAKrC,MAAM6C,QAAQvK,KAAK,YAAc2d,EAAME,YADrB,IAEpCF,EAAME,SAF8B,MAI1C,yBAAK3U,UAAU,4BACX,qCADJ,IACsByU,EAAM9L,UAE5B,yBAAK3I,UAAU,4BACX,uCADJ,IACwB7X,YAAsBssB,EAAMlM,0BASpF,CACIxF,SAAS,kBAAD,OAAoBzL,GAAgBA,EAAagN,OAAjD,KACRtB,OACI,yBAAKxF,MAAO,CAAC+L,SAAU,SAAUtL,QAAS,KACtC,yBAAK+B,UAAU,iCACV1I,GAAgBA,EAAa2J,KAAI,SAAC1J,GAC/B,OAAO,kBAAC,GAAD,CAAWA,QAASA,EAAS8J,QAAS,EAAK7C,MAAM6C,QACtCuP,mBAAmB,EAAMvE,SAAUA,UAKzE,CACItJ,SAAS,aAAD,OAAe1L,GAAiBA,EAAciN,OAA9C,KACRtB,OACI,yBAAKhD,UAAU,iCACV3I,GAAiBA,EAAc4J,KAAI,SAACzJ,EAAShQ,GAC1C,OAAO,kBAAC,GAAD,CAAWgQ,QAASA,EACT6J,QAAS,EAAK7C,MAAM6C,QACpB7Z,IAAKA,EAAK6kB,SAAUA,UAM1D,OACI,yBAAKrM,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,UAA0C7I,EAAO0K,KAAP,aAAoB1K,EAAO0K,MAAS,IAC9E,yBAAK7B,UAAU,uBACX,kBAAC,GAAD,CAAS7W,KAAK,SAASqU,MAAM,SACpBjC,QAASA,EAAQmB,gBAAkBnB,EAAQK,0BAA4BL,EAAQE,uBAAyBgD,KAAK9T,MAAMulB,iBACzH3U,EAAQmB,iBAAmBnB,EAAQK,2BAA6BL,EAAQE,wBAA0BgD,KAAK9T,MAAMulB,gBAC/G/Y,EAAOkR,SAAWrf,YAAoBC,EAAeqQ,EAAagP,OAAQ,QAAS,SACpF,kBAAC,KAAD,CAAQxI,KAAK,OAAOtC,MAAO,CAACG,OAAQ,IAAKqC,UAAU,cAC3Ca,QAAS,kBAAM,EAAKrC,MAAM5I,YAAY,CAClC+B,MAAOI,GACPF,MAAM,QAGf0D,EAAQmB,iBAAmBnB,EAAQK,2BAA6BL,EAAQE,wBAA0BgD,KAAK9T,MAAMulB,gBAC/G/Y,EAAOkR,SAAWrf,YAAoBC,EAAeqQ,EAAagP,OAAQ,QAAS,WACpF,kBAAC,KAAD,CAAiBxI,KAAK,OAAOtC,MAAO,CAACG,OAAQ,IAAKqC,UAAU,cAC3Ca,QAAS,kBAAM,EAAK/B,SAAS,CAACgI,iBAAiB,SAGxE,yBAAK9G,UAAU,eAAehJ,GAAG,eAC7B,yBAAKgJ,UAAU,eACU,YAApB9I,EAAW/N,MAAsBgO,EAAON,KACzC,6BACI,yBAAKmJ,UAAU,4BACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,iCACV7I,EAAO0K,KADZ,IACmB1K,EAAOkR,SAAW,0CAErC,yBAAKrI,UAAU,+BACX,yBAAKA,UAAU,QACV2E,IAAI,mEACRxN,EAAON,MAGhB,yBAAKmJ,UAAU,oCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eAAf,wBACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,UACA,yBAAKA,UAAU,mBACV7I,EAAOO,OAASP,EAAOO,OAAOmK,KAAO,QAG9C,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,mBACV7X,YAAsBgP,EAAOoR,mBAGtC,yBAAKvI,UAAU,kCACX,yBAAKA,UAAU,uBAAf,QACA,yBAAKA,UAAU,mBAAmB7I,EAAOsZ,eAE7C,yBAAKzQ,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,mBAAmB7I,EAAOwR,SAAShB,cAI9D,yBAAK3H,UAAU,aACX,yBAAKA,UAAU,eAAf,sBACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,oBACA,yBAAKA,UAAU,mBACV7I,EAAOqZ,iBAAiBb,QAAQ,GADrC,IAC0CxY,EAAOoZ,eAGrD,yBAAKvQ,UAAU,kCACX,yBAAKA,UAAU,uBAAf,sBACA,yBAAKA,UAAU,mBACV7I,EAAOod,OAAOjQ,aAOvC,yBAAK9G,MAAO,CAAC2S,WAAY,KACrB,kBAAC,GAAD,CAAMvN,MAAOA,EAAOzZ,KAAK,gBAOxCwO,EAAMqF,kBACP,kBAAC,GAAD,eAAgB7T,KAAK,gBAAmBsV,KAAKD,MAA7C,CAAoDgU,aAAcrb,KAG9DsH,KAAK9T,MAAMmc,iBACX,kBAAC9E,GAAD,CACI1C,KAAMb,KAAK9T,MAAMmc,gBACjBnH,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAACgI,iBAAiB,KAC/ClH,eAAe,EACfE,KAAK,OACLN,OACI,gDACoB,8BAAOrI,EAAO0K,OAGtCpC,QACI,yBAAKjC,MAAO,CAACS,QAAS,KAAtB,iDAIJyB,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLhB,QAAO,sBAAE,sBAAA1V,EAAA,sEACC,EAAK4oB,sBAAsB5c,GAD5B,6CAGjB,kBAAC,GAAD,CAAQ0K,KAAK,QAAQhB,QAAS,kBAAM,EAAK/B,SAAS,CAACgI,iBAAiB,e,GAjUxE9H,aA+UtBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CuU,KCzVjEiB,G,kDACF,WAAYpW,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTmc,iBAAiB,EACjBoJ,eAAe,GAGnB,EAAK2E,sBAAwB,EAAKA,sBAAsBnU,KAA3B,gBARd,E,iEAWG,IACb1J,EAAMyH,KAAKD,MAAMzU,MAAMwb,OAAvBvO,GACLyH,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,UAAW6N,S,qFAGbO,G,sFACxBkH,KAAKK,SAAS,CAACgI,iBAAiB,EAAOoJ,eAAe,I,WAE1BzR,KAAKD,MAAMK,cAAcjT,OAA1C3C,E,EAAAA,c,SACcif,GAAI,CAAC/e,KAAM,SAAUkC,IAAI,WAAD,OAAapC,EAAc4N,IAA3B,YAAkCU,EAAQV,O,iBAAhFlL,E,EAAAA,OAEsB,UAAhBA,EAAKmB,QAKTkK,EAAMyH,KAAKD,MAAMzU,MAAMwb,OAAvBvO,GACLyH,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,UAAW6N,OACjCrL,EAAK8K,SACLgI,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS9K,EAAK8K,QAASC,MAAO,aAP1D/K,EAAKiB,MACL6R,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS9K,EAAKiB,KAAM8J,MAAO,UAS/D+H,KAAKK,SAAS,CAACoR,eAAe,I,kDAE9BzR,KAAKK,SAAS,CAACoR,eAAe,IAC9BzR,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS,KAAE2P,WAAY1P,MAAO,U,gJAIxD,IAAD,SAE6D+H,KAAKD,MAAMK,cAAcjT,OAApFsL,EAFF,EAEEA,WAAYS,EAFd,EAEcA,MAAO4D,EAFrB,EAEqBA,QAASjC,EAF9B,EAE8BA,aAAcrQ,EAF5C,EAE4CA,cAC1CkO,EAAyBD,EAAzBC,OAAQE,EAAiBH,EAAjBG,cAETgV,EAAW5N,KAAKD,MAAMzU,MAAMwb,OAAO8G,SAEnCzJ,EAAQ,CACV,CACIG,SAAS,kBAAD,OAAoB5L,EAAO2Z,cAAgB3Z,EAAO2Z,aAAaxM,OAA/D,KACRtB,OACI,yBAAKxF,MAAO,CAAC+L,SAAU,SAAUtL,QAAS,KACtC,yBAAK+B,UAAU,iCACV7I,EAAO2Z,cAAgB3Z,EAAO2Z,aAAa7P,KAAI,SAAC7J,EAAS5P,GACtD,OAAO,kBAAC,GAAD,CAAW4P,QAASA,EACTiZ,aAAclZ,EAAO0Z,oBAAoBpI,QAAO,SAACqM,GAAD,OAASA,EAAIje,MAAQO,EAAQP,OAAK,GAC5EM,EAAO0Z,oBAAoBpI,QAAO,SAACqM,GAAD,OAASA,EAAIje,MAAQO,EAAQP,OAAK,GAAG6Z,cACvE,IACNrP,QAAS,EAAK7C,MAAM6C,QACpB7Z,IAAKA,EAAK6kB,SAAUA,UAK1D,CACItJ,SAAS,aAAD,OAAe1L,GAAiBA,EAAciN,OAA9C,KACRtB,OACI,yBAAKhD,UAAU,iCACV3I,GAAiBA,EAAc4J,KAAI,SAACzJ,EAAShQ,GAC1C,OAAO,kBAAC,GAAD,CAAWgQ,QAASA,EACT6J,QAAS,EAAK7C,MAAM6C,QACpB7Z,IAAKA,EAAK6kB,SAAUA,UAM1D,OACI,yBAAKrM,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,UAA0C7I,EAAO0K,KAAP,aAAoB1K,EAAO0K,MAAS,IAC9E,yBAAK7B,UAAU,uBACX,kBAAC,GAAD,CAAS7W,KAAK,SAASqU,MAAM,SACpBjC,QAASA,EAAQmB,gBAAkBnB,EAAQoB,wBAChDpB,EAAQmB,iBAAmBnB,EAAQoB,uBAAyB8B,KAAK9T,MAAMulB,gBACtE/Y,EAAOkR,SAAWrf,YAAoBC,EAAeqQ,EAAagP,OAAQ,QAAS,SACxF,kBAAC,KAAD,CAAQxI,KAAK,OAAOtC,MAAO,CAACG,OAAQ,IAAKqC,UAAU,cAC3Ca,QAAS,kBAAM,EAAKrC,MAAM5I,YAAY,CAAC+B,MAAOQ,GAAoBN,MAAM,QAE7E0D,EAAQmB,iBAAmBnB,EAAQoB,uBAAyB8B,KAAK9T,MAAMulB,gBACzE/Y,EAAOkR,SAAWrf,YAAoBC,EAAeqQ,EAAagP,OAAQ,QAAS,WACpF,kBAAC,KAAD,CAAiBxI,KAAK,OAAOtC,MAAO,CAACG,OAAQ,IAAKqC,UAAU,cAC3Ca,QAAS,kBAAM,EAAK/B,SAAS,CAACgI,iBAAiB,SAGxE,yBAAK9G,UAAU,iBAAiBhJ,GAAG,eAC/B,yBAAKgJ,UAAU,eACU,YAApB9I,EAAW/N,MAAsBgO,EAAON,KACzC,6BACI,yBAAKmJ,UAAU,4BACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,iCACV7I,EAAO0K,KADZ,IACmB1K,EAAOkR,SAAW,0CAErC,yBAAKrI,UAAU,+BACX,yBAAKA,UAAU,QACV2E,IAAI,mEACRxN,EAAON,MAGhB,yBAAKmJ,UAAU,oCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eAAf,wBACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,UACA,yBAAKA,UAAU,mBACV7I,EAAOO,OAASP,EAAOO,OAAOmK,KAAO,QAG9C,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,mBACV7X,YAAsBgP,EAAOoR,mBAGtC,yBAAKvI,UAAU,kCACX,yBAAKA,UAAU,uBAAf,QACA,yBAAKA,UAAU,mBAAmB7I,EAAO+Z,eAE7C,yBAAKlR,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,mBAAmB7I,EAAOwR,SAAShB,cAI9D,yBAAK3H,UAAU,aACX,yBAAKA,UAAU,eAAf,wBACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,uBACA,yBAAKA,UAAU,mBACV7I,EAAO2Z,aAAaxM,aAO7C,yBAAK9G,MAAO,CAAC2S,WAAY,KACrB,kBAAC,GAAD,CAAMvN,MAAOA,EAAOzZ,KAAK,gBAOxCwO,EAAMsF,kBACP,kBAAC,GAAD,eAAgB9T,KAAK,gBAAmBsV,KAAKD,MAA7C,CAAoDvG,YAAad,KAG7DsH,KAAK9T,MAAMmc,iBACX,kBAAC9E,GAAD,CACI1C,KAAMb,KAAK9T,MAAMmc,gBACjBnH,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAACgI,iBAAiB,KAC/ClH,eAAe,EACfE,KAAK,OACLN,OACI,gDACoB,8BAAOrI,EAAO0K,OAGtCpC,QACI,yBAAKjC,MAAO,CAACS,QAAS,KAAtB,iDAIJyB,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLhB,QAAO,sBAAE,sBAAA1V,EAAA,sEACC,EAAK0pB,sBAAsB1d,GAD5B,6CAGjB,kBAAC,GAAD,CAAQ0K,KAAK,QAAQhB,QAAS,kBAAM,EAAK/B,SAAS,CAACgI,iBAAiB,e,GAzLxE9H,aAuMtBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CwV,KClNjEzD,I,wDACF,WAAY3S,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTgY,UAAW,GAJA,E,iEASf,IAAMmM,EAAY,IAAIL,gBAAgBhQ,KAAKD,MAAM3U,SAASojB,QAC1DxO,KAAKD,MAAMhK,YAAYsa,EAAU3hB,IAAI,QAAU2hB,EAAU3hB,IAAI,QAAU,K,+BAIjE,IAAD,SAEwEsR,KAAKD,MAAMK,cAAcjT,OAA/FoP,EAFF,EAEEA,YAAasC,EAFf,EAEeA,gBAAiB/B,EAFhC,EAEgCA,QAASjC,EAFzC,EAEyCA,aAAcrQ,EAFvD,EAEuDA,cACtDojB,EAAW5N,KAAKD,MAAMzU,MAAMwb,OAAO8G,SAEzC,OACI,yBAAKrM,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,WACA,yBAAKA,UAAU,uBACVhX,YAAoBC,EAAeqQ,EAAagP,OAAQ,OAAQ,QACjE,kBAAC,GAAD,CAAQzG,KAAI,cACJhB,QAAS,kBAAM,EAAKrC,MAAM6C,QAAQvK,KAAnB,kBAAmCuV,EAAnC,sBAI/B,yBAAKrM,UAAU,kBACVhF,EAAYC,SAASgG,KAAI,SAACrU,EAAMpF,GAC7B,OACI,kBAAC,GAAD,CAAWgQ,QAAS5K,EAAMyU,QAAS/D,EAAiB9V,IAAKA,EAC9C6kB,SAAU,EAAK7N,MAAMzU,MAAMwb,OAAO8G,cAGpB,IAAhCrR,EAAYC,SAASqJ,QACtB,yBAAK9G,MAAO,CAACO,MAAO,UAAWE,QAAS,IAAKuD,MAAM,UAAnD,mBAIA,yBAAKxB,UAAU,eACX,kBAAC,GAAD,CACIzE,QAASA,EAAQW,eACjBiS,YAAanT,EAAYZ,MAAME,KAC/BC,WAAYS,EAAYZ,MAAMG,WAC9B+T,aAActT,EAAYC,SAASqJ,OACnCiK,aAAcvT,EAAYZ,MAAMC,MAChC+T,SAAU,SAACe,GAAD,OAAQ,EAAK3Q,MAAMhK,YAAY2a,IACzCd,SAAU,SAACc,GAAD,OAAQ,EAAK3Q,MAAMhK,YAAY2a,IACzC9N,QAAS5C,KAAKD,MAAM6C,QACpBxX,SAAU4U,KAAKD,MAAM3U,kB,GArD7BmV,cAkEdC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6C+R,KCjEjE4D,G,kDACF,WAAYvW,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTqqB,kBAAkB,EAClBC,qBAAqB,EACrBC,OAAQ,GACRC,WAAY,KACZC,UAAW,GAGf,EAAKC,aAAe,EAAKA,aAAa3U,KAAlB,gBACpB,EAAK4U,aAAe,EAAKA,aAAa5U,KAAlB,gBAZL,E,gEAeE,IACZ1J,EAAMyH,KAAKD,MAAMzU,MAAMwb,OAAvBvO,GACLyH,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,UAAW6N,S,mCAI5BpK,GACT6R,KAAKK,SAAL,eAAkBlS,M,4EAGHwL,EAAUhP,G,wFAClBwK,EAAW6K,KAAKD,MAAhB5K,QACA0hB,EAAgB7W,KAAhB6W,a,EACiB7W,KAAKD,MAAMK,cAAcjT,OAA1C3C,E,EAAAA,cACPqsB,EAAa,CAACL,qBAAqB,EAAMD,kBAAkB,I,kBAGlChoB,EAAI,CACrB7D,KAAM,MACNkC,IAAI,WAAD,OAAapC,EAAc4N,IAA3B,YAAkCuB,EAASvB,IAA3C,YAAkDzN,GACrDmC,IAAK,CACDgqB,aAAc9W,KAAK9T,MAAMyqB,a,iBAJ1BzpB,E,EAAAA,OAQsB,UAAhBA,EAAKmB,QAGd8G,EAAQ,CAACzK,KAAM,UAAW6N,GAAIoB,EAASvB,M,0DAM/Cye,EAAa,CAACL,qBAAqB,I,kJAG7B,IAAD,SAEsDxW,KAAKD,MAAMK,cAAcjT,OAA7EsL,EAFF,EAEEA,WAAYoC,EAFd,EAEcA,aAAciC,EAF5B,EAE4BA,QAAStS,EAFrC,EAEqCA,cACnCkO,EAAUD,EAAVC,OAEDkV,EAAW5N,KAAKD,MAAMzU,MAAMwb,OAAO8G,SAEnCzJ,EAAQ,CACV,CACIG,SAAS,aAAD,OAAe5L,EAAOgD,UAAYhD,EAAOgD,SAASmK,OAAlD,KACRtB,OACI,yBAAKxF,MAAO,CAAC+L,SAAU,SAAUtL,QAAS,KACtC,yBAAK+B,UAAU,iCACV7I,EAAOgD,UAAYhD,EAAOgD,SAAS8G,KAAI,SAAC7J,EAAS5P,GAC9C,OAAO,kBAAC,GAAD,CAAWA,IAAKA,EAAK4P,QAASA,EAASiK,QAAS,EAAK7C,MAAM6C,QAChDiP,eAAe,EAAMjE,SAAUA,UAKrE,CACItJ,SAAS,aAAD,OAAe5L,EAAO0D,UAAY1D,EAAO0D,SAASyJ,OAAlD,KACRtB,OACI,yBAAKxF,MAAO,CAAC+L,SAAU,SAAUtL,QAAS,KACtC,yBAAK+B,UAAU,iCACV7I,EAAO0D,UAAY1D,EAAO0D,SAASoG,KAAI,SAAC1J,EAAS/P,GAC9C,OAAO,kBAAC,GAAD,CAAWA,IAAKA,EAAK+P,QAASA,EAAS8J,QAAS,EAAK7C,MAAM6C,QAChDiP,eAAe,EACfM,mBAAmB,EAAMvE,SAAUA,WAO7E,OACI,yBAAKrM,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,UACY7I,EAAON,IAAP,aAAmBM,EAAON,IAA1B,cAAmCM,EAAOM,UAAYN,EAAOM,SAASkQ,WAAaxQ,EAAOM,UAAa,IAEnH,yBAAKuI,UAAU,uBACX,kBAAC,GAAD,CAAS7W,KAAK,SAASqU,MAAM,SACpBjC,QAASA,EAAQmB,gBAAkB+B,KAAK9T,MAAMsqB,uBACpD1Z,EAAQmB,iBAAmB+B,KAAK9T,MAAMsqB,qBACzCjsB,YAAoBC,EAAeqQ,EAAagP,OAAQ,OAAQ,SAA4B,YAAjBnR,EAAOxM,OAClF,kBAAC,GAAD,CAAQkX,KAAK,eACLhB,QAAS,kBAAM,EAAK/B,SAAS,CACzBkW,kBAAmB,EAAKrqB,MAAMqqB,iBAC9BE,OAAQ5b,EAAagP,YAGhC7J,KAAK9T,MAAMqqB,kBACZ,kBAAChT,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAACkW,kBAAkB,KAChDpV,eAAe,EACfE,KAAK,MACLN,OAAQ,0CAAgBrI,EAAON,KAC/B4I,QACI,6BACI,kBAAC,GAAD,CAAOtW,KAAK,OACL0Y,KAAK,UACLpa,MAAOgX,KAAK9T,MAAMuqB,OAClBlQ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAACoW,OAAQtoB,EAAKnF,WAC1D,kBAAC,GAAD,CAAO0B,KAAK,OACL0Y,KAAK,uBACLpa,MAAO0P,EAAOqe,mBACd1Q,UAAU,EACVE,YAAa,SAACpY,OAErB,kBAAC,GAAD,CAAOzD,KAAK,OACL0Y,KAAK,iBACLpa,MAAO0P,EAAOqe,mBAAqBre,EAAOyY,YAC1C9K,UAAU,EACVE,YAAa,SAACpY,OAErB,kBAAC,GAAD,CAAOzD,KAAK,SACL0Y,KAAK,cACLiD,UAAU,EACVrd,MAAO0P,EAAOyY,YACd5K,YAAa,SAACpY,OAErB,kBAAC,GAAD,CAAOzD,KAAK,SACL0Y,KAAK,aACLpa,MAAOgX,KAAK9T,MAAMyqB,UAClBpQ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAACsW,UAAWxoB,EAAKnF,YAGrEiY,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,QAAQhB,QAAS,kBAAM,EAAK/B,SAAS,CAACkW,kBAAkB,OACrE,kBAAC,GAAD,CAAQnT,KAAK,SAAShB,QAAS,kBAAM,EAAKwU,aAAale,EAAQ,gBAOnF,yBAAK6I,UAAU,kBACX,yBAAKA,UAAU,eACU,YAApB9I,EAAW/N,MAAsBgO,EAAON,KACzC,6BACI,yBAAKmJ,UAAU,4BACX,yBAAKA,UAAU,oCACX,yBACIA,UAAU,wEACVa,QAAS,kBAAM,EAAKrC,MAAM6C,QAAQvK,KAAnB,kBAAmCuV,EAAnC,qBAAwDlV,EAAOM,SAASZ,IAAMM,EAAOM,SAASZ,IAAMM,EAAOM,aACzHN,EAAOM,SAASkQ,WAAaxQ,EAAOM,SAHzC,IAGoDN,EAAOkR,SAC3D,0CAEA,yBAAKrI,UAAU,+BACX,yBAAKA,UAAU,QACV2E,IAAI,mEACRxN,EAAON,MAGhB,yBAAKmJ,UAAU,oCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eAAf,wBACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,UACA,yBAAKA,UAAU,mBACV7I,EAAOO,OAASP,EAAOO,OAAOmK,KAAO,QAG9C,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,mBACV7X,YAAsBgP,EAAOoR,mBAGtC,yBAAKvI,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,mBAAmB7I,EAAOwR,SAAShB,cAI9D,yBAAK3H,UAAU,aACX,yBAAKA,UAAU,eAAf,yBACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,QACA,yBAAKA,UAAU,mBACV7I,EAAOM,SAASkQ,YAGzB,yBAAK3H,UAAU,kCACX,yBAAKA,UAAU,uBAAf,iBACA,yBAAKA,UAAU,mBACV7I,EAAOM,SAASwQ,gBAGzB,yBAAKjI,UAAU,kCACX,yBAAKA,UAAU,uBAAf,OACA,yBAAKA,UAAU,mBACV7I,EAAOM,SAASsQ,MAGzB,yBAAK/H,UAAU,kCACX,yBAAKA,UAAU,uBAAf,WACA,yBAAKA,UAAU,mBACV7I,EAAOM,SAASqQ,YAKjC,yBAAK9H,UAAU,aACX,yBAAKA,UAAU,eAAf,wBACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,qBACA,yBAAKA,UAAU,mBAAmB7I,EAAOuY,oBAE7C,yBAAK1P,UAAU,kCACX,yBAAKA,UAAU,uBAAf,sBACA,yBAAKA,UAAU,mBAAmB7I,EAAOqe,qBAE7C,yBAAKxV,UAAU,kCACX,yBAAKA,UAAU,uBAAf,mBACA,yBAAKA,UAAU,mBAAmB7I,EAAOse,kBAE7C,yBAAKzV,UAAU,kCACX,yBAAKA,UAAU,uBAAf,eACA,yBAAKA,UAAU,mBAAmB7I,EAAOyY,cAE7C,yBAAK5P,UAAU,kCACX,yBAAKA,UAAU,uBAAf,kBACA,yBAAKA,UAAU,mBACV7I,EAAOuY,kBAAoBvY,EAAOyY,kBAO3D,yBAAKpS,MAAO,CAAC2S,WAAY,KACrB,kBAAC,GAAD,CAAMvN,MAAOA,EAAOzZ,KAAK,qB,GA5P7B6V,aA2QtBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6C2V,K,oBC/QjE5D,G,kDACF,WAAY3S,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTqhB,WAAY,GACZrV,aAAc,GACd+e,kBAAmB,GACnB/b,MAAO,GACPgc,eAAgB,EAChBC,OAAQ,CAACxe,SAAS,EAAMG,SAAS,GACjCse,YAAY,EACZC,iBAAiB,EACjBC,qBAAsB,KACtBC,eAAe,EACfC,SAAU,GACVf,OAAQ,GACRC,WAAY,MAGhB,EAAKe,gBAAkB,EAAKA,gBAAgBxV,KAArB,gBACvB,EAAKyV,uBAAyB,EAAKA,uBAAuBzV,KAA5B,gBAC9B,EAAK4R,kBAAoB,EAAKA,kBAAkB5R,KAAvB,gBACzB,EAAK0V,aAAe,EAAKA,aAAa1V,KAAlB,gBACpB,EAAKwR,cAAgB,EAAKA,cAAcxR,KAAnB,gBAvBN,E,gEA2Bf,IAAM2V,EAAW5X,KAAKD,MAAMzU,MAAMwb,OAAO8G,SAClC/S,EAAgBmF,KAAKD,MAAMK,cAAcjT,OAAzC0N,aACDgd,EAAqBhd,EAAaid,gBAAgB9N,QAAO,SAAC+N,GAAD,OAAQA,EAAG3f,MAAQwP,OAAOgQ,MACrFI,EAAW,GACXH,EAAmBhS,OAAS,IAC5BmS,EAASzK,WAAa,CAClBzf,KAAM+pB,EAAmB,GAAGzU,KAAK5V,cACjCxE,MAAO6uB,EAAmB,GAAGzf,MAIjCyC,GAAgBA,EAAaqO,YAC7B8O,EAASR,SAAW3c,EAAaqO,WAGrClJ,KAAKK,SAAS2X,K,+EAGInD,G,6EACdA,E,0CAEyBpL,GAAI,CAAC/e,KAAM,MAAOkC,IAAI,uBAAD,OAAyBioB,K,uBAA5D3nB,E,EAAAA,K,kBACA+qB,GAAsB/qB,EAAK+O,Y,yDAG3B,I,sMAKU4Y,G,mFACrBA,E,0BACwB7U,KAAKD,MAAMK,cAAcjT,OAA1C3C,E,EAAAA,c,SAEG0tB,EAAM,GACRlY,KAAK9T,MAAMirB,OAAOxe,SAClBuf,EAAI7f,KAAJ,kBAAoBwc,IAEpB7U,KAAK9T,MAAMirB,OAAOre,SAClBof,EAAI7f,KAAJ,kBAAoBwc,I,SAEHpL,GAAI,CAAC/e,KAAM,MAAOkC,IAAI,SAAD,OAAWpC,EAAc4N,IAAzB,YAAgC8f,EAAIC,KAAK,Q,uBAA5EjrB,E,EAAAA,K,kBACAkrB,GAA8BlrB,I,2DAG9B,I,2JAMf,OAAuD,IAAhDqkB,OAAOC,KAAKxR,KAAK9T,MAAMgM,cAAc2N,QAA4C,IAA5B7F,KAAK9T,MAAMgP,MAAM2K,S,mCAGpEwS,GACT,IAAMnd,EAAQ8E,KAAK9T,MAAMgP,MACzBA,EAAMod,OAAOD,EAAS,GACtBrY,KAAKK,SAAS,CAACnF,Y,sCAGF,IACNL,EAAgBmF,KAAKD,MAAMK,cAAcjT,OAAzC0N,aACP,GAAKmF,KAAK9T,MAAMuqB,OAAhB,CAGAzW,KAAKD,MAAMnJ,iBAAiBoJ,KAAKD,MAAM6C,SACvC,IAAMxG,EAAW4D,KAAK9T,MAAMgP,MAAM8O,QAAO,SAACuO,GAAD,MAAsB,YAAbA,EAAI7tB,QAAoB8X,KAAI,SAAC+V,GAC3E,OAAO,eAAIA,EAAIhE,YAEb7Y,EAAWsE,KAAK9T,MAAMgP,MAAM8O,QAAO,SAACuO,GAAD,MAAsB,YAAbA,EAAI7tB,QAAoB8X,KAAI,SAAC+V,GAC3E,OAAO,2BAAIA,EAAIhE,SAAf,IAAwBtC,cAAesG,EAAItG,cAAcjpB,WAE7DgX,KAAKD,MAAMnK,YAAY,CACnBoD,SAAUgH,KAAK9T,MAAMgM,aAAaqc,QAClCnY,WACAV,WACAyV,YAAavJ,OAAO5H,KAAK9T,MAAMwqB,WAAa1W,KAAK9T,MAAMwqB,WAAa,GACpEM,gBAAiBpP,OAAO5H,KAAK9T,MAAMgrB,gBACnCsB,QAASxY,KAAK9T,MAAMuqB,OACpBgC,UAAW5d,EAAagP,OACxByG,UAAWtQ,KAAK9T,MAAMqhB,WAAW+C,UACjCoI,gBAAiBC,GAAkB3Y,KAAK9T,OAAO,Q,+BAI7C,IAAD,SAC2B8T,KAAKD,MAAMK,cAAcjT,OAAlD0N,EADF,EACEA,aAAciC,EADhB,EACgBA,QACf8Q,EAAW5N,KAAKD,MAAMzU,MAAMwb,OAAO8G,SAEzC,OACI,yBAAKrM,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,eACA,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CACI6B,KAAK,iBACLiD,SAAUrG,KAAK6T,oBACfzR,QAAS,kBAAM,EAAK/B,SAAS,CAACkX,eAAgB,EAAKrrB,MAAMqrB,qBAGrE,yBAAKhW,UAAU,eAAehJ,GAAG,eAC7B,yBAAKgJ,UAAU,kBACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,kCAAf,aAGA,yBAAKA,UAAU,oCACX,kBAAC,KAAD,CACIqX,KAAK,IACL1R,mBAAmB,EACnBle,MAAOgX,KAAK9T,MAAMqhB,WAClBvG,SAAU,SAACuG,GAAD,OAAgB,EAAKlN,SAAS,CAACkN,gBACzC7G,QAASmS,GAAoBhe,EAAaid,iBAC1CzQ,eAAgB,SAAAC,GAAM,OAAIA,EAAOxZ,KAAOwZ,EAAOxZ,KAAOwZ,EAAOte,OAC7Due,eAAgB,SAAAD,GAAM,OAAIA,EAAOte,OACjC8vB,YAAY,MAIxB,yBAAKvX,UAAU,iCACX,yBAAKA,UAAU,kCAAf,WAGA,yBAAKA,UAAU,oCACX,6BACI,kBAAC,KAAD,CACI2F,mBAAmB,EACnBO,gBAAc,EACdZ,YAAW,uCAAE,WAAOkD,GAAP,SAAArd,EAAA,+EAAe,EAAK+qB,gBAAgB1N,IAApC,2CAAF,sDACX/gB,MAAOgX,KAAK9T,MAAMgM,aAClB8O,SAAU,SAAC9O,GAAD,OAAkB,EAAKmI,SAAS,CACtCnI,eACAue,OAAQve,EAAapK,QAEzBuZ,eAAgB,SAAAC,GAAM,OAAIA,EAAOxZ,KAAOwZ,EAAOxZ,KAAOwZ,EAAOte,OAC7Due,eAAgB,SAAAD,GAAM,OAAIA,EAAOte,aAMrD,yBAAKuY,UAAU,uBACX,yBAAKA,UAAU,iEAAf,QAGA,yBAAKA,UAAU,kCACX,yBACIA,UAAU,mFACT7X,YAAsB,IAAIG,UAK3C,yBAAK0X,UAAU,yBACX,6BACI,yBAAKA,UAAU,cAAf,SACA,yBAAKA,UAAU,UAAf,OAA6BoX,GAAkB3Y,KAAK9T,OAAO,KAE/D,6BACI,yBAAKqV,UAAU,cAAf,YACA,yBAAKA,UAAU,UAAf,UAAgCqG,OAAO5H,KAAK9T,MAAMgrB,gBAAgBhG,QAAQ,IAC1E,yBAAKnS,MAAO,CAAC2S,WAAY,GAAIqH,cAAe,KACxC,kBAAC,GAAD,CAAmBhY,OAAO,gBACtB,kBAAC,GAAD,CAAOrW,KAAK,SACL0Y,KAAK,kBACLpa,MAAOgX,KAAK9T,MAAMgrB,eAClB3Q,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAAC6W,eAAgB/oB,EAAKnF,cAI9E,yBAAKuY,UAAU,cACX,yBAAKA,UAAU,cAAf,eACA,yBAAKA,UAAU,UAAf,OAA6BoX,GAAkB3Y,KAAK9T,UAG3D8T,KAAK9T,MAAMkrB,YACZ,yBAAK7V,UAAU,8BACX,yBAAKA,UAAU,0CACX,kBAAC,KAAD,CACI2F,mBAAmB,EACnBO,gBAAc,EACdZ,YAAW,uCAAE,WAAOkD,GAAP,SAAArd,EAAA,+EAAe,EAAKgrB,uBAAuB3N,IAA3C,2CAAF,sDACX/gB,MAAO,GACPge,SAAU,SAACgS,GACP,IAAM9d,EAAQ,EAAKhP,MAAMgP,MACzB8d,EAAiB/G,cAAgB,CAAClpB,IAAK,EAAGC,MAAO,GACjDkS,EAAM7C,KAAK2gB,GACX,EAAK3Y,SAAS,CAACnF,WAEnB+d,cAAc,MACdC,mBAAoB,CAACxZ,IAAK,OAAQyZ,OAAQ,QAC1CC,YAAY,4BACZ/R,eAAgB,SAAAC,GAAM,OAAIA,EAAOxZ,KAAOwZ,EAAOxZ,KAAOwZ,EAAOte,OAC7Due,eAAgB,SAAAD,GAAM,OAAIA,EAAOte,UAGzC,yBAAK+V,MAAO,CAAC2S,WAAY,KACjB,0BAAMnQ,UAAU,6BACZ,kBAAC,GAAD,CACI4I,QAASnK,KAAK9T,MAAMirB,OAAOxe,QAC3BqO,SAAU,kBAAM,EAAK3G,SAAS,CAC1B8W,OAAO,2BACA,EAAKjrB,MAAMirB,QADZ,IAEFxe,SAAU,EAAKzM,MAAMirB,OAAOxe,eAN5C,WAYJ,0BAAM4I,UAAU,6BACR,kBAAC,GAAD,CACI4I,QAASnK,KAAK9T,MAAMirB,OAAOre,QAC3BkO,SAAU,kBAAM,EAAK3G,SAAS,CAC1B8W,OAAO,2BACA,EAAKjrB,MAAMirB,QADZ,IAEFre,SAAU,EAAK5M,MAAMirB,OAAOre,eANhD,aAeR,yBAAKiG,MAAO,CAACsa,aAAc,KACvB,yBAAK9X,UAAU,yBACX,yBAAKA,UAAU,oDACX,yBAAKA,UAAU,+BAAf,QACA,yBAAKA,UAAU,mCAAf,YACA,yBAAKA,UAAU,gCAAf,cACA,yBAAKA,UAAU,+BAAf,QACA,yBAAKA,UAAU,gCAAf,UAEHvB,KAAK9T,MAAMgP,MAAMsH,KAAI,SAACgD,EAAM6S,GACzB,OACI,yBAAK9W,UAAU,uBAAuBxY,IAAKsvB,GAEvC,yBAAK9W,UAAU,gBACX,yBACIa,QAAS,kBAAM,EAAKrC,MAAM6C,QAAQvK,KAAnB,kBAAmCuV,EAAnC,YAA+CpI,EAAK9a,KAApD,YAA4D8a,EAAKzc,QAChF,8BAAOyc,EAAKoL,WAGpB,yBAAKrP,UAAU,oBACI,YAAdiE,EAAK9a,MACN,kBAAC,KAAD,CACIuuB,cAAc,MACd/R,mBAAmB,EACnBle,MAAOwc,EAAKyM,cACZjL,SAAU,SAACsS,GACP,IAAMpe,EAAQ,EAAKhP,MAAMgP,MACzBA,EAAMmd,GAASpG,cAAgBqH,EAC/B,EAAKjZ,SAAS,CAACnF,WAEnBwL,QAAS6S,GAAoB,IAC7BlS,eAAgB,SAAAC,GAAM,OAAIA,EAAOxZ,KAAOwZ,EAAOxZ,KAAOwZ,EAAOte,OAC7Due,eAAgB,SAAAD,GAAM,OAAIA,EAAOte,SAItB,YAAdwc,EAAK9a,MACN,kBAAC,GAAD,CACIqW,OACIyE,EAAK+O,QAAQlC,aAAa7P,KAAI,SAACgX,EAAOzwB,GAClC,IAAM0wB,EAASjU,EAAK+O,QAAQnC,oBACvBpI,QAAO,SAAC0P,GAAD,OAAOA,EAAEthB,MAAQohB,EAAMphB,OACnC,MAAM,GAAN,OAAUqhB,EAAO,GAAKA,EAAO,GAAGxH,cAAgB,EAAhD,YAAqDuH,EAAM1H,aAA3D,eAA8E0H,EAAMpW,SACrF+U,KAAK,MAEZxtB,OACI,0BAAM4W,UAAU,gDACVxC,MAAO,CAAC8W,MAAO,SACfzT,QAAS,kBAAM,EAAK/B,SAAS,CACzBgX,iBAAiB,EACjBC,qBAAsBe,MAEhB,kBAAC,KAAD,CAAahX,KAAK,WAGtC8K,eAAe,GACd3G,EAAK+O,QAAQlC,aAAa7P,KAAI,SAACgX,EAAOzwB,GACnC,IAAM0wB,EAASjU,EAAK+O,QAAQnC,oBACvBpI,QAAO,SAAC0P,GAAD,OAAOA,EAAEthB,MAAQohB,EAAMphB,OACnC,OACI,yBAAKrP,IAAKA,EACLwY,UAAU,yCACVwB,MAAM,UAFX,UAGQ0W,EAAO,GAAKA,EAAO,GAAGxH,cAAgB,EAH9C,YAGmDuH,EAAM1H,cACrD,0BAAM/S,MAAO,CAAC4a,SAAU,KAAxB,QAGA,0BAAM5a,MAAO,CAAC6a,WAAY,OAAQC,UAAW,WAA7C,UACoBL,EAAMpW,aAO9C,yBAAK7B,UAAU,iBACI,YAAdiE,EAAK9a,MAAsB8a,EAAK+O,QAAQvC,aAAad,QAAQ,GAC/C,YAAd1L,EAAK9a,MAAsB8a,EAAK+O,QAAQ9B,aAAavB,QAAQ,IAElE,yBAAK3P,UAAU,gBACI,YAAdiE,EAAK9a,MAAsB8a,EAAK+O,QAAQzC,aAC1B,YAAdtM,EAAK9a,MAAsB,OAEhC,yBAAK6W,UAAU,iBAAf,MAEI,0BAAMA,UAAU,eACW,YAAdiE,EAAK9a,OAAuBkd,OAAOpC,EAAKyM,cAAclpB,KAAOyc,EAAK+O,QAAQvC,cAAcd,QAAQ,GAC1F,YAAd1L,EAAK9a,OAAuBkd,OAAOpC,EAAKyM,cAAclpB,KAAOyc,EAAK+O,QAAQ9B,cAAcvB,QAAQ,KAGzG,yBAAK3P,UAAU,kBACX,kBAAC,KAAD,CAAkBa,QAAS,kBAAM,EAAKuV,aAAaU,aAQ1ErY,KAAK9T,MAAMmrB,iBACZ,kBAAC9T,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAACgX,iBAAiB,KAC/ClW,eAAe,EACfE,KAAK,MACLN,OACI,6DACsE,OAApCf,KAAK9T,MAAMorB,sBAC7CtX,KAAK9T,MAAMgP,MAAM8E,KAAK9T,MAAMorB,uBAC5BtX,KAAK9T,MAAMgP,MAAM8E,KAAK9T,MAAMorB,sBAAsB/C,SAClDvU,KAAK9T,MAAMgP,MAAM8E,KAAK9T,MAAMorB,sBAAsB/C,QAAQnR,MAG9DpC,QACI,6BACyC,OAApChB,KAAK9T,MAAMorB,sBACZtX,KAAK9T,MAAMgP,MAAM8E,KAAK9T,MAAMorB,uBAC5BtX,KAAK9T,MAAMgP,MAAM8E,KAAK9T,MAAMorB,sBAAsB/C,SAClDvU,KAAK9T,MAAMgP,MAAM8E,KAAK9T,MAAMorB,sBAAsB/C,QAAQlC,aAAaxM,OAAS,GAChF,yBAAKtE,UAAU,yBAEPvB,KAAK9T,MAAMgP,MAAM8E,KAAK9T,MAAMorB,sBAAsB/C,QAAQlC,aAAa7P,KAAI,SAACsS,EAAS/rB,GACjF,IAAM0wB,EAAS,EAAKvtB,MAAMgP,MAAM,EAAKhP,MAAMorB,sBAAsB/C,QAAQnC,oBAAoBpI,QAAO,SAAC0P,GAAD,OAAOA,EAAEthB,MAAQ0c,EAAQ1c,OAC7H,OACI,yBAAKrP,IAAKA,GACN,kBAAC,GAAD,CAAO2B,KAAK,SACL0Y,KAAI,8BAAyB0R,EAAQ1R,KAAjC,oBAAiD0R,EAAQhD,aAAzD,aAA0EgD,EAAQ/C,iBAAlF,YAAsG+C,EAAQhD,aAA9G,eACJ9oB,MAAOywB,EAAO,GAAKA,EAAO,GAAGxH,cAAgB,EAC7C1L,YAAa,SAACpY,GACV,IAAM+M,EAAQ,EAAKhP,MAAMgP,MACzBA,EAAM,EAAKhP,MAAMorB,sBAAsB/C,QAAQnC,oBAAsB,EAAKlmB,MAAMgP,MAAM,EAAKhP,MAAMorB,sBAAsB/C,QAAQnC,oBAAoB5P,KAAI,SAACsX,GAIpJ,OAHKhF,EAAQ1c,MAAQ0hB,EAAW1hB,KAASwP,OAAOzZ,EAAKnF,QAAU8rB,EAAQ/C,mBACnE+H,EAAW7H,cAAgBrK,OAAOzZ,EAAKnF,QAEpC8wB,KAEX,EAAKzZ,SAAS,CAACnF,mBAUtD+F,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,QAAQhB,QAAS,kBAAM,EAAK/B,SAAS,CAACgX,iBAAiB,UAM/ErX,KAAK9T,MAAMqrB,eACZ,kBAAChU,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAACgX,iBAAiB,KAC/ClW,eAAe,EACfE,KAAK,MACLN,OAAQ,0CAAgBf,KAAK9T,MAAMgM,aAAapK,MAChDkT,QACI,6BAKI,kBAAC,GAAD,CAAOtW,KAAK,OACL0Y,KAAK,UACLiD,UAAU,EACVrd,MAAOgX,KAAK9T,MAAMuqB,OAClBlQ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAACoW,OAAQtoB,EAAKnF,WAC1D,kBAAC,GAAD,CAAO0B,KAAK,OACL0Y,KAAK,uBACLpa,MAAO2vB,GAAkB3Y,KAAK9T,OAC9Bma,UAAU,EACVE,YAAa,SAACpY,OAErB,kBAAC,GAAD,CAAOzD,KAAK,SACL0Y,KAAK,cACLpa,MAAOgX,KAAK9T,MAAMwqB,WAClBnQ,YAAa,SAACpY,GAAD,OAAU,EAAKkS,SAAS,CAACqW,WAAYvoB,EAAKnF,WAC9D,kBAAC,GAAD,CAAS8T,QAASA,EAAQS,sBAGlC0D,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,QAAQhB,QAAS,kBAAM,EAAK/B,SAAS,CAACkX,eAAe,OAClE,kBAAC,GAAD,CAAQnU,KAAK,SAASiD,UAAWrG,KAAK9T,MAAMwqB,WACpCtU,QAAS,kBAAM,EAAKqR,4B,GA5bxClT,aAgddC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6C+R,KAEjEiG,GAAoB,SAAUzsB,GAAwB,IAAjB6tB,EAAgB,wDACnDhf,EAAO,EASX,OARA7O,EAAMgP,MAAMsS,SAAQ,SAAC+K,GACA,YAAbA,EAAI7tB,KACJqQ,GAAQwd,EAAItG,cAAcjpB,MAAQuvB,EAAIhE,QAAQvC,aAC1B,YAAbuG,EAAI7tB,OACXqQ,GAAQwd,EAAItG,cAAcjpB,MAAQuvB,EAAIhE,QAAQ9B,kBAI9CsH,EAAShf,EAAOA,EAAO7O,EAAMgrB,gBAAgBhG,QAAQ,IAG3D+G,GAAwB,SAAU9pB,GACpC,IAAIwb,EAAkB,GAItB,OAHAxb,EAAK6b,QAAO,SAAC+K,GAAD,OAAQA,EAAEnL,WAAS4D,SAAQ,SAACwH,GACpCrL,EAAgBtR,KAAK,CAACtP,IAAKisB,EAAG5c,IAAKpP,MAAOgsB,EAAG5c,IAAKtK,KAAK,GAAD,OAAKknB,EAAG9L,UAAR,aAAsB8L,EAAGxL,cAAzB,KAA2C+K,QAASS,OAEvGrL,GAGLkP,GAAsB,SAAU1qB,GAClC,OAAOA,EAAK6b,QAAO,SAAC+K,GAAD,OAAQA,EAAEnL,WAASpH,KAAI,SAACuV,GACvC,MAAO,CAACjqB,KAAMiqB,EAAG3U,KAAK5V,cAAexE,MAAO+uB,EAAG3f,SAIjDggB,GAAgC,SAAUjqB,GAC5C,IAAIuY,EAAU,GAoCd,OAnCAvY,EAAKuN,SAASsO,QAAO,SAAC+K,GAAD,OAAQA,EAAEnL,WAAS4D,SAAQ,SAACwH,GAC7CtO,EAAQrO,KAAK,CACTtP,IAAKisB,EAAG5c,IACRpP,MAAOgsB,EAAG5c,IACVtK,KAAM,8BACF,0BAAMyT,UAAU,aAAhB,WACA,wCAAUyT,EAAG5R,OACb,0BAAMrE,MAAO,CAAC8W,MAAO,QAAS+D,WAAY,SAA1C,gBAA6D5E,EAAGhD,eAChE,0BAAMjT,MAAO,CAAC8W,MAAO,QAASmE,aAAc,KAA5C,4BAAuEhF,EAAGjD,iBAA1E,QAEJnB,QAAS,8BACL,0BAAMrP,UAAU,aAAhB,WACA,0BAAMA,UAAU,2CAAhB,UAA8DyT,EAAG5R,QAErE1Y,KAAM,UACN6pB,QAASS,OAGjB7mB,EAAKiO,SAAS4N,QAAO,SAAC+K,GAAD,OAAQA,EAAEnL,WAAS4D,SAAQ,SAACwH,GAC7CtO,EAAQrO,KAAK,CACTtP,IAAKisB,EAAG5c,IACRpP,MAAOgsB,EAAG5c,IACVtK,KAAM,8BACF,0BAAMyT,UAAU,aAAhB,WACA,wCAAUyT,EAAG5R,OACb,0BAAMrE,MAAO,CAAC8W,MAAO,UAArB,cAAuCb,EAAGvC,gBAE9C7B,QAAS,8BACL,0BAAMrP,UAAU,aAAhB,WACA,0BAAMA,UAAU,2CAAhB,UAA8DyT,EAAG5R,QAErE1Y,KAAM,UACN6pB,QAASS,OAGVtO,GAGL6S,GAAsB,SAACU,GAEzB,IADA,IAAMC,EAAK,GACFnP,EAAI,EAAGA,GAAKkP,EAAKlP,IACtBmP,EAAG7hB,KAAK,CAACtP,IAAKgiB,EAAGjd,KAAMid,EAAG/hB,MAAO+hB,IAErC,OAAOmP,GAGLC,GAAW,SAAApa,GAAK,OAAI,yCAAOrV,KAAK,YAAeqV,KCviB/Cqa,G,kDAEF,WAAYra,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTmuB,gBAAiB,CACbjX,KAAM,GACN+F,MAAO,GACPE,QAAS,GACTC,IAAK,KACLC,SAAU,KACV+G,UAAW,KACXlH,OAAQkR,GAAc,IAE1B9E,oBAAoB,EACpB7M,oBAAoB,GAIxB,EAAK4R,oBAAsB,EAAKA,oBAAoBtY,KAAzB,gBAC3B,EAAK2G,eAAiB,EAAKA,eAAe3G,KAApB,gBAnBP,E,yGAsBOwO,G,mGACmBzQ,KAAKD,MAAMK,cAAcjT,OAA3D6O,E,EAAAA,gBAAiBxR,E,EAAAA,cAClBojB,EAAW5N,KAAKD,MAAMzU,MAAMwb,OAAO8G,SACzC5N,KAAKK,SAAS,CACVmV,oBAAoB,EACpB7M,oBAAoB,EACpB3Q,QAAS,KAEPlL,EAAM,CACRsW,KAAMqN,EAASvH,UACfC,MAAOsH,EAAStH,MAChBC,OAAQqH,EAASrH,OAAOpgB,MACxBqgB,QAASoH,EAASpH,QAClBC,IAAK1B,OAAO6I,EAASnH,KACrBC,SAAU3B,OAAO6I,EAASjH,eAC1B8G,UAAW1I,OAAOgG,I,kBAIGnE,GAAI,CAAC/e,KAAM,OAAQkC,IAAK,YAAcpC,EAAc4N,IAAKtL,Q,gBAAvEI,E,EAAAA,KACP8S,KAAKK,SAAS,CACVmV,oBAAoB,EACpB7M,oBAAoB,EACpB3Q,QAAS,CAACtN,KAAM,UAAWoD,KAAMZ,EAAK8K,WAG1CgI,KAAKD,MAAM5I,YAAY,CAAC+B,MvCg9BF,mBuCh9B6BE,MAAM,IACzD4G,KAAKD,MAAMlM,eAAemI,EAAgBL,MAAME,MAChD2e,WAAU,sBAAC,sBAAA9tB,EAAA,sDACP,EAAK2T,SAAS,CAACsI,oBAAoB,EAAO8R,eAAgB,KADnD,2CAER,K,kDAEHza,KAAKK,SAAS,CACVmV,oBAAoB,EACpB7M,oBAAoB,EACpB3Q,QAAS,CAACtN,KAAM,QAASoD,KAAM,KAAE6Z,c,wJAK3B,IACP0S,EAAmBra,KAAK9T,MAAxBmuB,gBACP,OAAQA,EAAgBnR,WAChBmR,EAAgB7Q,gBAAkB6Q,EAAgB7Q,cAAc7B,aAChE0S,EAAgBjR,QAChBiR,EAAgB/Q,MAAQ+Q,EAAgB/Q,IAAI3B,YAC5C0S,EAAgB7Q,eAA0D,KAAzC6Q,EAAgB7Q,cAAc3D,S,+BAGjE,IAAD,OACL,OACI,kBAACtC,GAAD,CACI1C,MAAM,EACNK,QAAQ,EACRJ,QAAS,WACL,EAAKT,SAAS,CACVmV,oBAAoB,EACpB7M,oBAAoB,EACpB3Q,QAAS,GACTqiB,gBAAiB,CAACjR,OAAQkR,GAAc,MAE5C,EAAKva,MAAM5I,YAAY,CAAC+B,MvC66BV,mBuC76BqCE,MAAM,KAE7D+H,eAAe,EACfE,KAAK,MACLN,OACI,6CAIJC,QACI,6BACKhB,KAAK9T,MAAMyc,oBACZ,yBACIpH,UAAuC,YAA5BvB,KAAK9T,MAAM8L,QAAQtN,KAAqB,0BAA4B,yBAC9EsV,KAAK9T,MAAM8L,QAAQlK,MAqBxB,kBAAC,GAAD,CAAOsV,KAAM,OACNpa,MAAOgX,KAAK9T,MAAMmuB,gBAAgBnR,UAClCvC,UAAU,EACVJ,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVga,gBAAgB,2BACT,EAAKnuB,MAAMmuB,iBADH,IAEXnR,UAAW/a,EAAKnF,aAMnC,kBAAC,GAAD,CAAOoa,KAAM,gBACNpa,MAAOgX,KAAK9T,MAAMmuB,gBAAgB7Q,cAClC9e,KAAK,gBACL8b,UAAU,KACVG,UAAU,EACVJ,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVga,gBAAgB,2BACT,EAAKnuB,MAAMmuB,iBADH,IAEX7Q,cAAerb,EAAKnF,aAMvC,kBAAC,GAAD,CAAOoa,KAAM,eACNpa,MAAOgX,KAAK9T,MAAMmuB,gBAAgBhR,QAClC3e,KAAK,WACL6b,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVga,gBAAgB,2BACT,EAAKnuB,MAAMmuB,iBADH,IAEXhR,QAASlb,EAAKnF,aAMjC,kBAAC,GAAD,CAAOoa,KAAM,QACNpa,MAAOgX,KAAK9T,MAAMmuB,gBAAgBlR,MAClC5C,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVga,gBAAgB,2BACT,EAAKnuB,MAAMmuB,iBADH,IAEXlR,MAAOhb,EAAKnF,aAM/B,kBAAC,GAAD,CAAOoa,KAAM,MACNpa,MAAOgX,KAAK9T,MAAMmuB,gBAAgB/Q,IAClC5e,KAAK,SACL8b,UAAU,IACVG,UAAU,EACVJ,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVga,gBAAgB,2BACT,EAAKnuB,MAAMmuB,iBADH,IAEX/Q,IAAKnb,EAAKnF,aAM7B,kBAAC,GAAD,CAAOoa,KAAM,SACNpa,MAAOgX,KAAK9T,MAAMmuB,gBAAgBjR,OAClC1e,KAAK,SACLic,UAAU,EACVD,QAAS4T,GACT/T,YAAa,SAACpY,GACV,EAAKkS,SAAS,CACVga,gBAAgB,2BACT,EAAKnuB,MAAMmuB,iBADH,IAEXjR,OAAQjb,SAK3B,kBAAC,GAAD,CAAS2O,QAASkD,KAAK9T,MAAMspB,sBAGrCvU,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLiD,SAAUrG,KAAK4I,iBACfxG,QAAO,sBAAE,sBAAA1V,EAAA,sEACC,EAAK6tB,oBAAoB,EAAKruB,MAAMmuB,iBADrC,6CAGjB,kBAAC,GAAD,CAAQjX,KAAK,QAAQhB,QAAS,WAC1B,EAAK/B,SAAS,CACVmV,oBAAoB,EACpB7M,oBAAoB,EACpB3Q,QAAS,GACTqiB,gBAAiB,CAACjR,OAAQkR,GAAc,MAE5C,EAAKva,MAAM5I,YAAY,CAAC+B,MvCuyBlB,mBuCvyB6CE,MAAM,c,GA3N3DmH,aAyOpBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6CyZ,KCmCxDM,I,yDA5QX,WAAY3a,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACT+b,iBAAiB,EACjBC,eAAe,EACfC,iBAAkB,GAClBC,aAAa,EACbC,iBAAiB,EACjBC,mBAAoB,GACpBK,oBAAoB,EACpB3Q,QAAS,CACLtN,KAAM,GACNoD,KAAM,KAId,EAAK8a,eAAiB,EAAKA,eAAe3G,KAApB,gBACtB,EAAK0Y,qBAAuB,EAAKA,qBAAqB1Y,KAA1B,gBAC5B,EAAKqP,uBAAyB,EAAKA,uBAAuBrP,KAA5B,gBAnBf,E,0GAsBQjJ,G,yFACvBgH,KAAKK,SAAS,CAAC6H,eAAe,EAAOE,aAAa,IAC5Ctb,EAAM,CACRsW,KAAMpK,EAASkQ,UACfC,MAAOnQ,EAASmQ,MAChBC,OAAQpQ,EAASoQ,OAAOpgB,MACxBqgB,QAASrQ,EAASqQ,QAClBC,IAAKtQ,EAASsQ,IACdC,SAAUvQ,EAASwQ,e,kBAGEC,GAAI,CAAC/e,KAAM,MAAOkC,IAAK,YAAcoM,EAASZ,IAAKtL,Q,gBAAjEI,E,EAAAA,KACP8S,KAAKK,SAAS,CACV+H,aAAa,EACbO,oBAAoB,EACpB3Q,QAAS,CAACtN,KAAM,UAAWoD,KAAMZ,EAAK8K,WAG1CgI,KAAKD,MAAMlM,eAAemM,KAAKD,MAAMlE,MACrC2e,WAAU,sBAAC,sBAAA9tB,EAAA,sDACP,EAAK2T,SAAS,CAACsI,oBAAoB,EAAO8R,eAAgB,KADnD,2CAER,K,kDAEHza,KAAKK,SAAS,CACV+H,aAAa,EACbO,oBAAoB,EACpB3Q,QAAS,CAACtN,KAAM,QAASoD,KAAM,KAAE6Z,c,uMAKhB3O,G,uFACzBgH,KAAKK,SAAS,CAACgI,iBAAiB,EAAOD,aAAa,I,kBAE3BqB,GAAI,CAAC/e,KAAM,SAAUkC,IAAK,YAAcoM,EAASZ,M,gBAA/DlL,E,EAAAA,KACP8S,KAAKK,SAAS,CACV+H,aAAa,EACbO,oBAAoB,EACpB3Q,QAAS,CAACtN,KAAM,UAAWoD,KAAMZ,EAAK8K,WAG1CgI,KAAKD,MAAMlM,eAAemM,KAAKD,MAAMlE,MACrC2e,WAAU,sBAAC,sBAAA9tB,EAAA,sDACP,EAAK2T,SAAS,CAACsI,oBAAoB,EAAO8R,eAAgB,KADnD,2CAER,K,kDAEHza,KAAKK,SAAS,CACV+H,aAAa,EACbO,oBAAoB,EACpB3Q,QAAS,CAACtN,KAAM,QAASoD,KAAM,KAAE6Z,c,wJAK3B,IACPQ,EAAoBnI,KAAK9T,MAAzBic,iBACP,OAAQA,EAAiBe,YAAcf,EAAiBqB,gBAAkBrB,EAAiBiB,SAAWjB,EAAiBmB,M,+BAGjH,IAAD,SAC+BtJ,KAAKD,MAAlCgJ,EADF,EACEA,KAAMre,EADR,EACQA,KAAMgf,EADd,EACcA,cAEbkR,EAAc,GAgCpB,OA9BK7R,EAAKa,UACO,WAATlf,EACAkwB,EAAYviB,KACR,CACIwK,KAAM,cACN7Z,MAAO,eACR,CACC6Z,KAAM,kBACN7Z,MAAO,mBACR,CACC6Z,KAAM,qBACN7Z,MAAO,uBAIf4xB,EAAYviB,KACR,CACIwK,KAAM,cACN7Z,MAAO,eACR,CACC6Z,KAAM,OACN7Z,MAAO,QACR,CACC6Z,KAAM,SACN7Z,MAAO,YAOnB,yBAAKuY,UAAU,aACX,6BACI,yBAAKA,UAAU,wBACVwH,EAAKG,WAEV,yBAAK3H,UAAU,aAAaxC,MAAO,CAAC8W,MAAO,UACvC,kBAAC,GAAD,CACIjQ,KAAMgV,EACNnV,eAAgB,SAACsE,GACD,gBAARA,EACA,EAAK1J,SAAS,CAAC4H,iBAAiB,IAE1ByB,GAAeA,EAAcK,EAAKhB,QAM5D,yBAAKxH,UAAU,gBACVwH,EAAKS,eACN,yBAAKjI,UAAU,cACX,yBAAKxC,MAAO,CAACkH,MAAO,IAAKC,IAAI,4DAC7B,yBAAK3E,UAAU,cACVwH,EAAKS,iBAIlB,6BACKT,EAAK3Q,KACN,yBAAKmJ,UAAU,yBACVwH,EAAK3Q,KAET2Q,EAAKe,iBAAmB,yBAAKvI,UAAU,yBACnC7X,YAAsBqf,EAAKe,kBAE/Bf,EAAKa,SACN,yBAAKrI,UAAU,2BAAf,YAKJ,kBAACgC,GAAD,CACI1C,KAAMb,KAAK9T,MAAM+b,gBACjB/G,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAAC4H,iBAAiB,KAC/C9G,eAAe,EACfE,KAAK,MACLN,OACI,kDACuBgI,EAAKG,WAGhClI,QACI,yBAAKjC,MAAO,CAACS,QAAS,KAClB,yBAAK+B,UAAU,eACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,iCACVwH,EAAKG,WAEV,yBAAK3H,UAAU,+BACX,yBAAKA,UAAU,QACV2E,IAAI,mEACR6C,EAAK3Q,MAGd,yBAAKmJ,UAAU,oCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eAAf,qBACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,mBACV7X,YAAsBqf,EAAKe,mBAGpC,yBAAKvI,UAAU,kCACX,yBAAKA,UAAU,uBAAf,iBACA,yBAAKA,UAAU,mBAAmBwH,EAAKS,gBAE1CT,EAAKmB,UACN,yBAAK3I,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBACIA,UAAU,mBAAmBwH,EAAKmB,gBASpD,WAATxf,GACD,yBAAK6W,UAAU,uBACX,yBAAKA,UAAU,mCAAf,qBACA,yBAAKA,UAAU,2BACVwH,EAAKje,MACN,2BAAOyW,UAAU,wBACb,+BACA,4BACI,wBAAIA,UAAU,uBAAd,WACA,wBAAIA,UAAU,uBAAd,YACA,wBAAIA,UAAU,uBAAd,UAEJ,4BACI,wBAAIA,UAAU,uBACV,kBAAC,KAAD,CAAU8E,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKiQ,KAAKC,MAD/C,OAEI,6BACA,kBAAC,KAAD,CAAUqL,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKiQ,KAAK3B,OAH/C,QAII,6BACA,kBAAC,KAAD,CAAUiN,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKiQ,KAAKE,OAL/C,QAMI,6BACA,kBAAC,KAAD,CAAUoL,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKiQ,KAAKqP,SAP/C,UAQI,8BAEJ,wBAAI7I,UAAU,uBACV,kBAAC,KAAD,CAAU8E,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKkO,SAASgC,MADnD,QAC8D,6BAC1D,kBAAC,KAAD,CAAUqL,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKkO,SAASI,OAFnD,SAEgE,6BAC5D,kBAAC,KAAD,CAAUiN,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKkO,SAASiC,OAHnD,SAGgE,6BAC5D,kBAAC,KAAD,CAAUoL,UAAQ,EACR8D,QAASpB,EAAKje,KAAKkO,SAASoR,SAL1C,WAK2D,8BAE3D,wBAAI7I,UAAU,uBACV,kBAAC,KAAD,CAAU8E,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKoQ,MAAMF,MADhD,QAC2D,6BACvD,kBAAC,KAAD,CAAUqL,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKoQ,MAAM9B,OAFhD,SAE6D,6BACzD,kBAAC,KAAD,CAAUiN,UAAQ,EAAC8D,QAASpB,EAAKje,KAAKoQ,MAAMD,OAHhD,SAG6D,6BACzD,kBAAC,KAAD,CAAUoL,UAAQ,EACR8D,QAASpB,EAAKje,KAAKoQ,MAAMkP,SALvC,WAKwD,oCAUhFnJ,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,QAAQhB,QAAS,kBAAM,EAAK/B,SAAS,CAAC4H,iBAAiB,e,GAlQzE1H,cCMjBsa,G,kDACF,WAAY9a,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACT4uB,mBAAmB,EACnBC,YAAa,GACbC,uBAAuB,EACvBC,qBAAsB,GACtBC,WAAY,GACZC,iBAAiB,EACjBC,iBAAiB,EACjB/S,iBAAiB,GAGrB,EAAKqB,cAAgB,EAAKA,cAAczH,KAAnB,gBACrB,EAAK2G,eAAiB,EAAKA,eAAe3G,KAApB,gBACtB,EAAKoL,mBAAqB,EAAKA,mBAAmBpL,KAAxB,gBAC1B,EAAKuJ,WAAa,EAAKA,WAAWvJ,KAAhB,gBAClB,EAAKoZ,wBAA0B,EAAKA,wBAAwBpZ,KAA7B,gBAC/B,EAAKqZ,kBAAoB,EAAKA,kBAAkBrZ,KAAvB,gBAnBV,E,iEAsBG,IACb2L,EAAY5N,KAAKD,MAAMzU,MAAMwb,OAA7B8G,SACL5N,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,SAAUkjB,e,oCAG1BljB,EAAM6wB,GACH,oBAAT7wB,EACAsV,KAAKK,SAAS,CAAC2a,uBAAuB,EAAMC,qBAAsBM,EAASzwB,KAAMowB,WAAYK,IAC7E,uBAAT7wB,GACPsV,KAAKK,SAAS,CAAC8a,iBAAiB,EAAMD,WAAYK,M,uCAKvBvb,KAAK9T,MAA7B+uB,qBACP,OAAO,I,yCAGQvwB,EAAMC,EAAQ+iB,GAAW,IACnCuN,EAAwBjb,KAAK9T,MAA7B+uB,qBACLA,EAAqBvwB,GAAMC,GAAU+iB,EACrC1N,KAAKK,SAAS,CAAC4a,2B,mCAIfjb,KAAKK,SAAS,CACV4a,qBAAsB,GACtBD,uBAAuB,EACvBE,WAAY,GACZC,iBAAiB,M,+KAKGnb,KAAKD,MAAMK,cAAcjT,OAA1C3C,E,EAAAA,cACPwV,KAAKK,SAAS,CAAC+a,iBAAiB,I,kBAGP3R,GAAI,CACrB/e,KAAM,MACNkC,IAAI,UAAD,OAAYpC,EAAc4N,IAA1B,YAAiC4H,KAAK9T,MAAMgvB,WAAW9iB,KAC1DtL,IAAK,CAAChC,KAAMkV,KAAK9T,MAAM+uB,wB,gBAHpB/tB,E,EAAAA,KAKP8S,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,SAAUkjB,SAAUpjB,EAAc4N,MAC5D4H,KAAKwL,aACLxL,KAAKD,MAAMhJ,gBAAgB,CACvBiB,QAAS9K,EAAK8K,QACdC,MAAO,Y,kDAGX+H,KAAKD,MAAMhJ,gBAAgB,CACvBiB,QAAS,KAAE2P,WACX1P,MAAO,U,QAGf+H,KAAKK,SAAS,CAAC+a,iBAAiB,I,yRAIRpb,KAAKD,MAAMK,cAAcjT,OAA1C3C,E,EAAAA,cACPwV,KAAKK,SAAS,CAAC+a,iBAAiB,I,kBAGP3R,GAAI,CACrB/e,KAAM,SACNkC,IAAI,UAAD,OAAYpC,EAAc4N,IAA1B,YAAiC4H,KAAK9T,MAAMgvB,WAAW9iB,O,gBAFvDlL,E,EAAAA,KAIP8S,KAAKD,MAAM5K,QAAQ,CAACzK,KAAM,SAAUkjB,SAAUpjB,EAAc4N,MAC5D4H,KAAKwL,aACLxL,KAAKD,MAAMhJ,gBAAgB,CACvBiB,QAAS9K,EAAK8K,QACdC,MAAO,Y,kDAGX+H,KAAKD,MAAMhJ,gBAAgB,CACvBiB,QAAS,KAAE2P,WACX1P,MAAO,U,QAGf+H,KAAKK,SAAS,CAAC+a,iBAAiB,I,oMAGTniB,G,gFACvB+G,KAAKK,SAAS,CAACgI,iBAAiB,EAAO+S,iBAAiB,I,kBAE/B3R,GAAI,CAAC/e,KAAM,SAAUkC,IAAI,UAAD,OAAYqM,EAAOb,O,iBAAzDlL,E,EAAAA,OAEsB,UAAhBA,EAAKmB,QAKH2R,KAAKD,MAAMzU,MAAMwb,OAAvBvO,GAEDrL,EAAK8K,SACLgI,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS9K,EAAK8K,QAASC,MAAO,YAG9D9M,OAAOC,SAASgD,KAAO,KAVnBlB,EAAKiB,MACL6R,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS9K,EAAKiB,KAAM8J,MAAO,UAW/D+H,KAAKK,SAAS,CAAC+a,iBAAiB,I,kDAEhCpb,KAAKK,SAAS,CAAC+a,iBAAiB,IAChCpb,KAAKD,MAAMhJ,gBAAgB,CAACiB,QAAS,KAAE2P,WAAY1P,MAAO,U,gJAIxD,IAAD,SAC8C+H,KAAKD,MAAMK,cAAcjT,OAArEsL,EADF,EACEA,WAAYS,EADd,EACcA,MAAO4D,EADrB,EACqBA,QAASjC,EAD9B,EAC8BA,aAC5BnC,EAAUD,EAAVC,OAFF,EAGsCsH,KAAK9T,MAAzC+uB,EAHF,EAGEA,qBAAsBC,EAHxB,EAGwBA,WAEvB/W,EAAQ,CACV,CACIG,SAAU,YACVkX,WAAY,kBAAC,KAAD,MACZC,gBAAiB,aAEjBlX,OACI,yBAAKhD,UAAU,kBACV7I,EAAO9N,WAAa8N,EAAO9N,UAAUof,QAAO,SAAC0B,GAAD,MAAkC,aAAzBA,EAAI7gB,YAAYiQ,QAAqB0H,KAAI,SAACuG,EAAMhgB,GAClG,OACI,kBAAC,GAAD,eAAUA,IAAKA,EAAKggB,KAAI,2BAAMA,EAAKle,aAAX,IAAwBC,KAAMie,EAAKje,OAAOJ,KAAK,SAC7Dgf,cAAe,EAAKA,eAAmB,EAAK3J,aAK1E,CACIuE,SAAU,SACVkX,WAAY,kBAAC,KAAD,CAAUna,KAAK,SAC3Boa,gBAAiB,aAEjBlX,OACI,yBAAKhD,UAAU,kBACV7I,EAAO9N,WAAa8N,EAAO9N,UAAUof,QAAO,SAAC0B,GAAD,MAAkC,UAAzBA,EAAI7gB,YAAYiQ,QAAkB0H,KAAI,SAACuG,EAAMhgB,GAC/F,OACI,kBAAC,GAAD,eAAUA,IAAKA,EAAKggB,KAAI,2BAAMA,EAAKle,aAAX,IAAwBC,KAAMie,EAAKje,OAAOJ,KAAK,SAC7Dgf,cAAe,EAAKA,eAAmB,EAAK3J,cAO9E,OACI,yBAAKwB,UAAU,YACX,yBAAKA,UAAU,cAAchJ,GAAG,cAC5B,yBAAKgJ,UAAU,oBAAf,YACA,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAS7W,KAAK,SAASqU,MAAM,SACpBjC,QAASkD,KAAK9T,MAAMkvB,iBAAmBte,EAAQmB,iBACjC,UAAtBpD,EAAaC,OAAsBkF,KAAK9T,MAAMkvB,kBAAoBte,EAAQmB,iBAAmBvF,EAAOkR,SACrG,kBAAC,KAAD,CAAQvI,KAAK,OAAOtC,MAAO,CAACG,OAAQ,IAAKqC,UAAU,cAC3Ca,QAAS,kBAAM,EAAKrC,MAAM5I,YAAY,CAAC+B,MzC80BtC,kByC90BgEE,MAAM,OAExD,UAAtByB,EAAaC,OAAsBkF,KAAK9T,MAAMkvB,kBAAoBte,EAAQmB,iBAAmBvF,EAAOkR,SACrG,kBAAC,KAAD,CAAiBvI,KAAK,OAAOtC,MAAO,CAACG,OAAQ,IAAKqC,UAAU,cAC3Ca,QAAS,kBAAM,EAAK/B,SAAS,CAACgI,iBAAiB,SAGxE,yBAAK9G,UAAU,kBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,iCACV7I,EAAO0K,MAEZ,yBAAK7B,UAAU,+BACX,yBAAKA,UAAU,QACV2E,IAAI,mEACRxN,EAAON,MAGhB,yBAAKmJ,UAAU,oCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eAAf,uBACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,YACA,yBAAKA,UAAU,mBACV7I,EAAOtN,SAAWsN,EAAOtN,SAAW,QAG7C,yBAAKmW,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,mBACV7X,YAAsBgP,EAAOoR,mBAGtC,yBAAKvI,UAAU,kCACX,yBAAKA,UAAU,uBAAf,iBACA,yBAAKA,UAAU,mBAAmB7I,EAAO8Q,gBAE5C9Q,EAAOwR,UACR,yBAAK3I,UAAU,kCACX,yBAAKA,UAAU,uBAAf,cACA,yBACIA,UAAU,mBAAmB7I,EAAOwR,UAAYxR,EAAOwR,SAAShB,UADpE,KACiFxQ,EAAOwR,UAAYxR,EAAOwR,SAAS9R,IADpH,QAOZ,yBAAKmJ,UAAU,aACX,yBAAKA,UAAU,eAAf,yBACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBAAf,mBACA,yBAAKA,UAAU,mBACV7I,EAAO9N,UAAY8N,EAAO9N,UAAUib,OAAS,QAOtE,yBAAK9G,MAAO,CAAC2S,WAAY,KACrB,kBAAC,GAAD,CAAMvN,MAAOA,EAAOzZ,KAAK,aAG5BsV,KAAK9T,MAAM8uB,uBACZ,kBAACzX,GAAD,CACI1C,KAAMb,KAAK9T,MAAM8uB,sBACjB9Z,QAAQ,EACRJ,QAAS,kBAAM,EAAK0K,cACpBrK,eAAe,EACfE,KAAK,OACLN,OACI,iDACqB,0BACjBQ,UAAU,qBAAqBvB,KAAK9T,MAAMgvB,WAAWhS,YAG7DlI,QACI,6BACKuQ,OAAOC,KAAKyJ,GAAsBpV,OAAS,GAC5C,yBAAKtE,UAAU,2BAEX,yBAAKA,UAAU,2BACX,2BAAOA,UAAU,sDACb,+BACA,wBAAIA,UAAU,8BACV,wBAAIA,UAAU,uBAAd,WACA,wBAAIA,UAAU,uBAAd,YACA,wBAAIA,UAAU,uBAAd,UAEJ,wBAAIA,UAAU,8BACV,wBAAIA,UAAU,uBACV,kBAAC,KAAD,CAAU4I,QAAS8Q,EAAqBlgB,KAAKC,IACnCgM,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,OAAQ,MAAOlf,MAFzE,QAEsF,6BAClF,kBAAC,KAAD,CACIgc,QAAS8Q,EAAqBlgB,KAAK3B,KACnC4N,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,OAAQ,OAAQlf,MALpE,SAKkF,6BAC9E,kBAAC,KAAD,CACIgc,QAAS8Q,EAAqBlgB,KAAKE,KACnC+L,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,OAAQ,OAAQlf,MARpE,SAQkF,6BAC9E,kBAAC,KAAD,CACIgc,QAAS8Q,EAAqBlgB,KAAKqP,OACnCpD,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,OAAQ,SAAUlf,MAXtE,WAWsF,8BAEtF,wBAAIoT,UAAU,uBACV,kBAAC,KAAD,CACI4I,QAAS8Q,EAAqBjiB,SAASgC,IACvCgM,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,WAAY,MAAOlf,MAHvE,QAGoF,6BAChF,kBAAC,KAAD,CACIgc,QAAS8Q,EAAqBjiB,SAASI,KACvC4N,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,WAAY,OAAQlf,MANxE,SAMsF,6BAClF,kBAAC,KAAD,CACIgc,QAAS8Q,EAAqBjiB,SAASiC,KACvC+L,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,WAAY,OAAQlf,MATxE,SASsF,6BAClF,kBAAC,KAAD,CACIgc,QAAS8Q,EAAqBjiB,SAASoR,OACvCpD,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,WAAY,SAAUlf,MAZ1E,WAY0F,8BAE1F,wBAAIoT,UAAU,uBACV,kBAAC,KAAD,CAAU4I,QAAS8Q,EAAqB/f,MAAMF,IACpCgM,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,QAAS,MAAOlf,MAF1E,QAEuF,6BACnF,kBAAC,KAAD,CACIgc,QAAS8Q,EAAqB/f,MAAM9B,KACpC4N,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,QAAS,OAAQlf,MALrE,SAKmF,6BAC/E,kBAAC,KAAD,CACIgc,QAAS8Q,EAAqB/f,MAAMD,KACpC+L,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,QAAS,OAAQlf,MARrE,SAQmF,6BAC/E,kBAAC,KAAD,CACIgc,QAAS8Q,EAAqB/f,MAAMkP,OACpCpD,SAAU,SAAC7Y,GAAD,OAAU,EAAKkf,mBAAmB,QAAS,SAAUlf,MAXvE,WAWuF,mCAQvG,kBAAC,GAAD,CAAS2O,QAASkD,KAAK9T,MAAMkvB,mBAGrCna,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLiD,SAAUrG,KAAK4I,kBAAoB5I,KAAK9T,MAAMkvB,gBAC9ChZ,QAAO,sBAAE,sBAAA1V,EAAA,sEAAkB,EAAK2uB,0BAAvB,qFACjB,kBAAC,GAAD,CAAQhV,SAAUrG,KAAK9T,MAAMkvB,gBAAiBhY,KAAK,QAC3ChB,QAAS,kBAAM,EAAKoJ,mBAMvCxL,KAAK9T,MAAMivB,iBACZ,kBAAC5X,GAAD,CACI1C,KAAMb,KAAK9T,MAAMivB,gBACjBja,QAAQ,EACRJ,QAAS,kBAAM,EAAK0K,cACpBrK,eAAe,EACfE,KAAK,OACLN,OACI,4DACgC,8BAAOma,EAAWhS,YAGtDlI,QACI,yBAAKjC,MAAO,CAACS,QAAS,KAAtB,kGAGI,kBAAC,GAAD,CAAS1C,QAASkD,KAAK9T,MAAMkvB,mBAGrCna,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,qBAAqBiD,SAAUrG,KAAK9T,MAAMkvB,gBAC/ChZ,QAAO,sBAAE,sBAAA1V,EAAA,+EAAY,EAAK4uB,qBAAjB,6CACjB,kBAAC,GAAD,CAAQlY,KAAK,QAAQiD,SAAUrG,KAAK9T,MAAMkvB,gBAClChZ,QAAS,kBAAM,EAAKoJ,mBAMvCtS,EAAMwF,iBAAmB,kBAAC,GAAD,CAAiBhU,KAAM,cAAe6iB,WAAY7U,IAGxEsH,KAAK9T,MAAMmc,iBACX,kBAAC9E,GAAD,CACI1C,KAAMb,KAAK9T,MAAMmc,gBACjBnH,QAAQ,EACRJ,QAAS,kBAAM,EAAKT,SAAS,CAACgI,iBAAiB,KAC/ClH,eAAe,EACfE,KAAK,OACLN,OACI,+CACmB,8BAAOrI,EAAO0K,OAGrCpC,QACI,yBAAKjC,MAAO,CAACS,QAAS,KAAtB,gJAGI,kBAAC,GAAD,CAAS1C,QAASkD,KAAK9T,MAAMkvB,mBAGrCna,OACI,6BACI,kBAAC,GAAD,CAAQmC,KAAK,SACLhB,QAAO,sBAAE,sBAAA1V,EAAA,sEACC,EAAKgvB,qBAAqBhjB,GAD3B,6CAGjB,kBAAC,GAAD,CAAQ0K,KAAK,QAAQhB,QAAS,kBAAM,EAAK/B,SAAS,CAACgI,iBAAiB,iB,GAtYrF9H,aAsZjBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6Cka,KCvZjEc,G,kDACF,WAAY5b,GAAQ,uCACVA,G,iEAINjX,YAAgB,eAAgBkX,KAAKD,MAAMzU,MAAMwb,OAAO8G,UADvC,IAEV/S,EAAgBmF,KAAKD,MAAMK,cAAcjT,OAAzC0N,aACD+S,EAAW5N,KAAKD,MAAMzU,MAAMwb,OAAO8G,SACnCgO,EAAe/gB,EAAaid,gBAAgB9N,QAAO,SAAC/Q,GAAD,OAAYA,EAAOb,MAAQwP,OAAOgG,MACvFgO,GAAgBA,EAAa/V,OAAS,GACtC7F,KAAKD,MAAM9I,iBAAiB2kB,EAAa,M,yCAI9BC,EAAWC,EAAWC,GACrC,IAAMC,EAAeH,EAAUvwB,MAAMwb,OAAO8G,SACtCpjB,EAAgBwV,KAAKD,MAAMzU,MAAMwb,OAAO8G,SAC9C,GAAIoO,IAAiBxxB,EAAe,CAAC,IAE3BoxB,EADiB5b,KAAKD,MAAMK,cAAcjT,OAAzC0N,aAC2Bid,gBAAgB9N,QAAO,SAAC/Q,GAAD,OAAYA,EAAOb,MAAQwP,OAAOpd,MACvFoxB,GAAgBA,EAAa/V,OAAS,GACtC7F,KAAKD,MAAM9I,iBAAiB2kB,EAAa,O,+BAK3C,IAAD,SACwC5b,KAAKD,MAAMK,cAAcjT,OAA/D0N,EADF,EACEA,aAAcrQ,EADhB,EACgBA,cAAe0O,EAD/B,EAC+BA,MAC9B+J,EAAW,GAEX2K,EAAW5N,KAAKD,MAAMzU,MAAMwb,OAAO8G,SACnCgO,EAAe/gB,EAAaid,gBAAgB9N,QAAO,SAAC/Q,GAAD,OAAYA,EAAOb,MAAQwP,OAAOgG,MAE3F,GAAIgO,GAAgBA,EAAa/V,OAAS,EAAG,CACzC,IAAMoW,EAAaL,EAAa,GAAGhxB,UAAU,GAAGE,KAChD,GAAImxB,EAAWjjB,SAASI,KAAM,CAC1B,IAAI8iB,EAAc,CACd9Y,KAAM,YACN7K,GAAI,YACJoK,KAAK,WAAD,OAAaiL,EAAb,eAEJqO,EAAWjjB,SAASgC,MAAQxQ,EAAcof,UAASsS,EAAY5Y,QAAU,kBAAM,EAAKvD,MAAM5I,YAAY,CACtG+B,M1C28Bc,mB0C18BdE,MAAM,MAEV6J,EAAS5K,KAAK6jB,GAGlB,GAAID,EAAW/gB,MAAM9B,KAAM,CACvB,IAAI+iB,EAAc,CACd/Y,KAAM,kBACN7K,GAAI,QACJoK,KAAK,WAAD,OAAaiL,EAAb,WAEJqO,EAAW/gB,MAAMF,MAAQxQ,EAAcof,UAASuS,EAAY7Y,QAAU,kBAAM,EAAKvD,MAAM5I,YAAY,CACnG+B,MAAOC,GACPC,MAAM,MAEV6J,EAAS5K,KAAK8jB,GAGlB,GAAIF,EAAWlhB,KAAK3B,KAAM,CACtB,IAAIgjB,EAAc,CACdhZ,KAAM,UACN7K,GAAI,UACJoK,KAAK,WAAD,OAAaiL,EAAb,cAEJqO,EAAWlhB,KAAKC,MAAQxQ,EAAcof,UAASwS,EAAY/Y,QAAZ,kBAAiCuK,EAAjC,iBACnD3K,EAAS5K,KAAK+jB,GAGQ,UAAtBvhB,EAAaC,MACbmI,EAAS5K,KAAK,CACV+K,KAAM,WACN7K,GAAI,WACJoK,KAAK,WAAD,OAAaiL,EAAb,eAIZ,IAAInN,EAAU,CAAC,CACXkC,KAAM,aACNE,KAAM,kBAAC,KAAD,CAAaxB,KAAK,UACzB,CACCsB,KAAM,WACNE,KAAM,kBAAC,KAAD,CAAqBxB,KAAK,UACjC,CACCsB,KAAM,YACNE,KAAM,kBAAC,KAAD,CAAiBxB,KAAK,UAC7B,CACCsB,KAAM,UACNE,KAAM,kBAAC,KAAD,CAAYxB,KAAK,WAG3B,OACI,kBAAC2N,GAAD,CAAgBpM,QAAS5C,KAAKD,MAAM6C,QAASxX,SAAU4U,KAAKD,MAAM3U,SAAUiX,WAAY,CACpFC,QAAQ,UACRQ,UAAU,EACVE,WAAYxY,EAAc4Y,KAC1B6L,WAAY,GACZC,gBAAiBrU,EACjBoI,WACAxC,UACA0O,iBAAkB,kBAAM,EAAKpP,MAAM6C,QAAQvK,KAAK,qBAChDvB,UAAWkJ,KAAKD,MAAMjJ,YAEtB,kBAACsY,GAAD,CAAoBrP,OAAK,IAExB7G,EAAMkF,kBAAoB,kBAAC,GAAD,MAC1BlF,EAAMmF,iBAAmB,kBAAC,GAAD,CAAgB3T,KAAM,gBAC/CwO,EAAMoF,iBAAmB,kBAAC,GAAD,CAAgB5T,KAAM,gBAEhD,6BACI,kBAAC,IAAD,CAAO2kB,KAAI,8BAAiCC,UAAWY,KACvD,kBAAC,IAAD,CAAOb,KAAI,iCAAoCC,UAAW8B,KAE1D,kBAAC,IAAD,CAAO/B,KAAI,0BAA6BC,UAAW+M,KACnD,kBAAC,IAAD,CAAOhN,KAAI,gCAAmCC,UAAW4F,KACzD,kBAAC,IAAD,CAAO7F,KAAI,gCAAmCC,UAAW6G,KAEzD,kBAAC,IAAD,CAAO9G,KAAI,6BAAgCC,UAAWgN,KACtD,kBAAC,IAAD,CAAOjN,KAAI,iCAAoCC,UAAWgH,KAC1D,kBAAC,IAAD,CAAOjH,KAAI,gCAAmCC,UAAWiN,KACjC,UAAtB1hB,EAAaC,MACf,kBAAC,IAAD,CAAOuU,KAAI,6BAAgCC,UAAWkN,OAKlE,OACI,yBAAKzZ,MAAM,SAAShE,MAAO,CAACS,QAAS,KAArC,2C,GAlIWe,aA4IrBC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6Cgb,KC/JjEc,G,kDAEF,WAAY1c,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTwwB,UAAU,EACV5f,SAAS,EACT6f,aAAc,CACV3X,QAAQ,EACRiB,MAAO,KAEX2W,cAAc,EACdC,UAAW,IAGf,EAAKC,aAAe,EAAKA,aAAa7a,KAAlB,gBAdL,E,iEAiBG,IAAD,OACV6a,EAAgB9c,KAAhB8c,aADU,EAEiE9c,KAAKD,MAAhFzM,EAFU,EAEVA,wBAAyB8M,EAFf,EAEeA,cAAe9I,EAF9B,EAE8BA,cAAeV,EAF7C,EAE6CA,iBACzDwJ,EAAc2c,MAAM,CAAC,eAAgB,SAsBtCD,GAAa,GAAM,GArBnBvuB,EAAI,CAAC7D,KAAM,MAAOkC,IAAK,gBAAgB,GAAM,SAACL,EAAD,GAAoB,IAAXW,EAAU,EAAVA,KAC7CA,GAAwB,UAAhBA,EAAKmB,QAOdiF,EAAwBpG,EAAKoB,UACxB8R,EAAc1R,IAAI,kBACnB4I,GAAc,GAElBV,EAAiB,EAAKmJ,MAAM6C,SAC5Bka,GAAa,GAAM,GACc,MAA7B3xB,OAAOC,SAASsX,UAAiD,KAA7BvX,OAAOC,SAASsX,UAEpD,EAAK3C,MAAM6C,QAAQvK,KAAK,gBAdK,UAA7BlN,OAAOC,SAASsX,UAEhB,EAAK3C,MAAM6C,QAAQvK,KAAK,SAE5BykB,GAAa,S,0CAoBzB,IAAMhmB,EAAYkJ,KAAKD,MAAMjJ,UAC7BkmB,aAAY,WACRlmB,MACD,Q,mCAGM3I,EAAM2O,GACfkD,KAAKK,SAAS,CAACqc,SAAUvuB,EAAM2O,UAAUA,GAAUA,M,+BAMnD,OAAIkD,KAAK9T,MAAMwwB,SAEP,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOrN,KAAK,oBAAoBC,UAAWqM,KAC3C,kBAAC,IAAD,CAAOtM,KAAK,IAAIC,UAAWP,OAOvC,yBAAKhM,MAAM,SAAShE,MAAO,CAACS,QAAS,KAArC,kB,GA1EOe,aAoFbC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6C8b,K,SC7FxDQ,gBAAgB,CAC3BxuB,iB5CkhCW,WAAyC,IAAxCvC,EAAuC,uDAA/ByO,GAA+B,yCAAhBjQ,EAAgB,EAAhBA,KAAMyD,EAAU,EAAVA,KACzC,OAAQzD,GAEJ,IAt8BuB,4BAu8BnB,OAAOwB,EAAMgxB,MAAM,CACf5lB,cAAenJ,IAGvB,IAvhCkC,uCAwhC9B,OAAOjC,EAAMgxB,MAAM,CACfriB,aAAc1M,IAGtB,IAj9B4B,iCAk9BxB,OAAOjC,EAAMgxB,MAAM,CACf7lB,eAAgBlJ,IAGxB,IA7hCqB,0BA8hCjB,OAAOjC,EAAMgxB,MAAM,CACfxpB,aAAcvF,IAGtB,KAAKiE,GACD,OAAOlG,EAAMgxB,MAAM,CACf/hB,YAAahN,IAGrB,KAAKkE,GACD,OAAOnG,EAAMgxB,MAAM,CACf3wB,MAAO4B,IAKf,KAAKqE,GACD,OAAOtG,EAAMgxB,MAAM,CACfhhB,kBAAmB/N,GAAc,IAGzC,IA1iCgC,qCA2iC5B,OAAOjC,EAAMgxB,MAAM,CACflhB,gBAAiB,CACbC,UAAU,YAAK9N,EAAK8N,WACpBN,MAAO,CACHC,MAAOzN,EAAKwN,MAAMC,MAClBC,KAAM1N,EAAKwN,MAAME,KACjBC,WAAY3N,EAAKwN,MAAMG,eAKvC,IApjCyB,8BAqjCrB,OAAO5P,EAAMgxB,MAAM,CACf9hB,oBAAqBjN,IAG7B,KAAKsE,GACD,OAAOvG,EAAMgxB,MAAM,CACfjuB,gBAAiBd,IAGzB,IA1jCyB,8BA2jCrB,OAAOjC,EAAMgxB,MAAM,CACfluB,oBAAqBb,IAG7B,KAAKuE,GACD,OAAOxG,EAAMgxB,MAAM,CACf3hB,gBAAiBpN,IAGzB,KAAKwE,GACL,KAAKQ,GACD,OAAOjH,EAAMgxB,MAAM,CACf7hB,mBAAoBlN,IAG5B,KAAKyE,GACL,KAAKQ,GACD,OAAOlH,EAAMgxB,MAAM,CACf5hB,mBAAoBnN,IAG5B,KAAK2E,GACD,IAAIqqB,EAAS,CACT1kB,WAAY,CACRC,OAAQ,GACRE,cAAe,GACfC,aAAc,GACdP,QAASnK,EAAKoK,GACd7N,KAAMyD,EAAKzD,OAGnB,OAAOwB,EAAMgxB,MAAMC,GAEvB,KAAKtqB,GACD,OAAO3G,EAAMgxB,MAAM,CACfnhB,iBAAkB5N,GAAc,IAGxC,IAllC+B,oCAmlC3B,OAAOjC,EAAMgxB,MAAM,CACfzhB,gBAAiB,CACbC,SAAS,YAAKvN,EAAKuN,UACnBC,MAAO,CACHC,MAAOzN,EAAKwN,MAAMC,MAClBC,KAAM1N,EAAKwN,MAAME,KACjBC,WAAY3N,EAAKwN,MAAMG,eAKvC,IAzlC4B,iCA0lCxB,OAAO5P,EAAMgxB,MAAM,CACf3jB,yBAA0BpL,IAGlC,KAAK6E,GACD,OAAO9G,EAAMgxB,MAAM,CACfzgB,cAAetO,GAAc,IAGrC,IA5lC6B,kCA6lCzB,OAAOjC,EAAMgxB,MAAM,CACf3gB,YAAa,CACTC,SAAS,YAAKrO,EAAKqO,UACnBb,MAAO,CACHC,MAAOzN,EAAKwN,MAAMC,MAClBC,KAAM1N,EAAKwN,MAAME,KACjBC,WAAY3N,EAAKwN,MAAMG,eAKvC,KAAK/I,GACD,OAAO7G,EAAMgxB,MAAM,CACf7gB,iBAAkBlO,GAAc,IAGxC,IAtnC+B,oCAunC3B,OAAOjC,EAAMgxB,MAAM,CACf/gB,eAAgB,CACZC,SAAS,YAAKjO,EAAKiO,UACnBT,MAAO,CACHC,MAAOzN,EAAKwN,MAAMC,MAClBC,KAAM1N,EAAKwN,MAAME,KACjBC,WAAY3N,EAAKwN,MAAMG,eAKvC,IA5nC6B,kCA6nCzB,OAAO5P,EAAMgxB,MAAM,CACf5gB,aAAcnO,IAGtB,IA3nC8B,mCA4nC1B,OAAOjC,EAAMgxB,MAAM,CACfxgB,cAAevO,EAAKivB,WAG5B,IA1nCiC,sCA2nC7B,OAAOlxB,EAAMgxB,MAAM,CACftgB,iBAAkBzO,IAG1B,IA1nCmB,wBA2nCf,OAAOjC,EAAMgxB,MAAM,CACfvgB,eAAgBxO,IAGxB,KAAK8E,GACD,OAAO/G,EAAMgxB,MAAM,CACfhuB,kBAAmBf,IAG3B,IAhoCyB,8BAioCrB,OAAOjC,EAAMgxB,MAAM,CACfre,gBAAiB1Q,IAGzB,IA3nCsB,2BA4nClB,OAAOjC,EAAMmxB,UAAU,CACnBvgB,QAAQ,eACH3O,EAAKpF,IAAMoF,EAAKnF,SAI7B,IAnoCoB,yBAooChB,OAAOkD,EAAMmxB,UAAU,CACnBnkB,MAAM,eACD/K,EAAK+K,MAAQ/K,EAAKiL,QAI/B,KAAK7G,GACD,OAAOrG,EAAMgxB,MAAN,eAAgB/uB,IAE3B,KAAKmE,GACD,OAAOpG,EAAMgxB,MAAM,CACfpe,aAAc,CACVpU,KAAM4H,GACN0F,QAAS7J,EAAK6J,QACdC,MAAO9J,EAAK8J,SAIxB,KAAK/E,GACD,OAAOhH,EAAMgxB,MAAM,CAAC1hB,kBAAmBrN,IAE3C,IA5pC0B,+BA6pCtB,OAAOjC,EAAMgxB,MAAM,CAAC1yB,cAAe2D,IAEvC,QACI,OAAOjC,M,gB6C1uCMoxB,IAAV,SAAUA,KAAV,iEACX,OADW,SACL7iB,YAAI,CACNC,YAAKvI,MAFE,wC,WCqBTorB,G,kDACF,WAAYxd,GAAQ,IAAD,8BACf,cAAMA,IAED7T,MAAQ,CACTzB,MAAO,GACPoN,SAAU,GACV,eAAgB,GAChBnE,cAAc,EACd8pB,WAAY,GACZC,WAAW,GAGf,EAAKC,cAAgB,EAAKA,cAAczb,KAAnB,gBACrB,EAAK0b,QAAU,EAAKA,QAAQ1b,KAAb,gBAbA,E,0DAgBL9T,GACV6R,KAAKK,SAAL,eAAkBlS,M,2CAGA,IAAD,OAEjBI,EAAI,CAAC7D,KAAM,MAAOkC,IAAK,gBAAgB,GAAM,SAACL,EAAD,GAAoB,IAAXW,EAAU,EAAVA,KAC9CA,GAAwB,OAAhBA,EAAKmB,QACoB,UAA7BlD,OAAOC,SAASsX,UAChB,EAAK3C,MAAM6C,QAAQvK,KAAK,mB,iCAOZ,IAAD,OAAlB5N,EAAkB,EAAlBA,MAAOoN,EAAW,EAAXA,SACLd,EAAmBiJ,KAAKD,MAAxBhJ,gBACPiJ,KAAK0d,cAAc,CAAChqB,cAAc,EAAM8pB,WAAY,KACpDjvB,EAAI,CACA7D,KAAM,OACNkC,IAAK,aACLE,IAAK,CAAC,SAAU8a,OAAOnd,GAAQoN,cAChC,GAAM,SAACtL,EAAD,GAAoB,IAAXW,EAAU,EAAVA,KACd,GAAIA,GAAwB,OAAhBA,EAAKmB,OACbvF,YAAgB,IAAKoE,EAAKoB,SAASwJ,OAEnC,EAAKiI,MAAM6C,QAAQvK,KAAK,cACxB,EAAKqlB,cAAc,CAAChqB,cAAc,QAC/B,CACH,IAAIkqB,EAAM,oBACG,OAAT1wB,GAA+B,OAAdA,EAAKiB,OACtByvB,EAAMA,EAAM,KAAO1wB,EAAKiB,MAE5B4I,EAAgB,CAACiB,QAAS4lB,EAAK3lB,MAAO,UACtC,EAAKylB,cAAc,CAACF,WAAYI,EAAKlqB,cAAc,U,+BAKrD,IAAD,OACL,OACI,6BACI,kBAAC0b,GAAD,CAAoBrP,OAAK,IACzB,yBAAKwB,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAK2E,IAAK2X,EAAQ,KAAqCtc,UAAU,qBACjE,uBAAGA,UAAU,wBAAb,WACA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eAAf,UAGA,yBACIA,UAAavB,KAAK9T,MAAMzB,MAAiC,gBAAxB,uBACjC,2BACI8W,UAAavB,KAAK9T,MAAMzB,MAAuD,oBAA9C,4CACjCsU,MAAO,CAACkH,MAAO9a,OAAOwW,WAAa,IAAM,OAAS,OAClD3Y,MAAOgX,KAAK9T,MAAMzB,MAAOC,KAAK,SAC9Bsc,SAAU,SAACjD,GAAD,OAAO,EAAK1D,SAAS,CAAC5V,MAAOsZ,EAAEqB,OAAOpc,aAG5D,yBAAKuY,UAAU,cACX,yBAAKA,UAAU,eAAf,YAGA,yBACIA,UAAavB,KAAK9T,MAAM2L,SAAoC,gBAAxB,uBACpC,2BACI0J,UAAavB,KAAK9T,MAAM2L,SAA0D,oBAA9C,4CACpCkH,MAAO,CAACkH,MAAO9a,OAAOwW,WAAa,IAAM,OAAS,OAClD3Y,MAAOgX,KAAK9T,MAAM2L,SAAUnN,KAAK,WACjCsc,SAAU,SAACjD,GAAD,OAAO,EAAK1D,SAAS,CAACxI,SAAUkM,EAAEqB,OAAOpc,aAiB/D,4BACIuY,UAAU,cACV7W,KAAK,SACL2b,UAAWrG,KAAK9T,MAAMzB,QAAUuV,KAAK9T,MAAM2L,UAAYmI,KAAK9T,MAAMwH,aAClE0O,QAAS,kBAAM,EAAKub,QAAQ,CAAClzB,MAAO,EAAKyB,MAAMzB,MAAOoN,SAAU,EAAK3L,MAAM2L,aAJ/E,gB,GAzGL0I,aA4HbC,GAAkB,eACjBC,IAGQC,eAAWC,aARF,SAACzU,EAAO6T,GAAR,MAAmB,CACvCK,cAAelU,EAAMuC,oBAO0B+R,GAAzBG,CAA6C4c,KC3I1D3a,GAAUkb,cACjBC,GAAkBC,2BAAiBpb,IACnCqb,GAAiBC,cAEjBC,GCfS,SAAwBF,EAAgBF,EAAiBpjB,GACpE,IAAMyjB,EAAWC,aACbC,aAAgBL,EAAgBF,IAGpC,OAAOQ,aAAYC,GAAa7jB,EAAcyjB,GDUpCK,CAAeR,GAAgBF,IAE7CE,GAAeS,IAAIpB,I,IAEb5K,G,uKAGE,OACI,kBAAC,IAAD,CAAUyL,MAAOA,IACb,6BACI,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO9O,KAAM,QAASC,UAAWiO,KACjC,kBAAC,IAAD,CAAOlO,KAAM,IAAKC,UAAWmN,c,GAVzClc,aAqBpBoe,IAASpa,OAAO,kBAAC,GAAD,MAAUwB,SAAS6Y,eAAe,SlDvBnC,WACb,GAA6C,kBAAmBnzB,UAAW,CAGzE,GADkB,IAAIozB,IAAIC,GAAwB3zB,OAAOC,UAC3C2zB,SAAW5zB,OAAOC,SAAS2zB,OAIvC,OAGF5zB,OAAO+W,iBAAiB,QAAQ,WAC9B,IAAM1W,EAAK,UAAMszB,GAAN,sBAEP7zB,IAiDV,SAAiCO,GAE/BmC,MAAMnC,GACHI,MAAK,SAAA0C,GAGkB,MAApBA,EAASD,SACuD,IAAhEC,EAASvB,QAAQ2B,IAAI,gBAAgBswB,QAAQ,cAG7CvzB,UAAUC,cAAcuzB,MAAMrzB,MAAK,SAAAC,GACjCA,EAAaqzB,aAAatzB,MAAK,WAC7BT,OAAOC,SAAS+zB,eAKpB5zB,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEArEA+yB,CAAwB5zB,GAIxBC,UAAUC,cAAcuzB,MAAMrzB,MAAK,WACjCQ,QAAQC,IACN,gHAMJd,EAAgBC,OkDHxB6zB,I","file":"static/js/main.e11ed9d8.chunk.js","sourcesContent":["export const generateUIDNotMoreThan1million = () => {\r\n    return (\"0000\" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4)\r\n};\r\n\r\nexport const setLocalStorage = (key, value) => {\r\n    global.localStorage.setItem(key, value);\r\n};\r\n\r\nexport const getLocalStorage = (key) => global.localStorage.getItem(key);\r\n\r\nexport const removeToken = () => {\r\n    global.localStorage.removeItem('t');\r\n    global.localStorage.removeItem('activeBranch');\r\n};\r\n\r\nexport const getPercentValue = (val) => {\r\n    if (val === 'completed') {\r\n        return 100;\r\n    } else if (val === 'in-progress') {\r\n        return 75;\r\n    } else if (val === 'new') {\r\n        return 10;\r\n    } else {\r\n        return 0;\r\n    }\r\n\r\n};\r\n\r\nexport const getNextState = (val) => {\r\n    if (val === 'completed') {\r\n        return 0;\r\n    } else if (val === 'in-progress') {\r\n        return 100;\r\n    } else if (val === 'new') {\r\n        return 75;\r\n    } else {\r\n        return 0;\r\n    }\r\n};\r\n\r\nfunction pad2(number) {\r\n    return (number < 10 ? '0' : '') + number\r\n}\r\n\r\nexport const getDesiredTimeNow = (dateAndTime) => {\r\n    var d = new Date(dateAndTime);\r\n    var hours = d.getHours();\r\n    if (hours < 12) {\r\n        return pad2(hours) + ':' + pad2(d.getMinutes()) + ' AM';\r\n    } else {\r\n        hours = hours - 12;\r\n        return pad2(hours) + ':' + pad2(d.getMinutes()) + ' PM';\r\n    }\r\n};\r\n\r\n\r\nexport const getDesiredDateNow = (dateAndTime) => {\r\n    var d = new Date(dateAndTime);\r\n    var month = d.getMonth() + 1;\r\n    return pad2(d.getDate()) + '/' + pad2(month) + '/' + d.getFullYear();\r\n};\r\n\r\nexport const getDesiredDateTimeNow = (dateAndTime) => {\r\n    return getDesiredDateNow(dateAndTime) + ' ' + getDesiredTimeNow(dateAndTime);\r\n};\r\n\r\nexport const getStateColor = (state) => {\r\n    switch (state.toLowerCase()) {\r\n        case 'new':\r\n            return 'rgb(249, 182, 191)';\r\n            break;\r\n        case 'in-progress':\r\n            return 'orange';\r\n            break;\r\n        case 'completed':\r\n            return '#93ffcb';\r\n            break;\r\n        default:\r\n            return 'black';\r\n\r\n    }\r\n};\r\n\r\nexport const jsUcfirst = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\nexport const getBranchActionPerm = (currentBranch, empId, type, action) => {\r\n    return currentBranch.employees &&\r\n        currentBranch.employees[0] &&\r\n        currentBranch.employees[0].employee_id === empId &&\r\n        currentBranch.employees[0].perm &&\r\n        currentBranch.employees[0].perm[type][action]\r\n}","module.exports = __webpack_public_path__ + \"static/media/icon.eee5af7e.png\";","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {getLocalStorage} from './';\r\n\r\nexport const host = '';\r\n\r\nasync function bec({type = 'GET', uri: _uri, fullUrl = '', obj = {}, headers: _headers = {}}, seperate, resp) {\r\n    let method = type;\r\n    let uri = fullUrl ? fullUrl : `${host}/api/${_uri}`;\r\n    let headers = _headers;\r\n    let body = obj.toJS ? obj.toJS() : obj;\r\n\r\n    if (method === 'del') method = 'DELETE';\r\n\r\n    switch (method.toLowerCase()) {\r\n        case 'head':\r\n        case 'get':\r\n            body = undefined;\r\n            break;\r\n\r\n        case 'post':\r\n        case 'put':\r\n        case 'patch':\r\n        case 'delete':\r\n            body = JSON.stringify(body);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    method = method.toUpperCase();\r\n    headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + getLocalStorage('t'),\r\n        // 'Active-Branch': getLocalStorage('activeBranch'),\r\n        ...headers,\r\n    };\r\n\r\n\r\n    const res = await fetch(uri, {\r\n        method,\r\n        headers,\r\n        body,\r\n    });\r\n\r\n    const resBody = await res.json()\r\n        .catch(() => res.text())\r\n        .catch(() => null);\r\n\r\n    const respError = {};\r\n    if (!res.ok && !seperate) {\r\n        const error = new Error(\"some error happened\");\r\n        error.res = res;\r\n        error.body = resBody;\r\n        if (resBody.data === \"Invalid token\") {\r\n            window.location.href = '/';\r\n        } else if (resBody.data === \"jwt expired\") {\r\n            window.location.href = '/';\r\n        }\r\n        throw error;\r\n    } else if (!res.ok && seperate) {\r\n        respError.body = resBody;\r\n    }\r\n\r\n    if (resBody && resBody.status === 'error' && !seperate) {\r\n        const error = new Error(resBody.data);\r\n        error.res = res;\r\n        error.body = resBody;\r\n        if (resBody.data === \"Invalid token\") {\r\n            window.location.href = '/';\r\n        } else if (resBody.data === \"jwt expired\") {\r\n            window.location.href = '/';\r\n        }\r\n        throw error;\r\n    }\r\n\r\n    return seperate ? resp(respError, {body: resBody}) : {res, body: resBody.response};\r\n}\r\n\r\nexport default bec;","export const getPostCustomerData = ({appModuleReducer}) => appModuleReducer.get('postNewCustomerData');\r\nexport const getPostBillData = ({appModuleReducer}) => appModuleReducer.get('postNewBillData');\r\nexport const getPostProductData = ({appModuleReducer}) => appModuleReducer.get('postNewProductData');\r\nexport const getPostServiceData = ({appModuleReducer}) => appModuleReducer.get('postNewServiceData');\r\nexport const getAddNewStockToProductData = ({appModuleReducer}) => appModuleReducer.get('addNewStockToProductData');\r\nexport const getLoginCreds = ({appModuleReducer}) => appModuleReducer.get('credsDetail');\r\nexport const deleteACustomerData = ({appModuleReducer}) => appModuleReducer.get('deleteACustomerData');\r\nexport const putCustomerData = ({appModuleReducer}) => appModuleReducer.get('putCustomerData');\r\nexport const deleteABranchData = ({appModuleReducer}) => appModuleReducer.get('deleteABranchData');\r\nexport const updateHistoryFnData = ({appModuleReducer}) => appModuleReducer.get('updateHistoryFn').toJS();\r\nexport const takeSnapshotQueryData = ({appModuleReducer}) => appModuleReducer.get('takeSnapshotQuery');","import {fromJS} from 'immutable';\r\nimport moment from 'moment';\r\nimport {fork, put, call, select, takeLatest, all, takeEvery} from 'redux-saga/effects';\r\nimport bec from '../utils/bec';\r\nimport {setLocalStorage} from '../utils/index';\r\n\r\nimport * as selectors from './selectors';\r\n\r\nexport const UPDATE_USER_ACCESS_DETAILS = 'appModule/UPDATE_USER_ACCESS_DETAILS';\r\nexport const ONCLICK_LOGIN = 'appModule/ONCLICK_LOGIN';\r\nexport const LOGIN_SUCCESS = 'appModule/LOGIN_SUCCESS';\r\nexport const LOGIN_FAILS = 'appModule/LOGIN_SUCCESS';\r\nexport const LOGIN_LOADING = 'appModule/LOGIN_LOADING';\r\nexport const ADD_NOTIFICATION = 'appModule/ADD_NOTIFICATION';\r\n\r\n// Success (or) Failure\r\nexport const SUCCESS = 'appModule/SUCCESS';\r\nexport const FAILURE = 'appModule/FAILURE';\r\n\r\n// Customer\r\nexport const GET_ALL_CUSTOMER = 'appModule/GET_ALL_CUSTOMER';\r\nexport const GET_ALL_CUSTOMER_SUCCESS = 'appModule/GET_ALL_CUSTOMER_SUCCESS';\r\nexport const GET_ALL_CUSTOMER_FAILS = 'appModule/GET_ALL_CUSTOMER_FAILS';\r\nexport const POST_NEW_CUSTOMER = 'appModule/POST_NEW_CUSTOMER';\r\nexport const POST_NEW_CUSTOMER_SUCCESS = 'appModule/POST_NEW_CUSTOMER_SUCCESS';\r\nexport const POST_NEW_CUSTOMER_FAILS = 'appModule/POST_NEW_CUSTOMER_FAILS';\r\nexport const PUT_CUSTOMER = 'appModule/PUT_CUSTOMER';\r\nexport const DELETE_A_CUSTOMER = 'appModule/DELETE_A_CUSTOMER';\r\nexport const DELETE_A_CUSTOMER_SUCCESS = 'appModule/DELETE_A_CUSTOMER_SUCCESS';\r\nexport const DELETE_A_CUSTOMER_FAILS = 'appModule/DELETE_A_CUSTOMER_FAILS';\r\n\r\nexport const POST_NEW_BILL = 'appModule/POST_NEW_BILL';\r\nexport const POST_NEW_BILL_SUCCESS = 'appModule/POST_NEW_BILL_SUCCESS';\r\nexport const POST_NEW_BILL_FAILS = 'appModule/POST_NEW_BILL_FAILS';\r\nexport const POST_NEW_PRODUCT = 'appModule/POST_NEW_PRODUCT';\r\nexport const POST_NEW_PRODUCT_SUCCESS = 'appModule/POST_NEW_PRODUCT_SUCCESS';\r\nexport const POST_NEW_PRODUCT_FAILS = 'appModule/POST_NEW_PRODUCT_FAILS';\r\nexport const POST_NEW_SERVICE = 'appModule/POST_NEW_SERVICE';\r\nexport const POST_NEW_SERVICE_SUCCESS = 'appModule/POST_NEW_SERVICE_SUCCESS';\r\nexport const POST_NEW_SERVICE_FAILS = 'appModule/POST_NEW_SERVICE_FAILS';\r\nexport const GET_ALL_PRODUCT = 'appModule/GET_ALL_PRODUCT';\r\nexport const GET_BY_ID = 'appModule/GET_BY_ID';\r\nexport const GET_ALL_PRODUCT_SUCCESS = 'appModule/GET_ALL_PRODUCT_SUCCESS';\r\nexport const GET_ALL_PRODUCT_FAILS = 'appModule/GET_ALL_PRODUCT_FAILS';\r\nexport const GET_ALL_SERVICE = 'appModule/GET_ALL_SERVICE';\r\nexport const GET_ALL_SERVICE_SUCCESS = 'appModule/GET_ALL_SERVICE_SUCCESS';\r\nexport const GET_ALL_SERVICE_FAILS = 'appModule/GET_ALL_SERVICE_FAILS';\r\nexport const ADD_STOCK_TO_PRODUCT = 'appModule/ADD_STOCK_TO_PRODUCT';\r\nexport const ADD_STOCK_TO_PRODUCT_SUCCESS = 'appModule/ADD_STOCK_TO_PRODUCT_SUCCESS';\r\nexport const ADD_STOCK_TO_PRODUCT_FAILS = 'appModule/ADD_STOCK_TO_PRODUCT_FAILS';\r\nexport const GET_ALL_STOCK = 'appModule/GET_ALL_STOCK';\r\nexport const GET_ALL_STOCK_SUCCESS = 'appModule/GET_ALL_STOCK_SUCCESS';\r\nexport const GET_ALL_STOCK_FAILS = 'appModule/GET_ALL_STOCK_FAILS';\r\nexport const GET_ALL_BILLS = 'appModule/GET_ALL_BILLS';\r\nexport const GET_ALL_BILLS_SUCCESS = 'appModule/GET_ALL_BILLS_SUCCESS';\r\nexport const GET_ALL_BILLS_FAILS = 'appModule/GET_ALL_BILLS_FAILS';\r\nexport const GET_ALL_BRANCH = 'appModule/GET_ALL_BRANCH';\r\nexport const GET_ALL_BRANCH_SUCCESS = 'appModule/GET_ALL_BRANCH_SUCCESS';\r\nexport const GET_ALL_BRANCH_FAILS = 'appModule/GET_ALL_BRANCH_FAILS';\r\nexport const ADD_BRANCH = 'appModule/ADD_BRANCH';\r\nexport const ADD_BRANCH_SUCCESS = 'appModule/ADD_BRANCH_SUCCESS';\r\nexport const ADD_BRANCH_FAILS = 'appModule/ADD_BRANCH_FAILS';\r\nexport const GET_ALL_EMPLOYEES = 'appModule/GET_ALL_EMPLOYEES';\r\nexport const GET_ALL_EMPLOYEES_SUCCESS = 'appModule/GET_ALL_EMPLOYEES_SUCCESS';\r\nexport const GET_ALL_EMPLOYEES_FAILS = 'appModule/GET_ALL_EMPLOYEES_FAILS';\r\nexport const ADD_EMPLOYEE = 'appModule/ADD_EMPLOYEE';\r\nexport const ADD_EMPLOYEE_SUCCESS = 'appModule/ADD_EMPLOYEE_SUCCESS';\r\nexport const ADD_EMPLOYEE_FAILS = 'appModule/ADD_EMPLOYEE_FAILS';\r\nexport const EDIT_BRANCH = 'appModule/EDIT_BRANCH';\r\nexport const DELETE_BRANCH = 'appModule/DELETE_BRANCH';\r\nexport const DELETE_BRANCH_SUCCESS = 'appModule/DELETE_BRANCH_SUCCESS';\r\nexport const DELETE_BRANCH_FAILS = 'appModule/DELETE_BRANCH_FAILS';\r\nexport const UPDATE_HISTORY_FN = 'appModule/UPDATE_HISTORY_FN';\r\nexport const GET_ALL_ACTIVITIES = 'appModule/GET_ALL_ACTIVITIES';\r\nexport const CHECK_AUTH = 'appModule/CHECK_AUTH';\r\nexport const TAKE_SNAPSHOT = 'appModule/TAKE_SNAPSHOT';\r\nexport const UPDATE_PRODUCT = 'appModule/UPDATE_PRODUCT';\r\nexport const UPDATE_SERVICE = 'appModule/UPDATE_SERVICE';\r\nexport const SET_CURRENT_BRANCH = 'appModule/SET_CURRENT_BRANCH';\r\nexport const GET_STATS = 'appModule/GET_STATS';\r\n\r\nexport const MODAL_TOGGLE = 'appModule/MODAL_TOGGLE';\r\nexport const LOADING_TOOGLE = 'appModule/LOADING_TOOGLE';\r\nexport const COMMON_ERROR_MESSAGE = 'appModule/COMMON_ERROR_MESSAGE';\r\nexport const FIRST_TIME_BOOT = 'appModule/FIRST_TIME_BOOT';\r\n\r\nexport const appModuleActions = {\r\n    updateUserAccessDetails: (data) => ({type: UPDATE_USER_ACCESS_DETAILS, data}),\r\n    onClickLogin: (data) => ({type: ONCLICK_LOGIN, data}),\r\n    loginSuccess: () => ({type: LOGIN_SUCCESS}),\r\n    loginFails: (data) => ({type: LOGIN_FAILS, data}),\r\n    loginLoading: (data) => ({type: LOGIN_LOADING, data}),\r\n\r\n    // Success (or) Failure\r\n    success: (data) => ({type: SUCCESS, data}),\r\n    failure: (data) => ({type: FAILURE, data}),\r\n\r\n    // Customer\r\n    getAllCustomer: (data) => ({type: GET_ALL_CUSTOMER, data}),\r\n    getAllCustomerSuccess: (data) => ({type: GET_ALL_CUSTOMER_SUCCESS, data}),\r\n    getAllCustomerFails: (data) => ({type: GET_ALL_CUSTOMER_FAILS, data}),\r\n    postNewCustomer: (data) => ({type: POST_NEW_CUSTOMER, data}),\r\n    postNewCustomerSuccess: (data) => ({type: POST_NEW_CUSTOMER_SUCCESS, data}),\r\n    postNewCustomerFails: (data) => ({type: POST_NEW_CUSTOMER_FAILS, data}),\r\n    putCustomer: (data) => ({type: PUT_CUSTOMER, data}),\r\n    deleteACustomer: (data) => ({type: DELETE_A_CUSTOMER, data}),\r\n    deleteACustomerSuccess: (data) => ({type: DELETE_A_CUSTOMER_SUCCESS, data}),\r\n    deleteACustomerFails: (data) => ({type: DELETE_A_CUSTOMER_FAILS, data}),\r\n\r\n    postNewService: (data) => ({type: POST_NEW_SERVICE, data}),\r\n    postNewServiceSuccess: (data) => ({type: POST_NEW_SERVICE_SUCCESS, data}),\r\n    postNewServiceFails: (data) => ({type: POST_NEW_SERVICE_FAILS, data}),\r\n    updateService: (data) => ({type: UPDATE_SERVICE, data}),\r\n    getAllStock: (data) => ({type: GET_ALL_STOCK, data}),\r\n    getAllStockSuccess: (data) => ({type: GET_ALL_STOCK_SUCCESS, data}),\r\n    getAllStockFails: (data) => ({type: GET_ALL_STOCK_FAILS, data}),\r\n    postNewProduct: (data) => ({type: POST_NEW_PRODUCT, data}),\r\n    postNewProductSuccess: (data) => ({type: POST_NEW_PRODUCT_SUCCESS, data}),\r\n    postNewProductFails: (data) => ({type: POST_NEW_PRODUCT_FAILS, data}),\r\n    updateProduct: (data) => ({type: UPDATE_PRODUCT, data}),\r\n    getAllProduct: (data) => ({type: GET_ALL_PRODUCT, data}),\r\n    getById: (data) => ({type: GET_BY_ID, data}),\r\n    getAllProductSuccess: (data) => ({type: GET_ALL_PRODUCT_SUCCESS, data}),\r\n    getAllProductFails: (data) => ({type: GET_ALL_PRODUCT_FAILS, data}),\r\n    getAllService: (data) => ({type: GET_ALL_SERVICE, data}),\r\n    getAllServiceSuccess: (data) => ({type: GET_ALL_SERVICE_SUCCESS, data}),\r\n    getAllServiceFails: (data) => ({type: GET_ALL_SERVICE_FAILS, data}),\r\n    addStockToProduct: (data) => ({type: ADD_STOCK_TO_PRODUCT, data}),\r\n    addStockToProductSuccess: (data) => ({type: ADD_STOCK_TO_PRODUCT_SUCCESS, data}),\r\n    addStockToProductFails: (data) => ({type: ADD_STOCK_TO_PRODUCT_FAILS, data}),\r\n    postNewBill: (data) => ({type: POST_NEW_BILL, data}),\r\n    postNewBillSuccess: (data) => ({type: POST_NEW_BILL_SUCCESS, data}),\r\n    postNewBillFails: (data) => ({type: POST_NEW_BILL_FAILS, data}),\r\n    getAllBills: (data) => ({type: GET_ALL_BILLS, data}),\r\n    getAllBillsSuccess: (data) => ({type: GET_ALL_BILLS_SUCCESS, data}),\r\n    getAllBillsFails: (data) => ({type: GET_ALL_BILLS_FAILS, data}),\r\n    getAllBranch: (data) => ({type: GET_ALL_BRANCH, data}),\r\n    getAllBranchSuccess: (data) => ({type: GET_ALL_BRANCH_SUCCESS, data}),\r\n    getAllBranchFails: (data) => ({type: GET_ALL_BRANCH_FAILS, data}),\r\n    getAllEmployees: (data) => ({type: GET_ALL_EMPLOYEES, data}),\r\n    getAllEmployeesSuccess: (data) => ({type: GET_ALL_EMPLOYEES_SUCCESS, data}),\r\n    getAllEmployeesFails: (data) => ({type: GET_ALL_EMPLOYEES_FAILS, data}),\r\n    editBranch: (data) => ({type: EDIT_BRANCH, data}),\r\n    deleteBranch: (data) => ({type: DELETE_BRANCH, data}),\r\n    deleteBranchSuccess: (data) => ({type: DELETE_BRANCH_SUCCESS, data}),\r\n    deleteBranchFails: (data) => ({type: DELETE_BRANCH_FAILS, data}),\r\n    updateHistoryFun: (data) => ({type: UPDATE_HISTORY_FN, data}),\r\n    getAllActivities: (data) => ({type: GET_ALL_ACTIVITIES, data}),\r\n    checkAuth: (data) => ({type: CHECK_AUTH}),\r\n    addNotification: (data) => ({type: ADD_NOTIFICATION, data}),\r\n    takeSnapshot: (data) => ({type: TAKE_SNAPSHOT, data}),\r\n    setCurrentBranch: (data) => ({type: SET_CURRENT_BRANCH, data}),\r\n\r\n    getStats: (data) => ({type: GET_STATS, data}),\r\n\r\n    modalToggle: (data) => ({type: MODAL_TOGGLE, data}),\r\n    loadingToogle: (data) => ({type: LOADING_TOOGLE, data}),\r\n    commonErrorMsg: (data) => ({type: COMMON_ERROR_MESSAGE, data}),\r\n    firstTimeBoot: (data) => ({type: FIRST_TIME_BOOT, data}),\r\n};\r\n\r\nexport function* postLoginSaga() {\r\n    yield put(appModuleActions.loginLoading(true));\r\n    yield put(appModuleActions.loginFails(''));\r\n    const creds = yield select(selectors.getLoginCreds);\r\n    try {\r\n        const {body} = yield call(bec, {\r\n            type: 'post',\r\n            uri: 'auth/login',\r\n            obj: {\r\n                username: creds.get('username'),\r\n                password: creds.get('password')\r\n            },\r\n        });\r\n        setLocalStorage('t', body.token);\r\n        yield put(appModuleActions.loginSuccess(body));\r\n        yield put(appModuleActions.loginLoading(false));\r\n        // yield put(push('/'));\r\n        window.location.href = '/';\r\n\r\n    } catch (e) {\r\n        yield put(appModuleActions.loginFails(e.body.data));\r\n        yield put(appModuleActions.loginLoading(false));\r\n    }\r\n}\r\n\r\n\r\n// Customer\r\nexport function* getAllCustomerSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'getAllCustomerLoading', value: true}));\r\n\r\n    const query = yield select(({appModuleReducer}) => appModuleReducer.get('customerQueryPage'));\r\n    try {\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: 'customers?page=' + query,\r\n        });\r\n        yield put(appModuleActions.getAllCustomerSuccess(body));\r\n        yield put(appModuleActions.loadingToogle({key: 'getAllCustomerLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.getAllCustomerFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'getAllCustomerLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* postCustomerSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'postNewCustomerLoading', value: true}));\r\n    const customerData = yield select(selectors.getPostCustomerData);\r\n    const updateHistoryFnData = yield select(selectors.updateHistoryFnData);\r\n    try {\r\n        let fullData = {\r\n            type: 'post',\r\n            uri: 'customer',\r\n            obj: {\r\n                ...customerData.toJS()\r\n            },\r\n        };\r\n\r\n        const {body} = yield call(bec, fullData);\r\n        yield put(appModuleActions.postNewCustomerSuccess(body));\r\n        yield put(appModuleActions.getAllCustomer());\r\n        if (body.message && body._id) {\r\n            yield put(appModuleActions.addNotification({\r\n                message: `Customer ${customerData.get(\"name\")} - ${body._id} created successfully.`,\r\n                level: \"success\"\r\n            }));\r\n        }\r\n        yield put(appModuleActions.loadingToogle({key: 'postNewCustomerLoading', value: false}));\r\n        updateHistoryFnData.push('/customers');\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.postNewCustomerFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'postNewCustomerLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* putCustomerSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'putCustomerLoading', value: true}));\r\n    const customerData = yield select(selectors.putCustomerData);\r\n    const updateHistoryFnData = yield select(selectors.updateHistoryFnData);\r\n    try {\r\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('detailData'));\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const queryId = query.get(\"queryId\");\r\n        const type = query.get(\"type\");\r\n        let fullData = {\r\n            type: 'put',\r\n            uri: `customer/${currentBranch._id}/${customerData.get(\"mobileNo\")}`,\r\n            obj: {\r\n                ...customerData.toJS()\r\n            },\r\n        };\r\n\r\n        const {body} = yield call(bec, fullData);\r\n        yield put(appModuleActions.success());\r\n        // yield put(appModuleActions.getAllCustomer());\r\n        yield put(appModuleActions.getById({type, id: queryId}));\r\n        if (body.message && body._id) {\r\n            yield put(appModuleActions.addNotification({\r\n                message: `Customer ${customerData.get(\"name\")} - ${customerData.get(\"mobileNo\")} updated successfully.`,\r\n                level: \"success\"\r\n            }));\r\n        }\r\n        yield put(appModuleActions.loadingToogle({key: 'putCustomerLoading', value: false}));\r\n        // updateHistoryFnData.push('/customers');\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.failure(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'putCustomerLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* deleteACustomerSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'deleteACustomerLoading', value: true}));\r\n    const deleteACustomerData = yield select(selectors.deleteACustomerData);\r\n    const updateHistoryFnData = yield select(selectors.updateHistoryFnData);\r\n    try {\r\n        const {body} = yield call(bec, {\r\n            type: 'delete',\r\n            uri: 'customer/' + deleteACustomerData.get(\"mobile_number\"),\r\n        });\r\n        updateHistoryFnData.push('/customers');\r\n        yield put(appModuleActions.getAllCustomer());\r\n        if (body.message && body._id) {\r\n            yield put(appModuleActions.addNotification({\r\n                message: `Customer ${deleteACustomerData.get(\"full_name\")} - ${deleteACustomerData.get(\"_id\")} deleted successfully.`,\r\n                level: \"success\"\r\n            }));\r\n        }\r\n        yield put(appModuleActions.loadingToogle({key: 'deleteACustomerLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.deleteACustomerFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'deleteACustomerLoading', value: false}));\r\n    }\r\n}\r\n\r\n// Product\r\nexport function* getAllProductSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'getProductLoading', value: true}));\r\n    try {\r\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('productQueryPage'));\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: `products/${currentBranch._id}/?page=${query}`,\r\n        });\r\n        yield put(appModuleActions.getAllProductSuccess(body));\r\n        yield put(appModuleActions.loadingToogle({key: 'getProductLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.failure(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'getProductLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* getByIdSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'getByIdLoading', value: true}));\r\n    try {\r\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('detailData'));\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const queryId = query.get(\"queryId\");\r\n        const type = query.get(\"type\");\r\n        let uri = `${type}/${queryId}`;\r\n        switch (type) {\r\n            case \"product\":\r\n            case \"service\":\r\n            case \"invoice\":\r\n                uri = `${type}/${currentBranch._id}/${queryId}`;\r\n                break;\r\n            case \"branch\":\r\n                uri = `${type}/${currentBranch._id}/`;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri,\r\n        });\r\n        let successData = {};\r\n        switch (type) {\r\n            case \"product\":\r\n                successData = {\r\n                    detailData: {\r\n                        detail: body.product,\r\n                        invoicesAdded: body.invoicesAdded,\r\n                        servicesUsed: body.servicesUsed,\r\n                        queryId,\r\n                        type\r\n                    }\r\n                };\r\n                break;\r\n\r\n            case \"service\":\r\n                successData = {\r\n                    detailData: {\r\n                        detail: body.service,\r\n                        invoicesAdded: body.invoicesAdded,\r\n                        queryId,\r\n                        type\r\n                    }\r\n                };\r\n                break;\r\n\r\n            case \"invoice\":\r\n                successData = {\r\n                    detailData: {\r\n                        detail: body.invoice,\r\n                        queryId,\r\n                        type\r\n                    }\r\n                };\r\n                break;\r\n\r\n            case \"customer\":\r\n                successData = {\r\n                    detailData: {\r\n                        detail: body.customer,\r\n                        invoicesAdded: body.invoicesAdded,\r\n                        queryId,\r\n                        type\r\n                    }\r\n                };\r\n                break;\r\n\r\n            case \"branch\":\r\n                successData = {\r\n                    detailData: {\r\n                        detail: body.branch,\r\n                        type\r\n                    }\r\n                };\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        yield put(appModuleActions.success(successData));\r\n        yield put(appModuleActions.loadingToogle({key: 'getByIdLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.failure(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'getByIdLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* postProductSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: true}));\r\n    const customerData = yield select(selectors.getPostProductData);\r\n    const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n    try {\r\n        const {body} = yield call(bec, {\r\n            type: 'post',\r\n            uri: `product/${currentBranch._id}`,\r\n            obj: {\r\n                ...customerData.toJS(),\r\n            },\r\n        });\r\n\r\n        yield put(appModuleActions.modalToggle({modal: PRODUCT_ADD_MODAL, view: false}));\r\n        yield put(appModuleActions.success(body));\r\n        yield put(appModuleActions.getAllProduct());\r\n        if (body.message && body._id) {\r\n            yield put(appModuleActions.addNotification({\r\n                message: `Product ${body._id} added successfully.`,\r\n                level: \"success\"\r\n            }));\r\n        }\r\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.failure(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* updateProductSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: true}));\r\n    const productData = yield select(selectors.getPostProductData);\r\n    try {\r\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('detailData'));\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const queryId = query.get(\"queryId\");\r\n        const type = query.get(\"type\");\r\n        const {body} = yield call(bec, {\r\n            type: 'put',\r\n            uri: `product/${currentBranch._id}/${productData.get('_id')}`,\r\n            obj: {\r\n                ...productData.toJS(),\r\n            },\r\n        });\r\n        yield put(appModuleActions.modalToggle({modal: PRODUCT_EDIT_MODAL, view: false}));\r\n        yield put(appModuleActions.success(body));\r\n        yield put(appModuleActions.getById({type, id: queryId}));\r\n        if (body.message && body._id) {\r\n            yield put(appModuleActions.addNotification({\r\n                message: body.message,\r\n                level: \"success\"\r\n            }));\r\n        }\r\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.failure(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\r\n    }\r\n}\r\n\r\n\r\nexport function* getAllStockSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'getStockLoading', value: true}));\r\n    try {\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: `stock/${currentBranch._id}`,\r\n        });\r\n        yield put(appModuleActions.getAllStockSuccess(body));\r\n        yield put(appModuleActions.loadingToogle({key: 'getStockLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.getAllStockFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'getStockLoading', value: false}));\r\n    }\r\n}\r\n\r\n\r\nexport function* getAllServiceSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'getServiceLoading', value: true}));\r\n    try {\r\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('serviceQueryPage'));\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: `services/${currentBranch._id}?page=${query}`,\r\n        });\r\n        yield put(appModuleActions.getAllServiceSuccess(body));\r\n        yield put(appModuleActions.loadingToogle({key: 'getServiceLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.getAllServiceFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'getServiceLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* addStockToProductSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'addStockToProductLoading', value: true}));\r\n    const addNewStockToProductData = yield select(selectors.getAddNewStockToProductData);\r\n    try {\r\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('detailData'));\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const queryId = query.get(\"queryId\");\r\n        const type = query.get(\"type\");\r\n        const {body} = yield call(bec, {\r\n            type: 'post',\r\n            uri: `stock/${currentBranch._id}`,\r\n            obj: {\r\n                ...addNewStockToProductData.toJS(),\r\n            },\r\n        });\r\n        yield put(appModuleActions.addStockToProductSuccess(body));\r\n        yield put(appModuleActions.getById({type, id: queryId}));\r\n        if (body.message && body._id) {\r\n            yield put(appModuleActions.addNotification({\r\n                message: `Stock ${body._id} added successfully.`,\r\n                level: \"success\"\r\n            }));\r\n        }\r\n        yield put(appModuleActions.loadingToogle({key: 'addStockToProductLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.addStockToProductFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'addStockToProductLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* postServiceSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: true}));\r\n    const serviceData = yield select(selectors.getPostServiceData);\r\n    try {\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const {body} = yield call(bec, {\r\n            type: 'post',\r\n            uri: `service/${currentBranch._id}`,\r\n            obj: {\r\n                ...serviceData.toJS(),\r\n            },\r\n        });\r\n\r\n        yield put(appModuleActions.modalToggle({modal: SERVICE_ADD_MODAL, view: false}));\r\n        yield put(appModuleActions.postNewServiceSuccess(body));\r\n        yield put(appModuleActions.getAllService());\r\n        if (body.message && body._id) {\r\n            yield put(appModuleActions.addNotification({\r\n                message: `Service ${body._id} created successfully.`,\r\n                level: \"success\"\r\n            }));\r\n        }\r\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\r\n        yield put(appModuleActions.modalToggle({key: 'newProductModal', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.postNewServiceFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* updateServiceSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'updateServiceLoading', value: true}));\r\n    const serviceData = yield select(selectors.getPostServiceData);\r\n    try {\r\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('detailData'));\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const queryId = query.get(\"queryId\");\r\n        const type = query.get(\"type\");\r\n        const {body} = yield call(bec, {\r\n            type: 'put',\r\n            uri: `service/${currentBranch._id}/${serviceData.get('_id')}`,\r\n            obj: {\r\n                ...serviceData.toJS(),\r\n            },\r\n        });\r\n        yield put(appModuleActions.modalToggle({modal: SERVICE_EDIT_MODAL, view: false}));\r\n        yield put(appModuleActions.success(body));\r\n        yield put(appModuleActions.getById({type, id: queryId}));\r\n        if (body.message && body._id) {\r\n            yield put(appModuleActions.addNotification({\r\n                message: `Service ${body._id} updated successfully.`,\r\n                level: \"success\"\r\n            }));\r\n        }\r\n        yield put(appModuleActions.loadingToogle({key: 'updateServiceLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.failure(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'updateServiceLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* postBillSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'postNewBillLoading', value: true}));\r\n    const billData = yield select(selectors.getPostBillData);\r\n    const updateHistoryFnData = yield select(selectors.updateHistoryFnData);\r\n    try {\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const {body} = yield call(bec, {\r\n            type: 'post',\r\n            uri: `invoice/${currentBranch._id}`,\r\n            obj: {\r\n                ...billData.toJS(),\r\n            },\r\n        });\r\n\r\n        updateHistoryFnData.goBack();\r\n        if (body.message && body._id) {\r\n            yield put(appModuleActions.addNotification({\r\n                message: `Invoice ${body._id} created successfully.`,\r\n                level: \"success\"\r\n            }));\r\n        }\r\n        // yield put(appModuleActions.getAllBills());\r\n        yield put(appModuleActions.loadingToogle({key: 'postNewBillLoading', value: false}));\r\n        yield put(appModuleActions.modalToggle({key: 'newBillModal', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.postNewBillFails(e));\r\n        yield put(appModuleActions.loadingToogle({key: 'postNewBillLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* getAllBillsSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'getBillLoading', value: true}));\r\n    try {\r\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('billQueryPage'));\r\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: `invoices/${currentBranch._id}?page=${query}`,\r\n        });\r\n        yield put(appModuleActions.getAllBillsSuccess(body));\r\n        yield put(appModuleActions.loadingToogle({key: 'getBillLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.getAllBillsFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'getBillLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* getAllBranchSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'getAllBranchLoading', value: true}));\r\n    try {\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: 'branches',\r\n        });\r\n        yield put(appModuleActions.getAllBranchSuccess(body));\r\n        yield put(appModuleActions.loadingToogle({key: 'getAllBranchLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.getAllBranchFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'getAllBranchLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* getAllEmployeesSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'getAllEmployeesLoading', value: true}));\r\n    try {\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: 'user/employees',\r\n        });\r\n        yield put(appModuleActions.getAllEmployeesSuccess(body));\r\n        yield put(appModuleActions.loadingToogle({key: 'getAllEmployeesLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.getAllEmployeesFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'getAllEmployeesLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* deleteABranchSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'deleteABranchLoading', value: true}));\r\n    const deleteABranchData = yield select(selectors.deleteABranchData);\r\n    try {\r\n        const {body} = yield call(bec, {\r\n            type: 'delete',\r\n            uri: 'branch/' + deleteABranchData.get(\"_id\"),\r\n        });\r\n        yield put(appModuleActions.getAllBranch());\r\n        yield put(appModuleActions.addNotification({\r\n            message: `${deleteABranchData.get(\"name\")} - ${deleteABranchData.get(\"_id\")} deleted successfully.`,\r\n            level: \"success\"\r\n        }));\r\n        yield put(appModuleActions.loadingToogle({key: 'deleteABranchLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}))\r\n        yield put(appModuleActions.deleteBranchFails(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'deleteABranchLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* getAllActivitiesSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'getAllActivitiesLoading', value: true}));\r\n    try {\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: 'activity',\r\n        });\r\n        yield put(appModuleActions.success({allActivitiesData: body.activities}));\r\n        yield put(appModuleActions.loadingToogle({key: 'getAllActivitiesLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.failure(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'getAllActivitiesLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* checkAuthSaga() {\r\n    try {\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: 'auth/verify',\r\n        });\r\n\r\n        yield put(appModuleActions.updateUserAccessDetails(body));\r\n        console.log(\"user logged in\");\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: \"user logged out\", level: \"error\"}));\r\n        console.log(\"user logged out\");\r\n        try {\r\n            const updateHistoryFnData = yield select(selectors.updateHistoryFnData);\r\n            updateHistoryFnData.push('/auth');\r\n        } catch (e) {\r\n            // nothing\r\n        }\r\n    }\r\n}\r\n\r\nexport function* takeSnapshotSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'takeSnapshotLoading', value: true}));\r\n    try {\r\n        const takeSnapshotQueryData = yield select(selectors.takeSnapshotQueryData);\r\n        let query = \"\";\r\n        if (takeSnapshotQueryData === \"today\") {\r\n            let start = new Date();\r\n            start.setHours(0, 0, 0, 0);\r\n            let end = new Date();\r\n            end.setHours(23, 59, 59, 999);\r\n            query = `start=${start.toISOString()}&end=${end.toISOString()}`\r\n        } else if (takeSnapshotQueryData === \"week\") {\r\n            let start = moment().subtract(7, 'days').toDate();\r\n            let end = new Date();\r\n            end.setHours(23, 59, 59, 999);\r\n            query = `start=${start}&end=${end}`\r\n        } else if (takeSnapshotQueryData === \"month\") {\r\n            let start = moment().subtract(30, 'days').toDate();\r\n            let end = new Date();\r\n            end.setHours(23, 59, 59, 999);\r\n            query = `start=${start.toISOString()}&end=${end.toISOString()}`\r\n        } else if (takeSnapshotQueryData === \"year\") {\r\n            let start = moment().subtract(365, 'days').toDate();\r\n            let end = new Date();\r\n            end.setHours(23, 59, 59, 999);\r\n            query = `start=${start.toISOString()}&end=${end.toISOString()}`\r\n        }\r\n\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: 'snapshot?' + query,\r\n        });\r\n\r\n        yield put(appModuleActions.addNotification({\r\n            message: \"Today's snapshot has been sent to your email successfully.\",\r\n            level: \"success\"\r\n        }));\r\n        yield put(appModuleActions.loadingToogle({key: 'takeSnapshotLoading', value: false}));\r\n\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.loadingToogle({key: 'takeSnapshotLoading', value: false}));\r\n    }\r\n}\r\n\r\nexport function* getStatsSaga() {\r\n    yield put(appModuleActions.loadingToogle({key: 'getStatsLoading', value: true}));\r\n    try {\r\n        const {body} = yield call(bec, {\r\n            type: 'get',\r\n            uri: `stats/today`,\r\n        });\r\n        yield put(appModuleActions.success({stats: body.stats}));\r\n        yield put(appModuleActions.loadingToogle({key: 'getStatsLoading', value: false}));\r\n    } catch (e) {\r\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\r\n        yield put(appModuleActions.failure(e.body.data));\r\n        yield put(appModuleActions.loadingToogle({key: 'getStatsLoading', value: false}));\r\n    }\r\n}\r\n\r\nfunction* watchLoginSaga() {\r\n    yield takeLatest(ONCLICK_LOGIN, postLoginSaga)\r\n}\r\n\r\n// Customer\r\nfunction* watchGetAllCustomerSaga() {\r\n    yield takeLatest(GET_ALL_CUSTOMER, getAllCustomerSaga)\r\n}\r\n\r\nfunction* watchPostCustomerSaga() {\r\n    yield takeLatest(POST_NEW_CUSTOMER, postCustomerSaga)\r\n}\r\n\r\nfunction* watchPutCustomerSaga() {\r\n    yield takeLatest(PUT_CUSTOMER, putCustomerSaga)\r\n}\r\n\r\nfunction* watchDeleteACustomerSaga() {\r\n    yield takeLatest(DELETE_A_CUSTOMER, deleteACustomerSaga)\r\n}\r\n\r\nfunction* watchPostProductSaga() {\r\n    yield takeLatest(POST_NEW_PRODUCT, postProductSaga)\r\n}\r\n\r\nfunction* watchUpdateProductSaga() {\r\n    yield takeLatest(UPDATE_PRODUCT, updateProductSaga)\r\n}\r\n\r\nfunction* watchGetAllProductSaga() {\r\n    yield takeLatest(GET_ALL_PRODUCT, getAllProductSaga)\r\n}\r\n\r\nfunction* watchGetByIdSaga() {\r\n    yield takeEvery(GET_BY_ID, getByIdSaga)\r\n}\r\n\r\nfunction* watchAddStockToProductSaga() {\r\n    yield takeLatest(ADD_STOCK_TO_PRODUCT, addStockToProductSaga)\r\n}\r\n\r\nfunction* watchPostNewServiceSaga() {\r\n    yield takeLatest(POST_NEW_SERVICE, postServiceSaga)\r\n}\r\n\r\nfunction* watchUpdateServiceSaga() {\r\n    yield takeLatest(UPDATE_SERVICE, updateServiceSaga)\r\n}\r\n\r\nfunction* watchGetAllServiceSaga() {\r\n    yield takeLatest(GET_ALL_SERVICE, getAllServiceSaga)\r\n}\r\n\r\nfunction* watchPostBillSaga() {\r\n    yield takeLatest(POST_NEW_BILL, postBillSaga)\r\n}\r\n\r\nfunction* watchGetAllStockSaga() {\r\n    yield takeLatest(GET_ALL_STOCK, getAllStockSaga)\r\n}\r\n\r\nfunction* watchGetAllBillsSaga() {\r\n    yield takeLatest(GET_ALL_BILLS, getAllBillsSaga)\r\n}\r\n\r\nfunction* watchGetAllBranchSaga() {\r\n    yield takeLatest(GET_ALL_BRANCH, getAllBranchSaga)\r\n}\r\n\r\nfunction* watchGetAllEmployeesSaga() {\r\n    yield takeLatest(GET_ALL_EMPLOYEES, getAllEmployeesSaga)\r\n}\r\n\r\nfunction* watchDeleteABranchSaga() {\r\n    yield takeLatest(DELETE_BRANCH, deleteABranchSaga)\r\n}\r\n\r\nfunction* watchGetAllActivities() {\r\n    yield takeLatest(GET_ALL_ACTIVITIES, getAllActivitiesSaga)\r\n}\r\n\r\nfunction* watchCheckAuth() {\r\n    yield takeLatest(CHECK_AUTH, checkAuthSaga)\r\n}\r\n\r\nfunction* watchTakeSnapshot() {\r\n    yield takeLatest(TAKE_SNAPSHOT, takeSnapshotSaga)\r\n}\r\n\r\nfunction* watchGetStats() {\r\n    yield takeLatest(GET_STATS, getStatsSaga)\r\n}\r\n\r\nexport function* appModuleSaga() {\r\n    yield all([\r\n        fork(watchLoginSaga),\r\n        fork(watchGetAllCustomerSaga),\r\n        fork(watchPutCustomerSaga),\r\n        fork(watchPostCustomerSaga),\r\n        fork(watchDeleteACustomerSaga),\r\n        fork(watchPostProductSaga),\r\n        fork(watchUpdateProductSaga),\r\n        fork(watchGetAllProductSaga),\r\n        fork(watchGetByIdSaga),\r\n        fork(watchAddStockToProductSaga),\r\n        fork(watchPostNewServiceSaga),\r\n        fork(watchUpdateServiceSaga),\r\n        fork(watchGetAllServiceSaga),\r\n        fork(watchPostBillSaga),\r\n        fork(watchGetAllStockSaga),\r\n        fork(watchGetAllBillsSaga),\r\n        fork(watchGetAllBranchSaga),\r\n        fork(watchGetAllEmployeesSaga),\r\n        fork(watchDeleteABranchSaga),\r\n        fork(watchGetAllActivities),\r\n        fork(watchCheckAuth),\r\n        fork(watchTakeSnapshot),\r\n        fork(watchGetStats),\r\n    ]);\r\n}\r\n\r\nconst initialState = fromJS({\r\n    myUserAccess: {\r\n        role: '',\r\n        perm: {\r\n            bill: {\r\n                add: false,\r\n                edit: false,\r\n                view: false\r\n            },\r\n            customer: {\r\n                add: false,\r\n                edit: false,\r\n                view: false\r\n            },\r\n            items: {\r\n                add: false,\r\n                edit: false,\r\n                view: false\r\n            }\r\n        },\r\n    },\r\n    commonErrorMsg: '',\r\n    firstTimeBoot: false,\r\n    loginLoading: false,\r\n    credsDetail: {},\r\n    success: {},\r\n    error: '',\r\n    postNewCustomerData: {},\r\n    putCustomerData: {},\r\n    postNewProductData: {},\r\n    postNewServiceData: {},\r\n    postNewBillData: {},\r\n    takeSnapshotQuery: \"\",\r\n    addNewStockToProductData: {},\r\n    allProductsData: {\r\n        products: [],\r\n        count: {total: 0, page: 0, totalPages: 0},\r\n    },\r\n    productQueryPage: 0,\r\n    detailData: {\r\n        detail: {},\r\n        invoicesAdded: [],\r\n        servicesUsed: [],\r\n        queryId: \"\"\r\n    },\r\n    allCustomerData: {\r\n        customers: [],\r\n        count: {total: 0, page: 0, totalPages: 0},\r\n    },\r\n    customerQueryPage: 0,\r\n    allServiceData: {\r\n        services: [],\r\n        count: {total: 0, page: 0, totalPages: 0},\r\n    },\r\n    serviceQueryPage: 0,\r\n    allStockData: [],\r\n    allBillData: {\r\n        invoices: [],\r\n        count: {total: 0, page: 0, totalPages: 0},\r\n    },\r\n    billQueryPage: 0,\r\n    allBranchData: [],\r\n    editBranchData: {},\r\n    allEmployeesData: {\r\n        employees: [],\r\n        admins: []\r\n    },\r\n    allActivitiesData: [],\r\n    deleteACustomerData: {},\r\n    deleteABranchData: {},\r\n    stats: [],\r\n    currentBranch: {},\r\n    loading: {\r\n        postNewCustomerLoading: false,\r\n        postNewProductLoading: false,\r\n        viewProductsLoading: false,\r\n        getProductLoading: false,\r\n        addStockToProductLoading: false,\r\n        getAllCustomerLoading: false,\r\n        postNewServiceLoading: false,\r\n        getServiceLoading: false,\r\n        postNewBillLoading: false,\r\n        getStockLoading: false,\r\n        getBillLoading: false,\r\n        deleteACustomerLoading: false,\r\n        getAllBranchLoading: false,\r\n        getAllEmployeesLoading: false,\r\n        deleteABranchLoading: false,\r\n        putCustomerLoading: false,\r\n        getAllActivitiesLoading: false,\r\n        takeSnapshotLoading: false,\r\n        getByIdLoading: false,\r\n        updateServiceLoading: false,\r\n        getStatsLoading: false\r\n    },\r\n    modal: {\r\n        customerAddModal: false,\r\n        productAddModal: false,\r\n        serviceAddModal: false,\r\n        productEditModal: false,\r\n        serviceEditModal: false,\r\n        branchAddModal: false,\r\n        branchEditModal: false,\r\n        employeeAddModal: false,\r\n        viewCustomersModal: false\r\n    },\r\n    updateHistoryFn: {},\r\n    notification: {\r\n        type: \"\",\r\n        message: \"\",\r\n        level: \"\"\r\n    },\r\n});\r\n\r\nexport const CUSTOMER_ADD_MODAL = \"customerAddModal\";\r\nexport const PRODUCT_ADD_MODAL = \"productAddModal\";\r\nexport const SERVICE_ADD_MODAL = \"serviceAddModal\";\r\nexport const PRODUCT_EDIT_MODAL = \"productEditModal\";\r\nexport const SERVICE_EDIT_MODAL = \"serviceEditModal\"\r\nexport const BRANCH_ADD_MODAL = \"branchAddModal\";\r\nexport const BRANCH_EDIT_MODAL = \"branchEditModal\";\r\nexport const EMPLOYEE_ADD_MODAL = \"employeeAddModal\";\r\n\r\nexport default (state = initialState, {type, data}) => {\r\n    switch (type) {\r\n\r\n        case FIRST_TIME_BOOT:\r\n            return state.merge({\r\n                firstTimeBoot: data\r\n            });\r\n\r\n        case UPDATE_USER_ACCESS_DETAILS:\r\n            return state.merge({\r\n                myUserAccess: data\r\n            });\r\n\r\n        case COMMON_ERROR_MESSAGE:\r\n            return state.merge({\r\n                commonErrorMsg: data\r\n            });\r\n\r\n        case LOGIN_LOADING:\r\n            return state.merge({\r\n                loginLoading: data\r\n            });\r\n\r\n        case ONCLICK_LOGIN:\r\n            return state.merge({\r\n                credsDetail: data\r\n            });\r\n\r\n        case LOGIN_FAILS:\r\n            return state.merge({\r\n                error: data\r\n            });\r\n\r\n        // Customer\r\n\r\n        case GET_ALL_CUSTOMER:\r\n            return state.merge({\r\n                customerQueryPage: data ? data : 0\r\n            });\r\n\r\n        case GET_ALL_CUSTOMER_SUCCESS:\r\n            return state.merge({\r\n                allCustomerData: {\r\n                    customers: [...data.customers],\r\n                    count: {\r\n                        total: data.count.total,\r\n                        page: data.count.page,\r\n                        totalPages: data.count.totalPages\r\n                    }\r\n                }\r\n            });\r\n\r\n        case POST_NEW_CUSTOMER:\r\n            return state.merge({\r\n                postNewCustomerData: data\r\n            });\r\n\r\n        case PUT_CUSTOMER:\r\n            return state.merge({\r\n                putCustomerData: data\r\n            });\r\n\r\n        case DELETE_A_CUSTOMER:\r\n            return state.merge({\r\n                deleteACustomerData: data\r\n            });\r\n\r\n        case POST_NEW_BILL:\r\n            return state.merge({\r\n                postNewBillData: data\r\n            });\r\n\r\n        case POST_NEW_PRODUCT:\r\n        case UPDATE_PRODUCT:\r\n            return state.merge({\r\n                postNewProductData: data\r\n            });\r\n\r\n        case POST_NEW_SERVICE:\r\n        case UPDATE_SERVICE:\r\n            return state.merge({\r\n                postNewServiceData: data\r\n            });\r\n\r\n        case GET_BY_ID:\r\n            let byData = {\r\n                detailData: {\r\n                    detail: {},\r\n                    invoicesAdded: [],\r\n                    servicesUsed: [],\r\n                    queryId: data.id,\r\n                    type: data.type\r\n                }\r\n            };\r\n            return state.merge(byData);\r\n\r\n        case GET_ALL_PRODUCT:\r\n            return state.merge({\r\n                productQueryPage: data ? data : 0\r\n            });\r\n\r\n        case GET_ALL_PRODUCT_SUCCESS:\r\n            return state.merge({\r\n                allProductsData: {\r\n                    products: [...data.products],\r\n                    count: {\r\n                        total: data.count.total,\r\n                        page: data.count.page,\r\n                        totalPages: data.count.totalPages\r\n                    }\r\n                }\r\n            });\r\n\r\n        case ADD_STOCK_TO_PRODUCT:\r\n            return state.merge({\r\n                addNewStockToProductData: data\r\n            });\r\n\r\n        case GET_ALL_BILLS:\r\n            return state.merge({\r\n                billQueryPage: data ? data : 0\r\n            });\r\n\r\n        case GET_ALL_BILLS_SUCCESS:\r\n            return state.merge({\r\n                allBillData: {\r\n                    invoices: [...data.invoices],\r\n                    count: {\r\n                        total: data.count.total,\r\n                        page: data.count.page,\r\n                        totalPages: data.count.totalPages\r\n                    }\r\n                }\r\n            });\r\n\r\n        case GET_ALL_SERVICE:\r\n            return state.merge({\r\n                serviceQueryPage: data ? data : 0\r\n            });\r\n\r\n        case GET_ALL_SERVICE_SUCCESS:\r\n            return state.merge({\r\n                allServiceData: {\r\n                    services: [...data.services],\r\n                    count: {\r\n                        total: data.count.total,\r\n                        page: data.count.page,\r\n                        totalPages: data.count.totalPages\r\n                    }\r\n                }\r\n            });\r\n\r\n        case GET_ALL_STOCK_SUCCESS:\r\n            return state.merge({\r\n                allStockData: data\r\n            });\r\n\r\n        case GET_ALL_BRANCH_SUCCESS:\r\n            return state.merge({\r\n                allBranchData: data.branches\r\n            });\r\n\r\n        case GET_ALL_EMPLOYEES_SUCCESS:\r\n            return state.merge({\r\n                allEmployeesData: data\r\n            });\r\n\r\n        case EDIT_BRANCH:\r\n            return state.merge({\r\n                editBranchData: data\r\n            });\r\n\r\n        case DELETE_BRANCH:\r\n            return state.merge({\r\n                deleteABranchData: data\r\n            });\r\n\r\n        case UPDATE_HISTORY_FN:\r\n            return state.merge({\r\n                updateHistoryFn: data\r\n            });\r\n\r\n        case LOADING_TOOGLE:\r\n            return state.mergeDeep({\r\n                loading: {\r\n                    [data.key]: data.value,\r\n                }\r\n            });\r\n\r\n        case MODAL_TOGGLE:\r\n            return state.mergeDeep({\r\n                modal: {\r\n                    [data.modal]: data.view,\r\n                }\r\n            });\r\n\r\n        case SUCCESS:\r\n            return state.merge({...data});\r\n\r\n        case ADD_NOTIFICATION:\r\n            return state.merge({\r\n                notification: {\r\n                    type: ADD_NOTIFICATION,\r\n                    message: data.message,\r\n                    level: data.level,\r\n                }\r\n            });\r\n\r\n        case TAKE_SNAPSHOT:\r\n            return state.merge({takeSnapshotQuery: data});\r\n\r\n        case SET_CURRENT_BRANCH:\r\n            return state.merge({currentBranch: data})\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions} from \"../../AppModule\";\r\nimport NotificationSystem from 'react-notification-system';\r\n\r\nvar style = {\r\n    NotificationItem: {\r\n        DefaultStyle: {\r\n            margin: '10px 5px 2px 1px',\r\n            backgroundColor: 'white',\r\n            border: '1px solid #c7c7c7',\r\n            boxShadow: '0px 4px 20px 0px #c7c7c7'\r\n        },\r\n        success: {\r\n            color: 'black'\r\n        },\r\n        error: {\r\n            color: '#ed5e5e',\r\n            border: '1px solid #ed5e5e',\r\n            backgroundColor: '#ffeded',\r\n        }\r\n    },\r\n    MessageWrapper: {\r\n        DefaultStyle: {\r\n            margin: 0,\r\n            padding: 3\r\n        }\r\n    },\r\n    Dismiss: {\r\n        DefaultStyle: {\r\n            backgroundColor: '#000000',\r\n            color: '#ffffff',\r\n            top: '6px',\r\n            right: '8px',\r\n        },\r\n        success: {\r\n            backgroundColor: '#000000',\r\n            color: '#ffffff',\r\n        },\r\n        error: {\r\n            backgroundColor: '#ed5e5e',\r\n            color: 'white',\r\n        },\r\n        warning: {\r\n            backgroundColor: '#000000',\r\n            color: '#ffffff',\r\n        },\r\n        info: {\r\n            backgroundColor: '#000000',\r\n            color: '#ffffff',\r\n        }\r\n    },\r\n}\r\n\r\nclass NotificationContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: \"\",\r\n            level: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.notificationSystem = this.refs.notificationSystem;\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        const {notification} = newProps.appModuleData.toJS();\r\n        const {message, level} = notification;\r\n        if (message && level) {\r\n            this.notificationSystem.addNotification({message, level});\r\n            this.setState({message, level});\r\n            this.props.addNotification({message: null, level: null});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NotificationSystem ref=\"notificationSystem\" style={style}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NotificationContainer));","import React, {Component} from \"react\";\r\nimport \"./modal.css\";\r\n\r\nimport Modal from 'react-responsive-modal';\r\n\r\nclass ModalIndex extends Component {\r\n    render() {\r\n        const {open, onClose, header, content, footer, center, showCloseIcon, size} = this.props;\r\n\r\n        let modalClass = {};\r\n\r\n        switch (size) {\r\n            case \"mini\":\r\n                modalClass = {modal: \"Modal-Mini\"};\r\n                break;\r\n\r\n            case \"big\":\r\n                modalClass = {modal: \"Modal-Big\"};\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                open={open}\r\n                onClose={onClose}\r\n                center={center}\r\n                showCloseIcon={showCloseIcon}\r\n                classNames={modalClass}\r\n            >\r\n                <div className=\"ModalIndex\">\r\n                    {(header && footer) ?\r\n                        <div>\r\n                            <div className=\"Header\">\r\n                                <div>{header}</div>\r\n                            </div>\r\n                            <div className=\"Content\">\r\n                                {content}\r\n                            </div>\r\n                            <div className=\"Footer\">\r\n                                <div>{footer}</div>\r\n                            </div>\r\n                        </div>\r\n                        : <div>{content}</div>\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ModalIndex;","import React, {Component} from 'react';\r\nimport {IoIosMenu, IoMdClose, IoIosAdd, IoMdLogOut} from \"react-icons/io\";\r\n\r\nimport './vertical.css';\r\nimport Modal from \"../Modal\";\r\n\r\nclass VerticalLayout extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const leftMenuWidth = 100;\r\n        this.state = {\r\n            leftMenuWidth: leftMenuWidth,\r\n            pageWidth: window.innerWidth,\r\n            pageHeight: window.innerHeight - 52,\r\n            onSelectBranch: {},\r\n            showLeftMenu: false,\r\n        };\r\n\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n    }\r\n\r\n    handleWindowResize() {\r\n        this.setState({\r\n            pageWidth: window.innerWidth,\r\n            pageHeight: window.innerHeight - 52\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.addEventListener(\"resize\", this.handleWindowResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.handleWindowResize);\r\n    }\r\n\r\n    render() {\r\n        const {props} = this;\r\n\r\n        return (\r\n            <div className=\"app-view\">\r\n                <div className=\"app-menu\">\r\n                    <div className=\"app-name-container\">\r\n                        <div className=\"app-header-menu-icon\"\r\n                             onClick={() => this.setState({showLeftMenu: !this.state.showLeftMenu})}>\r\n                            {!this.state.showLeftMenu && <IoIosMenu size=\"32px\" color=\"white\"/>}\r\n                            {this.state.showLeftMenu && <IoMdClose size=\"32px\" color=\"white\"/>}\r\n                        </div>\r\n                        <div className=\"app-header-icon\">\r\n                            {/*<img src={require('./icon.png')}/>*/}\r\n                        </div>\r\n                        <div className=\"app-header-name\">\r\n                            {props.pageHeader.appName}\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className=\"app-left-menu-items view-active\"\r\n                        style={{display: (this.state.pageWidth > 800) ? 'block' : 'none'}}>\r\n                        <div className=\"app-actions\">\r\n                            {props.pageHeader.actions && props.pageHeader.actions.map((actionItem, key) => {\r\n                                return (\r\n                                    <div\r\n                                        key={key}\r\n                                        className={`app-action ${this.props.location.pathname === actionItem.link && \"app-action-active\"}`}\r\n                                        onClick={() => {\r\n                                            this.setState({showLeftMenu: false});\r\n                                            this.props.history.push(actionItem.link);\r\n                                        }}\r\n                                    >\r\n                                        {actionItem.icon}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className={props.pageHeader.isBranch ? \"app-left-menu-group\" : \"\"}>\r\n                            {props.pageHeader.isBranch &&\r\n                            <div className=\"app-left-menu-branchName\" align=\"center\">\r\n                                {props.pageHeader.branchName}\r\n                            </div>}\r\n                            <div className={props.pageHeader.isBranch ? \"app-left-menu-group-list\" : \"\"}>\r\n                                {props.pageHeader.leftMenu.map((menu, key) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={key}\r\n                                            className={`app-left-menu-list ${this.props.location.pathname.includes(menu.link) && \"app-left-menu-list-active\"}`}\r\n                                        >\r\n                                            <div className=\"app-left-menu-name\"\r\n                                                 onClick={() => {\r\n                                                     this.setState({showLeftMenu: false})\r\n                                                     this.props.history.push(menu.link);\r\n                                                 }}>\r\n                                                {menu.name}\r\n                                            </div>\r\n                                            {(menu.addLink || menu.addFunc) &&\r\n                                            <div className=\"app-left-menu-add-icon\"\r\n                                                 onClick={() => {\r\n                                                     if (menu.addFunc) {\r\n                                                         menu.addFunc();\r\n                                                     } else if (menu.addLink) {\r\n                                                         this.props.history.push(menu.addLink)\r\n                                                     }\r\n                                                 }}>\r\n                                                <IoIosAdd size=\"24px\"\r\n                                                          color={this.props.location.pathname.includes(menu.link) ? \"black\" : \"white\"}/>\r\n                                            </div>}\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {(this.state.pageWidth < 800) &&\r\n                    <Modal\r\n                        open={this.state.showLeftMenu}\r\n                        onClose={() => this.setState({showLeftMenu: false})}\r\n                        center={false}\r\n                        showCloseIcon={true}\r\n                        size=\"mini\"\r\n                        content={\r\n                            <div className=\"ModalIndex\">\r\n                                <div style={{padding: 10, marginTop: 50}}>\r\n                                    {props.pageHeader.leftMenu.map((menu, key) => {\r\n                                        return (\r\n                                            <div\r\n                                                key={key}\r\n                                                className={`app-left-menu-list ${this.props.location.pathname.includes(menu.link) && \"app-left-menu-list-active\"}`}\r\n                                            >\r\n                                                <div className=\"app-left-menu-name\"\r\n                                                     onClick={() => {\r\n                                                         this.setState({showLeftMenu: false})\r\n                                                         this.props.history.push(menu.link);\r\n                                                     }}>\r\n                                                    {menu.name}\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                    <div className=\"app-actions\">\r\n                                        {props.pageHeader.actions && props.pageHeader.actions.map((actionItem, key) => {\r\n                                            return (\r\n                                                <div\r\n                                                    key={key}\r\n                                                    className={`app-action ${this.props.location.pathname.includes(actionItem.link) && \"app-action-active\"}`}\r\n                                                    onClick={() => {\r\n                                                        this.setState({showLeftMenu: false});\r\n                                                        this.props.history.push(actionItem.link);\r\n                                                    }}\r\n                                                >\r\n                                                    {actionItem.icon}\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    />\r\n                    }\r\n                </div>\r\n                <div className=\"app-content\">\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerticalLayout;","import React, {Component} from 'react';\r\n\r\nimport './style.css';\r\n\r\nclass Tabs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tabActive: 1\r\n        };\r\n\r\n        this._getMenuItems = this._getMenuItems.bind(this);\r\n        this._getSelectedPanel = this._getSelectedPanel.bind(this);\r\n\r\n    }\r\n\r\n    setActive(index, e) {\r\n        e.preventDefault();\r\n        this.setState({tabActive: index});\r\n        if (this.props.onTabClick) {\r\n            this.props.onTabClick(index);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.activeTab) {\r\n            this.setState({tabActive: this.props.activeTab});\r\n        }\r\n    }\r\n\r\n    _getMenuItems() {\r\n        let {type} = this.props;\r\n        if (!type) {\r\n            type = \"type1\"\r\n        }\r\n        return (\r\n            <div className={`tabs-menu-${type}`} style={{display: 'flex'}}>\r\n                {\r\n                    this.props.panes.map((panel, index) => {\r\n                        return (\r\n                            <div key={index}\r\n                                 className={(this.state.tabActive - 1) === index ? \"tabs-menu-item-active\" : \"tabs-menu-item\"}\r\n                                 onClick={(e) => {\r\n                                     this.setActive(index + 1, e)\r\n                                 }}>\r\n                                {/*{panel.menuButton &&*/}\r\n                                {/*<div className={(this.state.tabActive - 1) === index ? \"tabs-menu-item-active tabs-icon\" : \"tabs-menu-item\"}*/}\r\n                                {/*    onClick={() => this.props.menuButtonClick()}>*/}\r\n                                {/*    {panel.menuButton}*/}\r\n                                {/*</div>*/}\r\n                                {/*}*/}\r\n                                <div>\r\n                                    {panel.menuItem}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _getSelectedPanel() {\r\n        var index = this.state.tabActive - 1;\r\n        var panel = this.props.panes[index];\r\n        let {type} = this.props;\r\n        if (!type) {\r\n            type = \"type1\"\r\n        }\r\n        return (\r\n            <div className={`tab-panel-${type}`}>\r\n                {panel.render}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        //var className = classNames('tabs', this.props.className);\r\n        return (\r\n            <div className={'tabs-main'}>\r\n                {this._getMenuItems()}\r\n                {this._getSelectedPanel()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tabs;","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\nimport {FormSearch} from 'grommet-icons';\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        let styles = {};\r\n        let styles2 = {};\r\n        if (this.props.style) {\r\n            styles = this.props.style;\r\n            styles2 = {width: \"90%\"};\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"search-bar-input-div\" style={{...styles}}>\r\n                    <div className=\"search-bar-split search-bar-icon\">\r\n                        <FormSearch/>\r\n                    </div>\r\n                    <div className=\"search-bar-split\" style={{...styles2}}>\r\n                        <input className=\"search-bar-input\" placeholder={this.props.placeholder} onChange={this.props.onChange}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SearchBar;","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass Dropdown extends Component {\r\n    static defaultProps = {\r\n        list: []\r\n    };\r\n\r\n    container = React.createRef();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            labelItem: null,\r\n            typeDropdown: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.list.length > 0) {\r\n            const {label} = this.props.list[0];\r\n            let firstItem = null;\r\n            if (typeof label !== 'undefined') {\r\n                this.checkType(false);\r\n                firstItem = label;\r\n            } else {\r\n                this.checkType(true);\r\n                firstItem = this.props.list[0];\r\n            }\r\n            this.setState({\r\n                labelItem: firstItem\r\n            });\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", this.hideDropdown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.hideDropdown);\r\n    }\r\n\r\n    checkType = (value) => {\r\n        this.setState({\r\n            typeDropdown: value\r\n        });\r\n    };\r\n\r\n    showDropdown = (event) => {\r\n        this.setState({isOpen: true});\r\n    };\r\n\r\n    hideDropdown = (event) => {\r\n        if (this.container.current && !this.container.current.contains(event.target)) {\r\n            this.setState({isOpen: false});\r\n        }\r\n    };\r\n\r\n    chooseItem = (value) => {\r\n        if (this.state.labelItem !== value) {\r\n            this.setState({\r\n                labelItem: value\r\n            })\r\n        }\r\n    };\r\n\r\n    renderDataDropDown = (item, index) => {\r\n        const {onSelectOption} = this.props;\r\n        const {value, label} = {value: index, label: item};\r\n        return (\r\n            <li\r\n                key={index}\r\n                value={value}\r\n                onClick={() => onSelectOption(label.value)}\r\n            >\r\n\r\n                <a className=\"dropdown-menu-li\">{label && label.value && label.value.toLocaleUpperCase()}</a>\r\n            </li>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        const {list} = this.props;\r\n        return (\r\n            <div ref={this.container}>\r\n                <div style={{cursor: \"pointer\"}} onClick={this.showDropdown}>\r\n                    <img style={{width: 18}} src=\"https://img.icons8.com/material-outlined/96/000000/menu-2.png\"/>\r\n                </div>\r\n                <div className={`dropdown ${this.state.isOpen ? 'open' : ''}`}>\r\n                    <ul className=\"dropdown-menu\">\r\n                        {list.length > 0 ? list.map(this.renderDataDropDown) : <li><a>No Options</a></li>}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dropdown;","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass Button extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const {name, onClick, color, width, disabled, style, icon} = this.props;\r\n        if (icon) {\r\n            return icon;\r\n        }\r\n        return (\r\n            <button className=\"button-main\" disabled={disabled} style={{width, color, ...style}}\r\n                    onClick={() => onClick()}>{name.toUpperCase()}</button>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Button;","import {getLocalStorage} from './';\r\nimport {host} from './bec';\r\n\r\nasync function bec({type = 'GET', uri: _uri, fullUrl = '', obj = {}, headers: _headers = {}}, seperate, resp) {\r\n    let method = type;\r\n    let uri = fullUrl ? fullUrl : `${host}/api/${_uri}`;\r\n    let headers = _headers;\r\n    let body = obj.toJS ? obj.toJS() : obj;\r\n\r\n    if (method === 'del') method = 'DELETE';\r\n\r\n    switch (method.toLowerCase()) {\r\n        case 'head':\r\n        case 'get':\r\n            body = undefined;\r\n            break;\r\n\r\n        case 'post':\r\n        case 'put':\r\n        case 'patch':\r\n        case 'delete':\r\n            body = JSON.stringify(body);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    method = method.toUpperCase();\r\n    headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + getLocalStorage('t'),\r\n        // 'Active-Branch': getLocalStorage('activeBranch'),\r\n        ...headers,\r\n    };\r\n\r\n\r\n    const res = await fetch(uri, {\r\n        method,\r\n        headers,\r\n        body,\r\n    });\r\n\r\n    const resBody = await res.json()\r\n        .catch(() => res.text())\r\n        .catch(() => null);\r\n\r\n    if (!res.ok || res.status === 500) {\r\n        const error = new Error(resBody.data ? resBody.data : \"API Error happened\");\r\n        error.res = res;\r\n        error.body = resBody;\r\n        if (resBody.data === \"Invalid token\") {\r\n            window.location.href = '/';\r\n        } else if (resBody.data === \"jwt expired\") {\r\n            window.location.href = '/';\r\n        }\r\n        throw error;\r\n    }\r\n\r\n    if (resBody && resBody.status === 'error' && !seperate) {\r\n        const error = new Error(resBody.data);\r\n        error.res = res;\r\n        error.body = resBody;\r\n        if (resBody.data === \"Invalid token\") {\r\n            window.location.href = '/';\r\n        } else if (resBody.data === \"jwt expired\") {\r\n            window.location.href = '/';\r\n        }\r\n        throw error;\r\n    }\r\n\r\n    return {res, body: resBody.response};\r\n}\r\n\r\nexport default bec;","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport Select from 'react-select';\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nfunction isInt(n) {\r\n    return Number(n) === n && n % 1 === 0;\r\n}\r\n\r\nfunction isFloat(n) {\r\n    return Number(n) === n && n % 1 !== 0;\r\n}\r\n\r\nclass Input extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const {name, value, onValChange, type, maxLength, minLength, options, disabled, required, isMulti, loadOptions} = this.props;\r\n\r\n        let params = {};\r\n        if (type && type === \"mobile_number\") {\r\n            params.pattern = \"\\d*\";\r\n            params.maxLength = \"10\";\r\n        } if (type && type === \"user_id\") {\r\n            params.pattern = \"[0-9.]+\";\r\n            params.maxLength = \"4\";\r\n        } else if (type && type === \"number\") {\r\n            // params.pattern = \"[0-9.]+\";\r\n            if (maxLength) {\r\n                params.maxLength = maxLength;\r\n            }\r\n        }\r\n\r\n        if (type && type === \"textarea\") {\r\n            return (\r\n                <div className=\"input-main\">\r\n                    <div className=\"input-label\">\r\n                        {name}\r\n                    </div>\r\n                    <div className=\"input-content\">\r\n                        <textarea className=\"input-content-textarea\" disabled={disabled}\r\n                                  value={value ? value : \"\"} onChange={(e) => onValChange(e.target)} {...params}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (type && type === \"select\") {\r\n            const isNotValue = (required && (!value || (!isMulti && !value.value) || (isMulti && value.length === 0)));\r\n            return (\r\n                <div className=\"input-main\">\r\n                    <div className=\"input-label\">\r\n                        {name}\r\n                    </div>\r\n                    <div\r\n                        className={isNotValue ? \"input-content-error\" : \"input-content\"}>\r\n                        <div\r\n                            className={isNotValue ? \"input-content-box input-content-box-error\" : \"input-content-box\"}>\r\n                            <Select\r\n                                closeMenuOnSelect={true}\r\n                                isMulti={isMulti}\r\n                                disabled={disabled}\r\n                                value={value}\r\n                                onChange={(selectedOption) => onValChange(selectedOption)}\r\n                                options={options}\r\n                                styles={{backgroundColor: (required && !value) ? \"red\" : \"blue\"}}\r\n                                getOptionLabel={option => option.text ? option.text : option.value}\r\n                                getOptionValue={option => option.value}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (type && type === \"asyncSelect\") {\r\n            return (\r\n                <div className=\"input-main\">\r\n                    <div className=\"input-label\">\r\n                        {name}\r\n                    </div>\r\n                    <div\r\n                        className={(required && (!value || !value[0])) ? \"input-content-error\" : \"input-content\"}>\r\n                        <div\r\n                            className={(required && (!value || !value[0])) ? \"input-content-box input-content-box-multi input-content-box-error\" : \"input-content-box input-content-box-multi\"}>\r\n                            <AsyncSelect\r\n                                closeMenuOnSelect={false}\r\n                                isMulti={isMulti}\r\n                                cacheOptions\r\n                                defaultOptions\r\n                                loadOptions={loadOptions}\r\n                                disabled={disabled}\r\n                                value={value}\r\n                                onChange={(selectedOption) => onValChange(selectedOption)}\r\n                                options={options}\r\n                                styles={{backgroundColor: (required && !value) ? \"red\" : \"blue\"}}\r\n                                getOptionLabel={option => option.text ? option.text : option.value}\r\n                                getOptionValue={option => option.value}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let isInputVal = true;\r\n        switch (type) {\r\n            case \"number\":\r\n                isInputVal = !value || !value.toString();\r\n                break;\r\n            case \"mobile_number\":\r\n                isInputVal = !value || !value.toString() || value.toString().length !== Number(params.maxLength);\r\n                break;\r\n\r\n            case \"password\":\r\n                isInputVal = !value || !value.toString() || value.toString().length < Number(minLength);\r\n                break;\r\n\r\n            default:\r\n                isInputVal = !value;\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-main\">\r\n                <div className=\"input-label\">\r\n                    {name}\r\n                </div>\r\n                <div\r\n                    className={(required && isInputVal) ? \"input-content-error\" : \"input-content\"}>\r\n                    <input\r\n                        disabled={disabled}\r\n                        className={(required && isInputVal) ? \"input-content-box input-content-box-error\" : \"input-content-box\"}\r\n                        value={value} type={type === \"number\" ? \"number\" : type}\r\n                        onChange={(e) => {\r\n                            if (type === \"number\" || type === \"mobile_number\") {\r\n                                const re = /^[0-9]+$/;\r\n                                if ((name.toLowerCase() === \"age\" && new RegExp(re).test(e.target.value))) {\r\n                                    onValChange(e.target)\r\n                                } else if (e.target.value && typeof Number(e.target.value) === \"number\") {\r\n                                    onValChange(e.target)\r\n                                }\r\n                            } else {\r\n                                onValChange(e.target)\r\n                            }\r\n                        }} {...params}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Input;","import React, {Component} from \"react\";\r\nimport Checkbox from \"react-simple-checkbox\";\r\n\r\nimport \"./style.css\";\r\nimport Dropdown from \"../DropDown\";\r\nimport Modal from '../Modal';\r\nimport Button from \"../Button\";\r\nimport api from \"../../utils/api\";\r\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\r\nimport {FcBusinessman, FcBusinesswoman} from \"react-icons/fc\";\r\nimport Input from \"../Input\";\r\n\r\nexport const options = [\r\n    {value: 'male', label: 'Male'},\r\n    {value: 'female', label: 'Female'}\r\n];\r\n\r\nconst roleOptions = [\r\n    {key: 'employee', text: 'Employee', value: 'employee'},\r\n    {key: 'admin', text: 'Admin', value: 'admin'},\r\n];\r\n\r\nclass UserLi extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showDetailModal: false,\r\n            showEditModal: false,\r\n            editCustomerData: {},\r\n            editLoading: false,\r\n            showDeleteModal: false,\r\n            deleteCustomerData: {},\r\n            editUserModal: false,\r\n            editUserData: {},\r\n            editUserPasswordModal: false,\r\n            editUserPasswordData: {},\r\n            isSuccessIndicator: false,\r\n            message: {\r\n                type: \"\",\r\n                text: \"\"\r\n            },\r\n        };\r\n\r\n        this.isAllInputOkay = this.isAllInputOkay.bind(this);\r\n        this.onSubmitEditUser = this.onSubmitEditUser.bind(this);\r\n        this.onSubmitDeleteUser = this.onSubmitDeleteUser.bind(this);\r\n    }\r\n\r\n    async onSubmitEditUser(user) {\r\n        this.setState({editLoading: true});\r\n        let obj = {};\r\n        let uri = \"user/employee/\"\r\n        if (user.newPassword) {\r\n            obj = {\r\n                'new-password': user.newPassword,\r\n                'repeat-password': user.repeatPassword\r\n            }\r\n            uri = uri + \"password/\" + this.props.user._id\r\n        } else {\r\n            obj = {\r\n                'full-name': user.full_name,\r\n                email: user.email,\r\n                gender: user.gender.value,\r\n                address: user.address,\r\n                age: user.age,\r\n                mobileNo: user.mobile_number.toString(),\r\n                role: user.role.value,\r\n            }\r\n            uri = uri + user._id\r\n        }\r\n        try {\r\n            const {body} = await api({type: \"PUT\", uri, obj});\r\n            if (!body || body.status === 'error') {\r\n                if (body.data) {\r\n                    this.props.addNotification({message: body.data, level: \"error\"});\r\n                }\r\n            } else {\r\n                this.props.getAllEmployees();\r\n                if (body.message) {\r\n                    this.props.addNotification({message: body.message, level: \"success\"});\r\n                }\r\n            }\r\n        } catch (e) {\r\n            this.props.addNotification({message: e.toString(), level: \"error\"});\r\n        }\r\n        this.setState({editLoading: false});\r\n    }\r\n\r\n    async onSubmitDeleteUser(user) {\r\n        this.setState({editLoading: true});\r\n        try {\r\n            const {body} = await api({type: \"DELETE\", uri: \"user/employee/\" + user._id});\r\n            this.setState({\r\n                editLoading: false,\r\n                isSuccessIndicator: true,\r\n                message: {type: \"success\", text: body.message}\r\n            });\r\n\r\n            this.props.getAllEmployees();\r\n            this.setState({showDeleteModal: false, editLoading: false});\r\n        } catch (e) {\r\n            this.setState({editLoading: false, showDeleteModal: false,});\r\n        }\r\n    }\r\n\r\n    isAllInputOkay() {\r\n        const {editUserData} = this.state;\r\n        return !editUserData.full_name || !editUserData.mobile_number || !editUserData.gender || !editUserData.age\r\n    }\r\n\r\n    render() {\r\n        const {user, type, onClickAction} = this.props;\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n\r\n        const customerOptions = [];\r\n\r\n        if (!user.deleted) {\r\n            switch (type) {\r\n                case \"branch\":\r\n                    customerOptions.push(\r\n                        {\r\n                            icon: \"view-detail\",\r\n                            value: \"view-detail\"\r\n                        }, {\r\n                            icon: \"edit permission\",\r\n                            value: \"edit permission\"\r\n                        }, {\r\n                            icon: \"remove from branch\",\r\n                            value: \"remove from branch\"\r\n                        }\r\n                    );\r\n                    break;\r\n                default:\r\n                    customerOptions.push(\r\n                        {\r\n                            icon: \"view-detail\",\r\n                            value: \"view-detail\"\r\n                        }, {\r\n                            icon: \"edit\",\r\n                            value: \"edit\"\r\n                        }, {\r\n                            icon: \"delete\",\r\n                            value: \"delete\"\r\n                        }\r\n                    );\r\n                    if (myUserAccess.emp_id !== user._id) {\r\n                        customerOptions.push({\r\n                            icon: \"reset password\",\r\n                            value: \"reset password\"\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"grid-customer-container\">\r\n                <div className=\"grid-customer-detail-container\" onClick={() => this.setState({showDetailModal: true})}>\r\n                    <div className=\"grid-icon\">\r\n                        {(user.gender === \"male\" ?\r\n                            <FcBusinessman className=\"list-user-icon\" size=\"32px\" color=\"black\"/> :\r\n                            <FcBusinesswoman className=\"list-user-icon\" size=\"32px\" color=\"black\"/>)}\r\n                    </div>\r\n                    <div className=\"list-name\">\r\n                        {user.full_name}\r\n                        <div>\r\n                            {user._id &&\r\n                            <div className=\"list-split list-label\">\r\n                                {user._id}\r\n                            </div>}\r\n                            {user.added_date_time && <div className=\"list-split list-label\">\r\n                                {getDesiredDateTimeNow(user.added_date_time)}\r\n                            </div>}\r\n                            {user.deleted &&\r\n                            <div className=\"list-split list-deleted\">\r\n                                Deleted\r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"customer-list-address\">\r\n                        {user.mobile_number &&\r\n                        <div>\r\n                            <img style={{width: 15}} src=\"https://img.icons8.com/carbon-copy/100/000000/phone.png\"/>\r\n                            <div>\r\n                                {user.mobile_number}\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-end\">\r\n                    <Dropdown\r\n                        list={customerOptions}\r\n                        onSelectOption={(val) => {\r\n                            if (val === \"view-detail\") {\r\n                                this.setState({showDetailModal: true});\r\n                            } else if (val === \"delete\") {\r\n                                this.setState({showDeleteModal: true});\r\n                            } else if (val === \"edit\") {\r\n                                this.setState({\r\n                                    editUserModal: true,\r\n                                    editUserData: {\r\n                                        ...user,\r\n                                        gender: options.filter((ge) => ge.value === user.gender)[0],\r\n                                        role: roleOptions.filter((ge) => ge.value === user.role)[0],\r\n                                    }\r\n                                });\r\n                            } else if (val === \"reset password\") {\r\n                                this.setState({editUserPasswordModal: true});\r\n                            } else {\r\n                                if (!!onClickAction) onClickAction(val, user);\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <Modal\r\n                    open={this.state.showDetailModal}\r\n                    center={false}\r\n                    onClose={() => this.setState({showDetailModal: false})}\r\n                    showCloseIcon={false}\r\n                    size=\"big\"\r\n                    header={\r\n                        <div>\r\n                            Employee Detail - {user.full_name}\r\n                        </div>\r\n                    }\r\n                    content={\r\n                        <div style={{padding: 10}}>\r\n                            <div className=\"Detail-View\">\r\n                                <div className=\"Detail-View-Main-Content\">\r\n                                    <div className=\"Detail-View-Main-Content-Column1\">\r\n                                        <div className=\"Detail-View-Main-Content-Name\">\r\n                                            {user.full_name}\r\n                                        </div>\r\n                                        <div className=\"Detail-View-Main-Content-Id\">\r\n                                            <img className=\"image\"\r\n                                                 src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\r\n                                            {user._id}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"Detail-View-Main-Content-Column2\">\r\n                                        <div className=\"container\">\r\n                                            <div className=\"information\">User Information:</div>\r\n                                            <div className=\"stat no-border\">\r\n                                                <div className=\"Detail-View-Main-Content-split\">\r\n                                                    <div className=\"information-heading\">Created On</div>\r\n                                                    <div className=\"information-val\">\r\n                                                        {getDesiredDateTimeNow(user.added_date_time)}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"Detail-View-Main-Content-split\">\r\n                                                    <div className=\"information-heading\">Mobile Number</div>\r\n                                                    <div className=\"information-val\">{user.mobile_number}</div>\r\n                                                </div>\r\n                                                {user.added_by &&\r\n                                                <div className=\"Detail-View-Main-Content-split\">\r\n                                                    <div className=\"information-heading\">Created by</div>\r\n                                                    <div\r\n                                                        className=\"information-val\">{user.added_by}\r\n                                                    </div>\r\n                                                </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {type === \"branch\" &&\r\n                            <div className=\"employee-permission\">\r\n                                <div className=\"employee-permission-header-name\"> User Permissions</div>\r\n                                <div className=\"employee-permission-box\">\r\n                                    {user.perm &&\r\n                                    <table className=\"content-header-table\">\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td className=\"content-header-name\">Invoice</td>\r\n                                            <td className=\"content-header-name\">Customer</td>\r\n                                            <td className=\"content-header-name\">Items</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"content-header-name\">\r\n                                                <Checkbox disabled checked={user.perm.bill.add}/> Add\r\n                                                <br/>\r\n                                                <Checkbox disabled checked={user.perm.bill.view}/> View\r\n                                                <br/>\r\n                                                <Checkbox disabled checked={user.perm.bill.edit}/> Edit\r\n                                                <br/>\r\n                                                <Checkbox disabled checked={user.perm.bill.delete}/> Delete\r\n                                                <br/>\r\n                                            </td>\r\n                                            <td className=\"content-header-name\">\r\n                                                <Checkbox disabled checked={user.perm.customer.add}/> Add <br/>\r\n                                                <Checkbox disabled checked={user.perm.customer.view}/> View <br/>\r\n                                                <Checkbox disabled checked={user.perm.customer.edit}/> Edit <br/>\r\n                                                <Checkbox disabled\r\n                                                          checked={user.perm.customer.delete}/> Delete <br/>\r\n                                            </td>\r\n                                            <td className=\"content-header-name\">\r\n                                                <Checkbox disabled checked={user.perm.items.add}/> Add <br/>\r\n                                                <Checkbox disabled checked={user.perm.items.view}/> View <br/>\r\n                                                <Checkbox disabled checked={user.perm.items.edit}/> Edit <br/>\r\n                                                <Checkbox disabled\r\n                                                          checked={user.perm.items.delete}/> Delete <br/>\r\n                                            </td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>}\r\n                                </div>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    footer={\r\n                        <div>\r\n                            <Button name=\"Close\" onClick={() => this.setState({showDetailModal: false})}/>\r\n                        </div>\r\n                    }\r\n\r\n                />\r\n\r\n                {\r\n                    this.state.editUserModal &&\r\n                    <Modal\r\n                        open={true}\r\n                        center={false}\r\n                        onClose={() => this.setState({editUserModal: false, editUserData: {}})}\r\n                        showCloseIcon={false}\r\n                        size=\"big\"\r\n                        header={\r\n                            <div>\r\n                                Edit User: <span className=\"Modal-Header-name\">{user.full_name}</span>\r\n                            </div>\r\n                        }\r\n                        content={\r\n                            <div>\r\n                                <Input name={\"Name\"}\r\n                                       value={this.state.editUserData.full_name}\r\n                                       required={true}\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editUserData: {\r\n                                                   ...this.state.editUserData,\r\n                                                   full_name: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Mobile Number\"}\r\n                                       value={this.state.editUserData.mobile_number}\r\n                                       type=\"mobile_number\"\r\n                                       maxLength=\"10\"\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editUserData: {\r\n                                                   ...this.state.editUserData,\r\n                                                   mobile_number: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Address\"}\r\n                                       value={this.state.editUserData.address}\r\n                                       type=\"textarea\"\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editUserData: {\r\n                                                   ...this.state.editUserData,\r\n                                                   address: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Email\"}\r\n                                       value={this.state.editUserData.email}\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editUserData: {\r\n                                                   ...this.state.editUserData,\r\n                                                   email: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Gender\"}\r\n                                       value={this.state.editUserData.gender}\r\n                                       type=\"select\"\r\n                                       required={true}\r\n                                       options={options}\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editUserData: {\r\n                                                   ...this.state.editUserData,\r\n                                                   gender: data\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Age\"}\r\n                                       value={this.state.editUserData.age}\r\n                                       type=\"number\"\r\n                                       maxLength=\"2\"\r\n                                       required={true}\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editUserData: {\r\n                                                   ...this.state.editUserData,\r\n                                                   age: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Role\"}\r\n                                       value={this.state.editUserData.role}\r\n                                       type=\"select\"\r\n                                       required={true}\r\n                                       options={roleOptions}\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editUserData: {\r\n                                                   ...this.state.editUserData,\r\n                                                   role: data\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                            </div>\r\n                        }\r\n                        footer={\r\n                            <div>\r\n                                <Button name=\"Submit\"\r\n                                        disabled={this.isAllInputOkay()}\r\n                                        onClick={async () => {\r\n                                            await this.onSubmitEditUser(this.state.editUserData);\r\n                                            this.setState({editUserModal: false, editUserData: {}})\r\n                                        }}/>\r\n                                <Button name=\"Close\" onClick={() => {\r\n                                    this.setState({editUserModal: false, editUserData: {}})\r\n                                }}/>\r\n                            </div>\r\n                        }\r\n                    />\r\n                }\r\n\r\n                {\r\n                    this.state.editUserPasswordModal &&\r\n                    <Modal\r\n                        open={true}\r\n                        center={false}\r\n                        onClose={() => this.setState({editUserPasswordModal: false, editUserPasswordData: {}})}\r\n                        showCloseIcon={false}\r\n                        size=\"big\"\r\n                        header={\r\n                            <div>\r\n                                Edit User Password: <span className=\"Modal-Header-name\">{user.full_name}</span>\r\n                            </div>\r\n                        }\r\n                        content={\r\n                            <div>\r\n                                <Input name={\"New Password\"}\r\n                                       value={this.state.editUserPasswordData.newPassword}\r\n                                       required={true}\r\n                                       type=\"password\"\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editUserPasswordData: {\r\n                                                   ...this.state.editUserPasswordData,\r\n                                                   newPassword: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Repeat Password\"}\r\n                                       value={this.state.editUserPasswordData.repeatPassword}\r\n                                       required={true}\r\n                                       type=\"password\"\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editUserPasswordData: {\r\n                                                   ...this.state.editUserPasswordData,\r\n                                                   repeatPassword: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                        footer={\r\n                            <div>\r\n                                <Button name=\"Submit\"\r\n                                        disabled={!this.state.editUserPasswordData.newPassword || !this.state.editUserPasswordData.repeatPassword ||\r\n                                        (this.state.editUserPasswordData.newPassword !== this.state.editUserPasswordData.repeatPassword)}\r\n                                        onClick={async () => {\r\n                                            await this.onSubmitEditUser(this.state.editUserPasswordData);\r\n                                            this.setState({editUserPasswordModal: false, editUserPasswordData: {}})\r\n                                        }}/>\r\n                                <Button name=\"Close\" onClick={() => {\r\n                                    this.setState({editUserPasswordModal: false, editUserPasswordData: {}})\r\n                                }}/>\r\n                            </div>\r\n                        }\r\n                    />\r\n                }\r\n\r\n                <Modal\r\n                    open={this.state.showDeleteModal}\r\n                    center={false}\r\n                    onClose={() => this.setState({showDeleteModal: false})}\r\n                    showCloseIcon={false}\r\n                    size=\"mini\"\r\n                    header={\r\n                        <div>\r\n                            DELETE USER:<span>{user.full_name}</span>\r\n                        </div>\r\n                    }\r\n                    content={\r\n                        <div style={{padding: 10}}>\r\n                            User will be shown in the inventory as deleted.\r\n                            You cannot revert the deletion at any point.\r\n                        </div>\r\n                    }\r\n                    footer={\r\n                        <div>\r\n                            <Button name=\"Delete\"\r\n                                    onClick={async () => {\r\n                                        await this.onSubmitDeleteUser(user);\r\n                                    }}/>\r\n                            <Button name=\"Close\" onClick={() => this.setState({showDeleteModal: false})}/>\r\n                        </div>\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default UserLi;","import React, {Component} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {appModuleActions as actions, EMPLOYEE_ADD_MODAL} from \"../../AppModule\";\r\nimport bec from \"../../utils/bec\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport Tabs from \"../../components/Tabs\";\r\nimport UserLi from \"../../components/ListView/UserLi\";\r\n\r\nimport \"./style.css\";\r\nimport Button from \"../../components/Button\";\r\n\r\nclass Employees extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            deleteModal: {},\r\n            filterField: '',\r\n            deleteEmployeeLoading: false,\r\n        };\r\n\r\n        this.deleteEmployee = this.deleteEmployee.bind(this);\r\n        this.onChangeState = this.onChangeState.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getAllEmployees();\r\n    }\r\n\r\n    onChangeState(data) {\r\n        this.setState({...data});\r\n    }\r\n\r\n    deleteEmployee(empData) {\r\n        const {onChangeState} = this;\r\n        const {history, getAllEmployees, addNotification} = this.props;\r\n        onChangeState({deleteEmployeeLoading: true});\r\n        bec({\r\n            type: 'DELETE',\r\n            uri: '/user/employee/' + empData._id\r\n        }, true, (error, {body}) => {\r\n            if (!body || body.status === 'error') {\r\n                addNotification({\r\n                    message: body.data,\r\n                    level: \"error\"\r\n                });\r\n            } else {\r\n                onChangeState({deleteEmployeeLoading: false});\r\n                getAllEmployees();\r\n                if (body.response.message) {\r\n                    addNotification({\r\n                        message: body.response.message,\r\n                        level: \"success\"\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {loading, allEmployeesData, myUserAccess} = this.props.appModuleData.toJS();\r\n\r\n        const employeesData = allEmployeesData.employees;\r\n        const allAdminData = allEmployeesData.admins;\r\n\r\n        const panes = [\r\n            {\r\n                menuItem: 'Employees',\r\n                render:\r\n                    <div style={{overflow: \"hidden\", width: \"100%\", padding: 10}}>\r\n                        {employeesData.map((user, key) => {\r\n                            return (\r\n                                <UserLi key={key} user={user} {...this.props}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n            },\r\n            {\r\n                menuItem: 'Admins',\r\n                render:\r\n                    <div style={{overflow: \"hidden\", width: \"100%\", padding: 10}}>\r\n                        {allAdminData.map((user, key) => {\r\n                            return (\r\n                                <UserLi key={key} user={user} {...this.props}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">USERS</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        <Button name=\"ADD EMPLOYEE\" onClick={() => this.props.modalToggle({\r\n                            modal: EMPLOYEE_ADD_MODAL,\r\n                            view: true\r\n                        })}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"actual-content\">\r\n                    <Tabs panes={panes} activeTab={this.state.activeTab} onTabClick={(i) => {\r\n                        this.setState({activeTab: i});\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Employees));","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport Modal from 'react-modal';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        const {loading, type, style} = this.props;\r\n        if (!loading) {\r\n            return null;\r\n        }\r\n\r\n        const Loader = (<div\r\n            className={`Loading-Modal-Content ${style === \"native\" ? \"circle-loader-native\" : \"circle-loader2\"} Loading-Modal-pane`}/>);\r\n\r\n        if (type && type === \"simple\") {\r\n            return Loader;\r\n        }\r\n        return (\r\n            <Modal\r\n                isOpen={loading}\r\n                onRequestClose={() => {\r\n                    // this.setState({showEditModal: false});\r\n                }}\r\n                className=\"Loading-Modal\"\r\n                overlayClassName=\"Loading-Overlay\"\r\n            >\r\n                {Loader}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Loading;","import React, {Component} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {appModuleActions as actions, BRANCH_ADD_MODAL, CUSTOMER_ADD_MODAL, EMPLOYEE_ADD_MODAL} from \"../../AppModule\";\r\nimport bec from \"../../utils/bec\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Input from \"../../components/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport api from \"../../utils/api\";\r\n\r\nclass AddOrEditEmployees extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: \"\",\r\n            gender: {},\r\n            mobileNo: '',\r\n            'full-name': '',\r\n            email: '',\r\n            address: '',\r\n            age: '',\r\n            role: {},\r\n            postCustomerLoading: false\r\n        };\r\n\r\n        // this.onChangePermission = this.onChangePermission.bind(this);\r\n        this.postEmployee = this.postEmployee.bind(this);\r\n        this.onChangeState = this.onChangeState.bind(this);\r\n        this.putEmployee = this.putEmployee.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.isAllInputOkay = this.isAllInputOkay.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.id) {\r\n            const empId = Number(this.props.match.params.id);\r\n            const empRole = this.props.match.params.role;\r\n            const {allEmployeesData} = this.props.appModuleData.toJS();\r\n\r\n            const emp = allEmployeesData[`${empRole}s`].filter((empl) => empl._id === empId);\r\n\r\n            if (emp.length > 0) {\r\n                this.setState({\r\n                    _id: emp[0]._id,\r\n                    gender: emp[0].gender,\r\n                    mobileNo: String(emp[0].mobile_number),\r\n                    'full-name': emp[0].full_name,\r\n                    email: emp[0].email,\r\n                    address: emp[0].address,\r\n                    role: emp[0].role,\r\n                    age: Number(emp[0].age),\r\n                    perm: emp[0].perm,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeState(data) {\r\n        this.setState({...data});\r\n    }\r\n\r\n    async postEmployee() {\r\n        const {onChangeState} = this;\r\n        const {addNotification} = this.props;\r\n        onChangeState({postCustomerLoading: true});\r\n\r\n        const obj = {\r\n            gender: this.state.gender.key,\r\n            mobileNo: this.state.mobileNo,\r\n            'full-name': this.state['full-name'],\r\n            email: this.state.email,\r\n            address: this.state.address,\r\n            age: this.state.age,\r\n            role: this.state.role.key\r\n        }\r\n\r\n        try {\r\n            const {body} = await api({type: \"POST\", uri: \"user/employee\", obj});\r\n\r\n            if (!body || body.status === 'error') {\r\n                if (body.data) {\r\n                    addNotification({\r\n                        message: body.data,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n                this.closeModal()\r\n            } else {\r\n                this.closeModal();\r\n                this.props.getAllEmployees();\r\n                if (body.message) {\r\n                    addNotification({\r\n                        message: body.message,\r\n                        level: \"success\"\r\n                    });\r\n                }\r\n            }\r\n\r\n        } catch (e) {\r\n            addNotification({\r\n                message: e.toString(),\r\n                level: \"error\"\r\n            });\r\n            onChangeState({postCustomerLoading: false});\r\n        }\r\n    }\r\n\r\n    putEmployee() {\r\n        const {onChangeState} = this;\r\n        const {history, addNotification} = this.props;\r\n        onChangeState({postCustomerLoading: true});\r\n        bec({type: 'PUT', uri: 'user/employee/' + this.state._id, obj: {...this.state}}, true, (error, {body}) => {\r\n            if (!body || body.status === 'error') {\r\n                if (body.data) {\r\n                    addNotification({\r\n                        message: body.data,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n                onChangeState({postCustomerLoading: false});\r\n            } else {\r\n                onChangeState({postCustomerLoading: false});\r\n                history.push('/employees');\r\n                if (body.response.message) {\r\n                    addNotification({\r\n                        message: body.response.message,\r\n                        level: \"success\"\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            _id: \"\",\r\n            gender: 'female',\r\n            mobileNo: '',\r\n            'full-name': '',\r\n            email: '',\r\n            address: '',\r\n            age: '',\r\n            role: {},\r\n            postCustomerLoading: false\r\n        });\r\n        this.props.modalToggle({modal: EMPLOYEE_ADD_MODAL, view: false});\r\n    }\r\n\r\n    isAllInputOkay() {\r\n        return !this.state['full-name']\r\n            || !this.state.gender || !this.state.gender.key\r\n            || (this.state.age && !this.state.age.toString())\r\n            || (this.state.mobileNo && this.state.mobileNo.length !== 10)\r\n            || !this.state.email\r\n            || !this.state.role || !this.state.role.key\r\n    }\r\n\r\n    render() {\r\n        const genderOptions = [\r\n            {key: 'female', text: 'Female', value: 'female'},\r\n            {key: 'male', text: 'Male', value: 'male'},\r\n        ];\r\n\r\n        const roleOptions = [\r\n            {key: 'employee', text: 'Employee', value: 'employee'},\r\n            {key: 'admin', text: 'Admin', value: 'admin'},\r\n        ];\r\n\r\n        return (\r\n            <Modal\r\n                open={true}\r\n                center={false}\r\n                onClose={() => this.closeModal()}\r\n                showCloseIcon={false}\r\n                size=\"big\"\r\n                header={\r\n                    <div>\r\n                        ADD EMPLOYEE\r\n                    </div>\r\n                }\r\n                content={\r\n                    <div>\r\n                        <div>\r\n                            <Input name={\"Name\"}\r\n                                   value={this.state['full-name']}\r\n                                   required={true}\r\n                                   onValChange={(data) => this.setState({'full-name': data.value})}\r\n                            />\r\n                            <Input name={\"Mobile Number\"}\r\n                                   value={this.state['mobileNo']}\r\n                                   type=\"mobile_number\"\r\n                                   maxLength=\"10\"\r\n                                   required={true}\r\n                                   onValChange={(data) => this.setState({mobileNo: data.value})}\r\n                            />\r\n                            <Input name={\"Email\"}\r\n                                   value={this.state.email}\r\n                                   required={true}\r\n                                   onValChange={(data) => this.setState({email: data.value})}\r\n                            />\r\n                            <Input name={\"Gender\"}\r\n                                   value={this.state.gender}\r\n                                   type=\"select\"\r\n                                   required={true}\r\n                                   options={genderOptions}\r\n                                   onValChange={(gender) => this.setState({gender})}\r\n                            />\r\n                            <Input name={\"Address\"}\r\n                                   value={this.state.address}\r\n                                   required={false}\r\n                                   onValChange={(data) => this.setState({address: data.value})}\r\n                            />\r\n                            <Input name={\"Age\"}\r\n                                   value={this.state.age}\r\n                                   type=\"number\"\r\n                                   maxLength=\"2\"\r\n                                   required={true}\r\n                                   onValChange={(data) => this.setState({age: Number(data.value)})}\r\n                            />\r\n                            <Input name={\"Role\"}\r\n                                   value={this.state.role}\r\n                                   type=\"select\"\r\n                                   required={true}\r\n                                   options={roleOptions}\r\n                                   onValChange={(role) => this.setState({role})}\r\n                            />\r\n                        </div>\r\n                        <Loading loading={this.state.postCustomerLoading}/>\r\n                    </div>\r\n                }\r\n                footer={\r\n                    <div>\r\n                        <Button name=\"Submit\"\r\n                                disabled={this.isAllInputOkay()}\r\n                                onClick={async () => {\r\n                                    await this.postEmployee()\r\n                                }}/>\r\n                        <Button name=\"Close\" onClick={() => this.closeModal()}/>\r\n                    </div>\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddOrEditEmployees));","import React, {Component} from \"react\";\r\n\r\nimport \"./style.css\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\r\n\r\nclass ViewActivity extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getAllActivities();\r\n    }\r\n\r\n    render() {\r\n        const {loading, allActivitiesData, myUserAccess} = this.props.appModuleData.toJS();\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-header\">\r\n                    <table className=\"content-header-table\">\r\n                        <tbody>\r\n                        <tr>\r\n                            <td className=\"content-header-name\">Activities</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"actual-content\" style={{padding: 20}}>\r\n                    <table structured>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Added By</th>\r\n                            <th>Branch</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n\r\n                        <tbody>\r\n                        {allActivitiesData.map((activity, key) => {\r\n                            return (\r\n                                <tr key={key}>\r\n                                    <td>{getDesiredDateTimeNow(activity.added_date_time)}</td>\r\n                                    <td>{activity.added_by.full_name}</td>\r\n                                    <td>{activity.branch && activity.branch.name ? activity.branch.name : \"Null\"}</td>\r\n                                    <td>{activity.description}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ViewActivity));","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\nimport {CaretNext, CaretDown} from 'grommet-icons';\r\n\r\nclass SegmentExpandable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {show: false, expandAtStart: false};\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.expandAtStart) {\r\n            this.setState({show: this.props.expandAtStart, expandAtStart: this.props.expandAtStart})\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if ((nextProps.expandAtStart !== this.state.expandAtStart)) {\r\n            this.setState({show: nextProps.expandAtStart, expandAtStart: nextProps.expandAtStart})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"invoice-expandable\">\r\n                <span className=\"invoice-expandable-header\" onClick={() => this.setState({show: !this.state.show})}>\r\n                    {this.state.show ? <CaretDown size='small'/> :\r\n                        <CaretNext size='small'/>}\r\n                    <span style={{paddingLeft: 10}}>{this.props.header}</span>\r\n                </span>\r\n                <span>\r\n                    {this.props.action}\r\n                </span>\r\n                {this.props.detail && this.props.detail}\r\n                {this.state.show &&\r\n                <div className=\"invoice-expandable-content\">\r\n                    {this.props.children}\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SegmentExpandable;","import React, {Component} from \"react\";\r\nimport './Dashboard.css';\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\nimport SegmentExpandable from \"../../components/SegmentExpandable\";\r\nimport {FiChevronsRight} from \"react-icons/fi\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeStat: [0, 1]\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getStats();\r\n    }\r\n\r\n    render() {\r\n        const {allBranchData, stats, loading} = this.props.appModuleData.toJS();\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">DASHBOARD</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        <Loading type=\"simple\" style=\"native\" loading={loading.getStatsLoading}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"actual-content\">\r\n                    <div className=\"dashboard-branch\">\r\n                        {allBranchData.filter(branch => !branch.deleted).map((branch, key) => {\r\n                            let statData = stats.filter((stat) => stat.branch === branch._id);\r\n                            if (statData.length === 0) {\r\n                                return null;\r\n                            }\r\n                            statData = statData[0];\r\n                            return (\r\n                                <div key={key} className=\"dashboard-segment\">\r\n                                    <SegmentExpandable expandAtStart={this.state.activeStat.includes(key)}\r\n                                                       header={branch.name}>\r\n                                        <div className=\"dashboard-stat-grid\">\r\n                                            <div className=\"dashboard-stat-card\">\r\n                                                <div className=\"dashboard-stat-inner\">\r\n                                                    <div className=\"dashboard-stat-heading\">Today's Invoice</div>\r\n                                                    <div className=\"dashboard-stat-value\">{statData.invoice.added}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dashboard-stat-card\">\r\n                                                <div className=\"dashboard-stat-inner\">\r\n                                                    <div className=\"dashboard-stat-heading\">Total Billed in Rs.</div>\r\n                                                    <div\r\n                                                        className=\"dashboard-stat-value\">{statData.invoice.totalInvoiceAmount}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dashboard-stat-card\">\r\n                                                <div className=\"dashboard-stat-inner\">\r\n                                                    <div className=\"dashboard-stat-heading\">Total Paid in Rs.</div>\r\n                                                    <div\r\n                                                        className=\"dashboard-stat-value\">{statData.invoice.totalPaidAmount}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dashboard-stat-card\">\r\n                                                <div className=\"dashboard-stat-inner\">\r\n                                                    <div className=\"dashboard-stat-heading\">Un Paid in Rs</div>\r\n                                                    <div\r\n                                                        className=\"dashboard-stat-value\">{statData.invoice.totalUnPaidAmount}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dashboard-stat-card dashboard-stat-clickable\"\r\n                                                 onClick={() => this.props.history.push(`/branch/${branch._id}/customers`)}>\r\n                                                <div className=\"dashboard-stat-inner\">\r\n                                                    <div className=\"dashboard-stat-heading\">Go To</div>\r\n                                                    <div\r\n                                                        className=\"dashboard-stat-value\">\r\n                                                        <FiChevronsRight size=\"28px\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </SegmentExpandable>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        {stats.length === 0 &&\r\n                        <div style={{color: \"#8c8c8c\"}} align=\"center\">\r\n                            Nothing to show\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Dashboard));","import React, {Component} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    appModuleActions as actions,\r\n    BRANCH_ADD_MODAL,\r\n    BRANCH_EDIT_MODAL,\r\n    CUSTOMER_ADD_MODAL,\r\n    EMPLOYEE_ADD_MODAL\r\n} from \"../../AppModule\";\r\nimport bec from \"../../utils/bec\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Input from \"../../components/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport api from \"../../utils/api\";\r\nimport Checkbox from \"react-simple-checkbox\";\r\n\r\nconst defaultPerm = {\r\n    bill: {\r\n        add: true,\r\n        edit: false,\r\n        delete: false,\r\n        view: true\r\n    },\r\n    customer: {\r\n        add: true,\r\n        edit: true,\r\n        delete: false,\r\n        view: true\r\n    },\r\n    items: {\r\n        add: false,\r\n        edit: false,\r\n        delete: false,\r\n        view: true\r\n    }\r\n};\r\n\r\nclass AddOrEditBranch extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            location: '',\r\n            employees: [],\r\n            mobile_number: '',\r\n            addBranchLoading: false,\r\n        };\r\n\r\n        this.checkOkayToAdd = this.checkOkayToAdd.bind(this);\r\n        this.onClickAddBranch = this.onClickAddBranch.bind(this);\r\n        this.onChangeState = this.onChangeState.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.onChangePermission = this.onChangePermission.bind(this);\r\n        this.renderEmployeesOptions = this.renderEmployeesOptions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllEmployees();\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n        const {branchData, type} = this.props;\r\n\r\n        if (type === \"edit-branch\") {\r\n            let employees = [];\r\n            branchData.employees.filter((emp) => emp.employee_id._id !== myUserAccess.emp_id).forEach((emp) => {\r\n                employees.push({\r\n                    key: emp.employee_id._id,\r\n                    value: emp.employee_id._id,\r\n                    text: `${emp.employee_id['full_name']} (${emp.employee_id.role})`,\r\n                    perm: emp.perm\r\n                });\r\n            });\r\n            this.setState({\r\n                name: branchData.name,\r\n                location: branchData.location,\r\n                mobile_number: branchData.mobile_number,\r\n                employees\r\n            })\r\n        }\r\n    }\r\n\r\n    renderEmployeesOptions(employees) {\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n        const {branchData, type} = this.props;\r\n\r\n        let empsRet = [];\r\n        employees.filter((emp) => emp._id !== myUserAccess.emp_id).forEach((emp) => {\r\n            empsRet.push({\r\n                key: emp._id,\r\n                value: emp._id,\r\n                text: `${emp.deleted ? \"[Deleted] \" : \"\"}${emp['full_name']} (${emp.role})`,\r\n                perm: defaultPerm\r\n            });\r\n        });\r\n        return empsRet;\r\n    }\r\n\r\n    onChangePermission(emp, type, action, permFlag) {\r\n        let {employees} = this.state;\r\n        const updatedEmp = employees.map((empl) => {\r\n            if (empl.key === emp.key) {\r\n                empl.perm[type][action] = permFlag;\r\n                return empl;\r\n            }\r\n            return empl;\r\n        })\r\n        this.setState({employees: updatedEmp});\r\n    }\r\n\r\n    onChangeState(data) {\r\n        this.setState({...data});\r\n    }\r\n\r\n    checkOkayToAdd() {\r\n        const {state} = this;\r\n        return !state.name || !state.location || !state.employees || (state.employees.length === 0) || !state.mobile_number\r\n    }\r\n\r\n    async onClickAddBranch() {\r\n        const {onChangeState} = this;\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n        onChangeState({addBranchLoading: true});\r\n\r\n        const obj = {\r\n            name: this.state.name,\r\n            location: this.state.location,\r\n            employees: this.state.employees.map((empl) => {\r\n                return {\r\n                    'employee_id': empl.key,\r\n                    perm: empl.perm,\r\n                }\r\n            }),\r\n            mobile_number: this.state.mobile_number,\r\n        }\r\n\r\n        // Adding admin employee\r\n        obj.employees.push({\r\n            employee_id: myUserAccess.emp_id,\r\n            perm: {\r\n                bill: {add: true, edit: true, delete: true, view: true},\r\n                customer: {add: true, edit: true, delete: true, view: true},\r\n                items: {add: true, edit: true, delete: true, view: true}\r\n            }\r\n        })\r\n\r\n        try {\r\n            const {body} = await api({\r\n                type: this.props.type === \"add-branch\" ? \"POST\" : \"PUT\",\r\n                uri: `branch/${this.props.type === \"add-branch\" ? \"\" : this.props.branchData._id}`,\r\n                obj\r\n            });\r\n            this.props.modalToggle({modal: BRANCH_ADD_MODAL, view: false});\r\n            this.props.checkAuth();\r\n            if (this.props.type === \"edit-branch\") {\r\n                this.props.getById({type: \"branch\", branchId: this.props.branchData._id});\r\n            } else {\r\n                this.props.getAllBranch();\r\n            }\r\n            this.closeModal();\r\n            this.props.addNotification({\r\n                message: body.message,\r\n                level: \"success\"\r\n            });\r\n        } catch (e) {\r\n            this.props.addNotification({\r\n                message: e.toString(),\r\n                level: \"error\"\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            name: '',\r\n            location: '',\r\n            employees: [],\r\n            mobile_number: '',\r\n            addBranchLoading: false,\r\n        });\r\n        if (this.props.type === \"edit-branch\") {\r\n            this.props.modalToggle({modal: BRANCH_EDIT_MODAL, view: false});\r\n        } else {\r\n            this.props.modalToggle({modal: BRANCH_ADD_MODAL, view: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {allEmployeesData} = this.props.appModuleData.toJS();\r\n\r\n        const allEmployeesCombined = allEmployeesData.employees.concat(allEmployeesData.admins);\r\n\r\n        return (\r\n            <Modal\r\n                open={true}\r\n                center={false}\r\n                onClose={() => this.closeModal()}\r\n                showCloseIcon={false}\r\n                size=\"big\"\r\n                header={\r\n                    <div>\r\n                        {this.props.type === \"add-branch\" ? \"ADD BRANCH\" : \"EDIT BRANCH\"}\r\n                    </div>\r\n                }\r\n                content={\r\n                    <div>\r\n                        <div>\r\n                            <Input name={\"Branch Name\"}\r\n                                   value={this.state['name']}\r\n                                   required={true}\r\n                                   onValChange={(data) => this.setState({name: data.value})}\r\n                            />\r\n                            <Input name={\"Branch Location\"}\r\n                                   value={this.state['location']}\r\n                                   required={true}\r\n                                   onValChange={(data) => this.setState({location: data.value})}\r\n                            />\r\n                            <Input name={\"Branch Mobile Number\"}\r\n                                   value={this.state.mobile_number}\r\n                                   type=\"mobile_number\"\r\n                                   maxLength=\"10\"\r\n                                   required={true}\r\n                                   onValChange={(data) => this.setState({mobile_number: Number(data.value)})}\r\n                            />\r\n                            <Input name={\"Select Employees\"}\r\n                                   value={this.state.employees}\r\n                                   type=\"select\"\r\n                                   isMulti={true}\r\n                                   required={true}\r\n                                   options={this.renderEmployeesOptions(allEmployeesCombined)}\r\n                                   onValChange={(employees) => this.setState({employees})}\r\n                            />\r\n                            {(this.props.type === \"add-branch\" && this.state.employees && this.state.employees.length > 0) &&\r\n                            <div className=\"employee-permission-box\">\r\n                                <div className=\"employee-permission-header-name\"> User Permissions</div>\r\n                                <div className=\"employee-permission-box\">\r\n                                    <table className=\"content-header-table add-employee-permission-table\">\r\n                                        <tbody>\r\n                                        <tr className=\"add-employee-permission-tr\">\r\n                                            <td className=\"content-header-name\">User</td>\r\n                                            <td className=\"content-header-name\">Invoice</td>\r\n                                            <td className=\"content-header-name\">Customer</td>\r\n                                            <td className=\"content-header-name\">Items</td>\r\n                                        </tr>\r\n                                        {this.state.employees.map((empl, key) => {\r\n                                            return (\r\n                                                <tr key={empl.key} className=\"add-employee-permission-tr\">\r\n                                                    <td className=\"content-header-name\">\r\n                                                        [{empl.key}] {empl.text}\r\n                                                    </td>\r\n                                                    <td className=\"content-header-name\">\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.bill.add}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'bill', 'add', data)}/> Add <br/>\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.bill.view}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'bill', 'view', data)}/> View <br/>\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.bill.edit}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'bill', 'edit', data)}/> Edit <br/>\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.bill.delete}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'bill', 'delete', data)}/> Delete <br/>\r\n                                                    </td>\r\n                                                    <td className=\"content-header-name\">\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.customer.add}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'customer', 'add', data)}/> Add <br/>\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.customer.view}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'customer', 'view', data)}/> View <br/>\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.customer.edit}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'customer', 'edit', data)}/> Edit <br/>\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.customer.delete}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'customer', 'delete', data)}/> Delete <br/>\r\n                                                    </td>\r\n                                                    <td className=\"content-header-name\">\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.items.add}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'items', 'add', data)}/> Add <br/>\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.items.view}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'items', 'view', data)}/> View <br/>\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.items.edit}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'items', 'edit', data)}/> Edit <br/>\r\n                                                        <Checkbox\r\n                                                            checked={empl.perm && empl.perm.items.delete}\r\n                                                            onChange={(data) => this.onChangePermission(empl, 'items', 'delete', data)}/> Delete <br/>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                        {this.props.type !== \"add-branch\" &&\r\n                        <div style={{padding: 10}} align=\"center\">\r\n                            Note: Update the employee permission using Edit-Permission\r\n                        </div>}\r\n                        <Loading loading={this.state.addBranchLoading}/>\r\n                    </div>\r\n                }\r\n                footer={\r\n                    <div>\r\n                        <Button name=\"Submit\"\r\n                                disabled={this.checkOkayToAdd()}\r\n                                onClick={async () => {\r\n                                    await this.onClickAddBranch();\r\n                                }}/>\r\n                        <Button name=\"Close\" onClick={() => this.closeModal()}/>\r\n                    </div>\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddOrEditBranch));","import React, {Component} from \"react\";\r\nimport {GoPlus} from 'react-icons/go';\r\nimport \"../ListView/style.css\";\r\n\r\nclass BranchGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {allBranchData, onClickFn, onClickAdd} = this.props;\r\n        return (\r\n            <div className=\"grid-container\">\r\n                {\r\n                    allBranchData.map((branchData, bKye) => {\r\n                        return (\r\n                            <div className={`grid-main`} key={bKye} onClick={() => onClickFn(branchData)}>\r\n                                <div className=\"branch-grid-name\">{branchData.name} {branchData.deleted && <span className=\"branch-grid-deleted\">Deleted</span>}</div>\r\n                                <div className=\"branch-grid-location\">{branchData.location}</div>\r\n                                <div className=\"branch-grid-mobile\">Mobile Number: <span\r\n                                    style={{color: \"black\"}}>{branchData.mobile_number}</span></div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {onClickAdd &&\r\n                <div className=\"grid-main grid-align-center\" onClick={() => onClickAdd()}>\r\n                    <GoPlus size={50}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default BranchGrid;","import React, {Component} from \"react\";\r\nimport './style.css';\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions, BRANCH_ADD_MODAL} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\nimport BranchGrid from \"../../components/GridView/BranchGrid\";\r\nimport Button from \"../../components/Button\";\r\n\r\nclass Branches extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getAllBranch();\r\n    }\r\n\r\n    render() {\r\n        const {allBranchData, myUserAccess} = this.props.appModuleData.toJS();\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">BRANCHES</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        {myUserAccess.role === \"admin\" &&\r\n                        <Button name={`ADD NEW BRANCH`} onClick={() => this.props.modalToggle({\r\n                            modal: BRANCH_ADD_MODAL,\r\n                            view: true\r\n                        })}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"actual-content\">\r\n                    <div className=\"dashboard-branch\">\r\n                        <div className=\"dashboard-branch-heading\">\r\n                            Branches\r\n                        </div>\r\n                        <div>\r\n                            <BranchGrid\r\n                                allBranchData={allBranchData.filter(branch => !branch.deleted)}\r\n                                onClickFn={(branchData) => {\r\n                                    this.props.setCurrentBranch(branchData);\r\n                                    this.props.history.push(`/branch/${branchData._id}/customers`);\r\n                                }}\r\n                            />\r\n                            {allBranchData.length === 0 &&\r\n                            <div style={{color: \"#8c8c8c\"}} align=\"center\">Nothing to show</div>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dashboard-branch\">\r\n                        <div className=\"dashboard-branch-heading\">\r\n                            Archived Branches\r\n                        </div>\r\n                        <div>\r\n                            <BranchGrid\r\n                                allBranchData={allBranchData.filter(branch => branch.deleted)}\r\n                                onClickFn={(branchData) => {\r\n                                    this.props.setCurrentBranch(branchData);\r\n                                    this.props.history.push(`/branch/${branchData._id}/customers`);\r\n                                }}\r\n                            />\r\n                            {allBranchData.length === 0 &&\r\n                            <div style={{color: \"#8c8c8c\"}} align=\"center\">Nothing to show</div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Branches));","import React, {Component} from \"react\";\r\n\r\nimport \"./style.css\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\nimport bec from \"../../utils/bec\";\r\nimport Input from \"../../components/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport api from \"../../utils/api\";\r\n\r\nclass ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            newPassword: '',\r\n            repeatPassword: '',\r\n            updatePassLoading: false\r\n        };\r\n\r\n        this.onClickUpdatePass = this.onClickUpdatePass.bind(this);\r\n        this.setStateChangeValues = this.setStateChangeValues.bind(this);\r\n    }\r\n\r\n    setStateChangeValues({key, value}) {\r\n        this.setState({[key]: value});\r\n    }\r\n\r\n    async onClickUpdatePass() {\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n        this.setStateChangeValues({key: \"updatePassLoading\", value: true});\r\n        try {\r\n            const {body} = await api({\r\n                type: 'PUT',\r\n                uri: `/user/employee/password/${myUserAccess[\"emp_id\"]}`,\r\n                obj: {'new-password': this.state.newPassword, 'repeat-password': this.state.repeatPassword}\r\n            });\r\n            if (!body || body.status === 'error') {\r\n                this.props.addNotification({\r\n                    message: \"Error while updating password: \" + body.data,\r\n                    level: \"error\"\r\n                })\r\n            } else {\r\n                window.location.href = '/';\r\n                this.props.addNotification({\r\n                    message: `Password successfully changed for ${window.location.search.substring(1)}`,\r\n                    level: \"success\"\r\n                })\r\n            }\r\n            this.setStateChangeValues({key: \"updatePassLoading\", value: false});\r\n        } catch (e) {\r\n            this.props.addNotification({\r\n                message: \"Error while updating password: \" + e.toString(),\r\n                level: \"error\"\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n\r\n        return (\r\n            <Modal\r\n                open={true}\r\n                center={true}\r\n                onClose={() => this.props.onChangeState({updatePasswordModal: false})}\r\n                showCloseIcon={false}\r\n                size=\"big\"\r\n                header={\r\n                    <div>\r\n                        CHANGE PASSWORD (min 8 character)\r\n                    </div>\r\n                }\r\n                content={\r\n                    <div>\r\n                        <Input name={\"New Password\"}\r\n                               value={this.state.newPassword}\r\n                               required={true}\r\n                               minLength={8}\r\n                               type=\"password\"\r\n                               onValChange={(data) => this.setStateChangeValues({\r\n                                   key: 'newPassword',\r\n                                   value: data.value\r\n                               })}\r\n                        />\r\n                        <Input name={\"Repeat Password\"}\r\n                               value={this.state.repeatPassword}\r\n                               minLength={8}\r\n                               required={true}\r\n                               type=\"password\"\r\n                               onValChange={(data) => this.setStateChangeValues({\r\n                                   key: 'repeatPassword',\r\n                                   value: data.value\r\n                               })}\r\n                        />\r\n\r\n                    </div>\r\n                }\r\n                footer={\r\n                    <div>\r\n                        <Button name=\"Update Password\"\r\n                                disabled={!this.state.newPassword ||\r\n                                !this.state.repeatPassword ||\r\n                                (this.state.newPassword.length < 8) ||\r\n                                (this.state.repeatPassword.length < 8) ||\r\n                                (this.state.newPassword !== this.state.repeatPassword)}\r\n                                onClick={() => this.onClickUpdatePass()}/>\r\n                        <Button name=\"Close\" onClick={() => this.props.onChangeState({updatePasswordModal: false})}/>\r\n                    </div>\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ChangePassword));","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\nimport Dropdown from \"../DropDown\";\r\nimport Input from \"../Input\";\r\n\r\nimport Modal from '../Modal';\r\nimport Button from \"../Button\";\r\nimport api from \"../../utils/api\";\r\nimport Loading from \"../Loading\";\r\nimport {FcBusinessman, FcBusinesswoman, FcCellPhone, FcAddressBook} from \"react-icons/fc\";\r\n\r\nexport const options = [\r\n    {value: 'male', label: 'Male'},\r\n    {value: 'female', label: 'Female'}\r\n];\r\n\r\nclass CustomerLi extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showEditModal: false,\r\n            editCustomerData: {},\r\n            editLoading: false,\r\n            showDeleteModal: false,\r\n            deleteCustomerData: {},\r\n            isSuccessIndicator: false,\r\n            message: {\r\n                type: \"\",\r\n                text: \"\"\r\n            },\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {customer, branchId} = this.props;\r\n\r\n        const customerOptions = customer.deleted ? [] : [{icon: \"delete\", value: \"delete\"}];\r\n\r\n        return (\r\n            <div\r\n                className={this.state.editLoading || this.state.isSuccessIndicator ? \"grid-customer-container gradient\" : \"grid-customer-container\"}\r\n            >\r\n                <div className=\"grid-customer-detail-container\"\r\n                     onClick={() => this.props.minimal ? this.props.onClick(customer) : this.props.history.push(`/branch/${branchId}/customer/${customer._id}`)}>\r\n                    <div className=\"grid-icon\">\r\n                        {(customer.gender === \"male\" ?\r\n                            <FcBusinessman className=\"list-user-icon\" size=\"32px\" color=\"black\"/> :\r\n                            <FcBusinesswoman className=\"list-user-icon\" size=\"32px\" color=\"black\"/>)}\r\n                    </div>\r\n                    <div className=\"list-name\">\r\n                        {customer.deleted &&\r\n                        <div className=\"customer-list-split customer-list-deleted\">\r\n                            Deleted\r\n                        </div>}\r\n                        {customer.full_name}\r\n                        <div className=\"mobile-number customer-list-mobile-number\">\r\n                            <div className=\"customer-list-split\">\r\n                                <FcCellPhone size=\"15px\" color=\"black\"/>\r\n                            </div>\r\n                            <div className=\"customer-list-split\">\r\n                                {customer.mobile_number}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {!this.props.minimal &&\r\n                    <div className=\"customer-list-age\">\r\n                        <div className=\"customer-list-age-header\">\r\n                            Age\r\n                        </div>\r\n                        <div className=\"customer-list-age-value\">\r\n                            {customer.age}\r\n                        </div>\r\n                    </div>}\r\n                    {!this.props.minimal && customer.address &&\r\n                    <div className=\"customer-list-address\">\r\n                        <FcAddressBook size=\"15px\" color=\"black\"/>\r\n                        <div className=\"customer-list-address-value\">{customer.address}</div>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CustomerLi;","import React, {Component} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {appModuleActions as actions, EMPLOYEE_ADD_MODAL} from \"../../AppModule\";\r\nimport bec from \"../../utils/bec\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport Tabs from \"../../components/Tabs\";\r\nimport UserLi from \"../../components/ListView/UserLi\";\r\n\r\nimport \"./style.css\";\r\nimport Button from \"../../components/Button\";\r\nimport ChangePassword from \"../ActionModals/ChangePassword\";\r\nimport Dropdown from \"../../components/DropDown\";\r\nimport {options} from \"../../components/ListView/CustomerLi\";\r\n\r\nclass Account extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            updatePasswordModal: false,\r\n            filterField: '',\r\n            deleteEmployeeLoading: false,\r\n        };\r\n\r\n        this.onChangeState = this.onChangeState.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getAllEmployees();\r\n    }\r\n\r\n    onChangeState(data) {\r\n        this.setState({...data});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n\r\n        const panes = [\r\n            {\r\n                menuItem: 'Update Password',\r\n                render:\r\n                    <div style={{overflow: \"hidden\", padding: 10}}>\r\n\r\n                    </div>\r\n            }\r\n        ];\r\n\r\n        const accountOptions = [{\r\n            icon: \"Change Password\",\r\n            value: \"Change Password\"\r\n        }];\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">ACCOUNT</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        <Dropdown\r\n                            list={accountOptions}\r\n                            onSelectOption={(val) => {\r\n                                if (val === \"Change Password\") {\r\n                                    this.setState({updatePasswordModal: true})\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"actual-content\">\r\n                    <div className=\"Detail-View\">\r\n                        {myUserAccess.emp_id &&\r\n                        <div className=\"Detail-View-Main-Content\">\r\n                            <div className=\"Detail-View-Main-Content-Column1\">\r\n                                <div className=\"Detail-View-Main-Content-Name\">\r\n                                    {myUserAccess.full_name} {myUserAccess.deleted &&\r\n                                <span>DELETED</span>}\r\n                                </div>\r\n                                <div className=\"Detail-View-Main-Content-Id\">\r\n                                    <img className=\"image\"\r\n                                         src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\r\n                                    {myUserAccess.emp_id}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"Detail-View-Main-Content-Column2\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"information\">Your Information:</div>\r\n                                    <div className=\"stat no-border\">\r\n                                        <div className=\"Detail-View-Main-Content-split\">\r\n                                            <div className=\"information-heading\">Name</div>\r\n                                            <div className=\"information-val\">\r\n                                                {myUserAccess.full_name}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"Detail-View-Main-Content-split\">\r\n                                            <div className=\"information-heading\">Gender</div>\r\n                                            <div className=\"information-val\">\r\n                                                {myUserAccess.gender}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"Detail-View-Main-Content-split\">\r\n                                            <div className=\"information-heading\">Mobile Number</div>\r\n                                            <div className=\"information-val\">\r\n                                                {myUserAccess.mobile_number}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"Detail-View-Main-Content-split\">\r\n                                            <div className=\"information-heading\">Age</div>\r\n                                            <div className=\"information-val\">\r\n                                                {myUserAccess.age}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"Detail-View-Main-Content-split\">\r\n                                            <div className=\"information-heading\">Role</div>\r\n                                            <div className=\"information-val\">\r\n                                                {myUserAccess.role}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n\r\n                    {this.state.updatePasswordModal && <ChangePassword onChangeState={this.onChangeState}/>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Account));","import React, {Component} from \"react\";\r\nimport {removeToken} from \"../../utils/index\";\r\n\r\n\r\nclass Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        removeToken();\r\n        window.location.href = '/';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                logging out...\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logout;","import React, {Component} from \"react\";\r\nimport {IoMdLogOut} from \"react-icons/io\";\r\nimport {RiAccountCircleLine, RiHome7Line, RiSettings3Line} from \"react-icons/ri\";\r\nimport {connect} from \"react-redux\";\r\nimport {Route, withRouter} from \"react-router-dom\";\r\n\r\nimport './Dashboard.css';\r\n\r\nimport {appModuleActions as actions, EMPLOYEE_ADD_MODAL} from \"../../AppModule\";\r\nimport NotificationSystem from \"../../components/Notification\";\r\nimport VerticalLayout from \"../../components/Layout/Vertical\";\r\nimport ViewEmployees from \"../Users/Employees\";\r\nimport AddOrEditEmployees from \"../Users/AddOrEditEmployees\";\r\nimport ActivityView from \"../ActionModals/ActivityView\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport AddOrEditBranch from \"../Branch/AddOrEditBranch\";\r\nimport Branches from \"../Branch\";\r\nimport Account from \"../Users/Account\";\r\nimport Logout from \"../Auth/Logout\";\r\n\r\nclass DashboardAll extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getAllBranch();\r\n    }\r\n\r\n    render() {\r\n        const {myUserAccess, modal} = this.props.appModuleData.toJS();\r\n        const leftMenu = [\r\n            {\r\n                name: \"Branches\",\r\n                id: \"branches\",\r\n                link: \"/branches\"\r\n            }\r\n        ];\r\n\r\n        if (myUserAccess.role === \"admin\") {\r\n            leftMenu.push({\r\n                name: \"Users\",\r\n                id: \"Users\",\r\n                link: \"/Users\",\r\n                addFunc: () => this.props.modalToggle({\r\n                    modal: EMPLOYEE_ADD_MODAL,\r\n                    view: true\r\n                })\r\n            });\r\n            leftMenu.push({\r\n                name: \"Activities\",\r\n                id: \"Activities\",\r\n                link: \"/Activities\",\r\n                addLink: null\r\n            });\r\n        }\r\n\r\n        let actions = [{\r\n            link: \"/dashboard\",\r\n            icon: <RiHome7Line size=\"24px\"/>\r\n        }, {\r\n            link: \"/account\",\r\n            icon: <RiAccountCircleLine size=\"24px\"/>\r\n        }, {\r\n            link: \"/settings\",\r\n            icon: <RiSettings3Line size=\"24px\"/>\r\n        }, {\r\n            link: \"/logout\",\r\n            icon: <IoMdLogOut size=\"24px\"/>\r\n        }];\r\n\r\n        return (\r\n            <VerticalLayout history={this.props.history} location={this.props.location} pageHeader={{\r\n                appName: `Bill1ne`,\r\n                routeLinks: [],\r\n                rightUserDetail: myUserAccess,\r\n                leftMenu,\r\n                actions,\r\n                changePasswordFn: () => this.props.history.push(\"/change-password\"),\r\n                checkAuth: this.props.checkAuth\r\n            }}>\r\n                <NotificationSystem props/>\r\n\r\n                {modal.employeeAddModal && <AddOrEditEmployees type={\"add-employee\"}/>}\r\n                {modal.branchAddModal && <AddOrEditBranch type={\"add-branch\"}/>}\r\n\r\n                <Route path=\"/dashboard\" component={Dashboard}/>\r\n                <Route path=\"/branches\" component={Branches}/>\r\n                <Route path=\"/account\" component={Account}/>\r\n                <Route path=\"/logout\" component={Logout}/>\r\n                {myUserAccess.role === \"admin\" && <Route path=\"/Users\" component={ViewEmployees}/>}\r\n                {myUserAccess.role === \"admin\" && <Route path=\"/activities\" component={ActivityView}/>}\r\n            </VerticalLayout>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardAll));","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport Loading from \"../Loading\";\r\n\r\nclass Page extends Component {\r\n    render() {\r\n        const {totalPages, currentPage, nextPage, prevPage, loading, shownContent, totalContent} = this.props;\r\n        return (\r\n            <div className=\"page-next\">\r\n                {loading &&\r\n                <div className=\"page-next-split page-next-loading\">\r\n                    <Loading type=\"simple\" style=\"native\" loading={loading}/>\r\n                </div>}\r\n                <div className=\"page-next-split page-next-arrows\" onClick={() => {\r\n                    if (currentPage > 0) {\r\n                        prevPage(currentPage - 1)\r\n                    }\r\n                }}>\r\n                    <img style={{width: 15}}\r\n                         src=\"https://img.icons8.com/material-outlined/96/000000/left.png\"/>\r\n                </div>\r\n                <div className=\"page-next-split page-next-numbers\">\r\n                    {currentPage} / {totalPages} Page\r\n                    <div className=\"page-next-numbers-subline\">\r\n                        {shownContent} / {totalContent}\r\n                    </div>\r\n                </div>\r\n                <div className=\"page-next-split page-next-arrows\" onClick={() => {\r\n                    if (currentPage < totalPages) {\r\n                        const searchParams = new URLSearchParams(this.props.location.search);\r\n                        searchParams.set(\"page\", currentPage + 1);\r\n                        this.props.history.push(`${this.props.location.pathname}?${searchParams.toString()}`);\r\n                        nextPage(currentPage + 1)\r\n                    }\r\n                }}>\r\n                    <img style={{width: 15}}\r\n                         src=\"https://img.icons8.com/material-outlined/96/000000/right.png\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Page;","import React, {Component} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport './CustomerList.css';\r\n\r\nimport {appModuleActions as actions, CUSTOMER_ADD_MODAL} from \"../../AppModule\";\r\nimport CustomerLi from \"../../components/ListView/CustomerLi\";\r\nimport Paging from \"../../components/Page\";\r\nimport Button from \"../../components/Button\";\r\nimport {getBranchActionPerm} from \"../../utils/index\";\r\n\r\nclass ViewCustomers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            deleteCustomerModal: false,\r\n            whichCustomer: {},\r\n            filterField: '',\r\n            showEditModal: false,\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const urlParams = new URLSearchParams(this.props.location.search);\r\n        this.props.getAllCustomer(urlParams.get(\"page\") ? urlParams.get(\"page\") : 0);\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n        if (myUserAccess.role === \"admin\") {\r\n            this.props.getAllBranch();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.search.substring(1) === \"delete-customer\" && !this.state.whichCustomer.full_name) {\r\n            this.props.history.push('/customers');\r\n        }\r\n\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n        if (myUserAccess.role === \"admin\" && myUserAccess.branch) {\r\n            this.setState({branch_id: {value: myUserAccess.branch._id, label: myUserAccess.branch.name}});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {allCustomerData, loading, currentBranch, myUserAccess} = this.props.appModuleData.toJS();\r\n\r\n        const filteredCustomerData = allCustomerData.customers.filter((cuData) => {\r\n            return cuData.full_name.toLowerCase().includes(this.state.filterField.toLowerCase())\r\n        });\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">CUSTOMER</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        {getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"customer\", \"add\") &&\r\n                        <Button name={`ADD CUSTOMER`}\r\n                                onClick={() => this.props.modalToggle({\r\n                                    modal: CUSTOMER_ADD_MODAL,\r\n                                    view: true\r\n                                })}/>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"actual-content\">\r\n                    {/*<StatList statData={[{heading: \"Total Customer Count\", count: allCustomerData.count.total}]}/>*/}\r\n                    <div>\r\n                        {filteredCustomerData && filteredCustomerData.map((custData, key) => {\r\n                            return (\r\n                                <CustomerLi key={key} customer={custData}\r\n                                            page={allCustomerData.count.page}\r\n                                            history={this.props.history}\r\n                                            branchId={this.props.match.params.branchId}\r\n                                            getAllCustomer={this.props.getAllCustomer}/>\r\n                            )\r\n                        })}\r\n                        {filteredCustomerData.length === 0 &&\r\n                        <div style={{color: \"#8c8c8c\"}} align=\"center\">Nothing to show</div>}\r\n                    </div>\r\n                    <div className=\"float-right\">\r\n                        <Paging\r\n                            loading={loading.getAllCustomerLoading}\r\n                            currentPage={allCustomerData.count.page}\r\n                            totalPages={allCustomerData.count.totalPages}\r\n                            shownContent={allCustomerData.customers.length}\r\n                            totalContent={allCustomerData.count.total}\r\n                            nextPage={(pg) => this.props.getAllCustomer(pg)}\r\n                            prevPage={(pg) => this.props.getAllCustomer(pg)}\r\n                            history={this.props.history}\r\n                            location={this.props.location}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ViewCustomers));","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass StatCount extends Component {\r\n    render() {\r\n        const {heading, count, size, noBorder, borderColor} = this.props;\r\n        let styles = {\r\n            main: \"content-stat-count\",\r\n            heading: \"heading\",\r\n            count: \"count\",\r\n        };\r\n\r\n        switch (size) {\r\n            case \"small\":\r\n                styles = {\r\n                    main: \"content-stat-small-count\",\r\n                    heading: \"heading\",\r\n                    count: \"count\"\r\n                };\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        if (noBorder) {\r\n            styles.main = styles.main + \" no-border\"\r\n        }\r\n\r\n        return (\r\n            <div className={styles.main} style={{borderColor}}>\r\n                {heading &&\r\n                <div className={styles.heading}>\r\n                    {heading}\r\n                </div>}\r\n                <div className={styles.count}>\r\n                    {count}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default StatCount;","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport StatCount from \"../Stats/StatCount\";\r\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\r\nimport {FcInspection} from \"react-icons/fc\";\r\n\r\nclass InvoiceLi extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {invoice, branchId} = this.props;\r\n\r\n        return (\r\n            <div className=\"grid-list-container grid-invoice\"\r\n                 onClick={() => this.props.history.push(`/branch/${branchId}/invoice/${invoice._id}`)}>\r\n                <div className=\"grid-icon\" id=\"icon\">\r\n                    <FcInspection className=\"list-user-icon\" size=\"28px\"/>\r\n                </div>\r\n                <div className=\"list-name\" id=\"name\">\r\n                    {invoice.customer.mobile_number && <span>{invoice.customer.mobile_number}</span>} {invoice.customer.full_name || invoice._id}\r\n                    <div>\r\n                        <div className=\"list-split list-label\">\r\n                            {invoice._id}\r\n                        </div>\r\n                        <div className=\"list-split list-label\">\r\n                            {getDesiredDateTimeNow(invoice.added_date_time)}\r\n                        </div>\r\n                        <div className=\"list-split list-label\">\r\n                            {invoice.added_by.full_name}\r\n                        </div>\r\n                        {invoice.deleted &&\r\n                        <div className=\"list-split list-deleted\">\r\n                            Deleted\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid-stat-container\" id=\"stat\">\r\n                    <StatCount heading={`${invoice.products.length}`}\r\n                               count={`Product`}\r\n                               size=\"small\"/>\r\n                    <StatCount heading={`${invoice.services.length}`}\r\n                               count={`Service`}\r\n                               size=\"small\"/>\r\n                    {invoice.state === \"pending\" &&\r\n                    <StatCount heading={`Rs.${invoice.final_bill_amount.toFixed(2) - invoice.paid_amount.toFixed(2)} `}\r\n                               count={`Pending`}\r\n                               size=\"small\" borderColor=\"#e35656\"/>\r\n                    }\r\n                    <StatCount heading={`Rs.${invoice.final_bill_amount.toFixed(2)}`}\r\n                               count={`Bill Amount`}\r\n                               size=\"small\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default InvoiceLi;","import React, {Component} from \"react\";\r\nimport './CustomerList.css';\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\nimport {RiDeleteBinLine} from \"react-icons/ri\";\r\nimport {FiEdit} from \"react-icons/fi\";\r\n\r\nimport Loading from \"../../components/Loading\";\r\nimport Tabs from \"../../components/Tabs\";\r\nimport InvoiceLi from \"../../components/ListView/InvoiceLi\";\r\nimport Input from \"../../components/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport {options} from \"../../components/ListView/CustomerLi\";\r\nimport Modal from \"../../components/Modal\";\r\nimport api from \"../../utils/api\";\r\nimport {getBranchActionPerm} from \"../../utils/index\";\r\n\r\nclass CustomerDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editCustomerModal: false,\r\n            showDeleteModal: false,\r\n        };\r\n\r\n        this.isAllInputOkay = this.isAllInputOkay.bind(this);\r\n        this.onSubmitDeleteCustomer = this.onSubmitDeleteCustomer.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        let {id} = this.props.match.params;\r\n        this.props.getById({type: \"customer\", id});\r\n    }\r\n\r\n    isAllInputOkay() {\r\n        const {editCustomerData} = this.state;\r\n        return !editCustomerData.full_name\r\n            || Object.keys(editCustomerData.gender).length === 0 || !(Number(editCustomerData.age) > 0)\r\n            || editCustomerData.mobile_number.toString().length !== 10\r\n    }\r\n\r\n    async onSubmitDeleteCustomer(customer) {\r\n        this.setState({showDeleteModal: false, deleteLoading: true});\r\n        try {\r\n            const {body} = await api({type: \"DELETE\", uri: \"customer/\" + customer._id});\r\n            this.setState({\r\n                editLoading: false,\r\n                isSuccessIndicator: true,\r\n                message: {type: \"success\", text: body.message}\r\n            });\r\n\r\n            if (!body || body.status === 'error') {\r\n                if (body.data) {\r\n                    this.props.addNotification({message: body.data, level: \"error\"});\r\n                }\r\n            } else {\r\n                let {id} = this.props.match.params;\r\n                this.props.getById({type: \"customer\", id});\r\n                if (body.message) {\r\n                    this.props.addNotification({message: body.message, level: \"success\"});\r\n                }\r\n            }\r\n            this.setState({deleteLoading: false});\r\n        } catch (e) {\r\n            this.setState({deleteLoading: false});\r\n            this.props.addNotification({message: e.toString(), level: \"error\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {detailData, currentBranch, loading, myUserAccess} = this.props.appModuleData.toJS();\r\n        const {detail, invoicesAdded, queryId} = detailData;\r\n\r\n        const panes = [\r\n            {\r\n                menuItem: `Invoices (${invoicesAdded && invoicesAdded.length})`,\r\n                render:\r\n                    <div className=\"Detail-View-Main-Content-Body\">\r\n                        {invoicesAdded && invoicesAdded.map((invoice, key) => {\r\n                            return <InvoiceLi invoice={invoice}\r\n                                              history={this.props.history}\r\n                                              key={key} branchId={invoice.branch}/>\r\n                        })}\r\n                    </div>\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div\r\n                        className=\"page-header-name\">CUSTOMER{detail._id ? ` - ${detail.full_name} | ${detail._id}` : \"\"}</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        <Loading type=\"simple\" style=\"native\"\r\n                                 loading={loading.getByIdLoading || loading.putCustomerLoading}/>\r\n                        {(!loading.getByIdLoading && !loading.putCustomerLoading) && !detail.deleted &&\r\n                        getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"customer\", \"edit\") &&\r\n                        <FiEdit size=\"20px\" style={{margin: 10}} className=\"button-icon\"\r\n                                onClick={() => this.setState({\r\n                                    editCustomerModal: true,\r\n                                    editCustomerData: {\r\n                                        ...detail,\r\n                                        gender: options.filter((ge) => ge.value === detail.gender)[0]\r\n                                    }\r\n                                })}/>}\r\n                        {(!loading.getByIdLoading && !loading.putCustomerLoading) && !detail.deleted &&\r\n                        getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"customer\", \"delete\") &&\r\n                        <RiDeleteBinLine size=\"20px\" style={{margin: 10}} className=\"button-icon\"\r\n                                         onClick={() => this.setState({showDeleteModal: true})}/>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"actual-content\">\r\n                    <div className=\"Detail-View\">\r\n                        {detailData.type === \"customer\" && detail._id &&\r\n                        <div>\r\n                            <div className=\"Detail-View-Main-Content\">\r\n                                <div className=\"Detail-View-Main-Content-Column1\">\r\n                                    <div className=\"Detail-View-Main-Content-Name\">\r\n                                        {detail.full_name} {detail.deleted &&\r\n                                    <span>DELETED</span>}\r\n                                    </div>\r\n                                    <div className=\"Detail-View-Main-Content-Id\">\r\n                                        <img className=\"image\"\r\n                                             src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\r\n                                        {detail._id}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"Detail-View-Main-Content-Column2\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"information\">Customer Information:</div>\r\n                                        <div className=\"stat\">\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Name</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.full_name}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Mobile Number</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.mobile_number}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Age</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.age}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Address</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.address}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"information\">Invoice Information:</div>\r\n                                        <div className=\"stat no-border\">\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Invoice Count</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {invoicesAdded.length}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{paddingTop: 10}}>\r\n                                <Tabs panes={panes} type=\"default\"/>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.editCustomerModal &&\r\n                    <Modal\r\n                        open={true}\r\n                        center={false}\r\n                        onClose={() => {\r\n                            this.setState({editCustomerModal: false, editCustomerData: {}});\r\n                        }}\r\n                        showCloseIcon={false}\r\n                        size=\"big\"\r\n                        header={\r\n                            <div>\r\n                                EDIT CUSTOMER: <span className=\"Modal-Header-name\">{detail.full_name}</span>\r\n                            </div>\r\n                        }\r\n                        content={\r\n                            <div>\r\n                                <Input name={\"Name\"}\r\n                                       value={this.state.editCustomerData.full_name}\r\n                                       required={true}\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editCustomerData: {\r\n                                                   ...this.state.editCustomerData,\r\n                                                   full_name: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Mobile Number\"}\r\n                                       value={this.state.editCustomerData.mobile_number}\r\n                                       type=\"mobile_number\"\r\n                                       disabled={true}\r\n                                       maxLength=\"10\"\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editCustomerData: {\r\n                                                   ...this.state.editCustomerData,\r\n                                                   mobile_number: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Home Address\"}\r\n                                       value={this.state.editCustomerData.address}\r\n                                       type=\"textarea\"\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editCustomerData: {\r\n                                                   ...this.state.editCustomerData,\r\n                                                   address: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Email\"}\r\n                                       value={this.state.editCustomerData.email}\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editCustomerData: {\r\n                                                   ...this.state.editCustomerData,\r\n                                                   email: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Age\"}\r\n                                       value={this.state.editCustomerData.age}\r\n                                       type=\"number\"\r\n                                       maxLength=\"2\"\r\n                                       required={true}\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editCustomerData: {\r\n                                                   ...this.state.editCustomerData,\r\n                                                   age: data.value\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n\r\n                                <Input name={\"Gender\"}\r\n                                       value={this.state.editCustomerData.gender}\r\n                                       type=\"select\"\r\n                                       required={true}\r\n                                       options={options}\r\n                                       onValChange={(data) => {\r\n                                           this.setState({\r\n                                               editCustomerData: {\r\n                                                   ...this.state.editCustomerData,\r\n                                                   gender: data\r\n                                               }\r\n                                           })\r\n                                       }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                        footer={\r\n                            <div>\r\n                                <Button name=\"Submit\"\r\n                                        disabled={this.isAllInputOkay()}\r\n                                        onClick={() => {\r\n                                            const {editCustomerData} = this.state;\r\n                                            this.props.putCustomer({\r\n                                                name: editCustomerData.full_name,\r\n                                                email: editCustomerData.email,\r\n                                                gender: editCustomerData.gender.value,\r\n                                                address: editCustomerData.address,\r\n                                                age: Number(editCustomerData.age),\r\n                                                mobileNo: Number(editCustomerData.mobile_number),\r\n                                                branch_id: Number(currentBranch._id)\r\n                                            });\r\n                                            this.setState({editCustomerData: {}, editCustomerModal: false});\r\n                                        }}/>\r\n                                <Button name=\"Close\" onClick={() => {\r\n                                    this.setState({editCustomerData: {}, editCustomerModal: false});\r\n                                }}/>\r\n                            </div>\r\n                        }\r\n                    />\r\n                }\r\n\r\n                {\r\n                    this.state.showDeleteModal &&\r\n                    <Modal\r\n                        open={this.state.showDeleteModal}\r\n                        center={false}\r\n                        onClose={() => this.setState({showDeleteModal: false})}\r\n                        showCloseIcon={false}\r\n                        size=\"mini\"\r\n                        header={\r\n                            <div>\r\n                                DELETE CUSTOMER:<span>{detail.full_name}</span>\r\n                            </div>\r\n                        }\r\n                        content={\r\n                            <div style={{padding: 10}}>\r\n                                Deleting customer will not delete the customer from the inventory. Customer will be\r\n                                shown in the inventory as deleted.\r\n                                You cannot revert the deletion at any point.\r\n                            </div>\r\n                        }\r\n                        footer={\r\n                            <div>\r\n                                <Button name=\"Delete\"\r\n                                        onClick={async () => {\r\n                                            await this.onSubmitDeleteCustomer(detail);\r\n                                        }}/>\r\n                                <Button name=\"Close\" onClick={() => this.setState({showDeleteModal: false})}/>\r\n                            </div>\r\n                        }\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CustomerDetail));","import React, {Component} from \"react\";\r\nimport {FcPackage} from \"react-icons/fc\";\r\nimport \"./style.css\";\r\n\r\nimport StatCount from \"../Stats/StatCount\";\r\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\r\n\r\nclass ProductLi extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {product, showAvgUsage, isInvoiceView} = this.props;\r\n\r\n        return (\r\n            <div className=\"grid-list-container grid-product\"\r\n                 onClick={() => this.props.history.push(`/branch/${this.props.branchId}/product/${product._id}`)}>\r\n                <div className=\"grid-icon\" id=\"icon\">\r\n                    <FcPackage className=\"list-user-icon\" size=\"28px\"/>\r\n                </div>\r\n                <div className=\"list-name\" id=\"name\">\r\n                    {product.name}\r\n                    <div>\r\n                        {product._id &&\r\n                        <div className=\"list-split list-label\">\r\n                            {product._id}\r\n                        </div>}\r\n                        {product.added_date_time && <div className=\"list-split list-label\">\r\n                            {getDesiredDateTimeNow(product.added_date_time)}\r\n                        </div>}\r\n                        {product.deleted &&\r\n                        <div className=\"list-split list-deleted\">\r\n                            Deleted\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                {!isInvoiceView &&\r\n                <div className=\"grid-stat-container\" id=\"stat\">\r\n                    {showAvgUsage &&\r\n                    <StatCount heading={`${showAvgUsage} ${product.product_unit}`}\r\n                               count={`Avg.used`}\r\n                               size=\"small\"/>}\r\n                    <StatCount heading={`${product.available_stocks.toFixed(2)} ${product.product_unit}`}\r\n                               count={`Available`}\r\n                               size=\"small\"/>\r\n                    <StatCount heading=\"cost\" count={product.product_cost} size=\"small\"/>\r\n                </div>}\r\n\r\n                {isInvoiceView &&\r\n                <div className=\"grid-stat-container\" id=\"stat\">\r\n                    <StatCount heading={`${product.quantity_used}`} count={`${product.product_unit}`} size=\"small\"/>\r\n                    <StatCount heading=\"cost\" count={product.product_cost} size=\"small\"/>\r\n                </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ProductLi;","import React, {Component} from \"react\";\r\nimport {FcServices} from \"react-icons/fc\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport StatCount from \"../Stats/StatCount\";\r\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\r\n\r\nclass ServiceLi extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {service, showSubStatDetail, isInvoiceView} = this.props;\r\n\r\n        return (\r\n            <div className=\"grid-list-container grid-service\"\r\n                 onClick={() => this.props.history.push(`/branch/${this.props.branchId}/service/${service._id}`)}>\r\n                <div className=\"grid-icon\" id=\"icon\">\r\n                    <FcServices className=\"list-user-icon\" size=\"28px\"/>\r\n                </div>\r\n                <div className=\"list-name\" id=\"name\">\r\n                    {service.name}\r\n                    <div>\r\n                        {service._id &&\r\n                        <div className=\"list-split list-label\">\r\n                            {service._id}\r\n                        </div>}\r\n                        {isInvoiceView && service._id &&\r\n                        <div className=\"list-split list-label\">\r\n                            {service._id}\r\n                        </div>}\r\n                        {service.added_date_time && <div className=\"list-split list-label\">\r\n                            {getDesiredDateTimeNow(service.added_date_time)}\r\n                        </div>}\r\n                        {service.added_by &&\r\n                        <div className=\"list-split list-label\">\r\n                            {service.added_by.full_name}\r\n                        </div>}\r\n                        {service.deleted &&\r\n                        <div className=\"list-split list-deleted\">\r\n                            Deleted\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-stat-container\" id=\"stat\">\r\n                    {!showSubStatDetail &&\r\n                    <StatCount heading={`${service.average_stock_usage.length}`}\r\n                               count={\"Products Used\"}\r\n                               size=\"small\"/>\r\n                    }\r\n                    {(!showSubStatDetail && !isInvoiceView) &&\r\n                    <StatCount heading={`${service.product_used.length}`}\r\n                               count={\"Products Used\"}\r\n                               size=\"small\"/>\r\n                    }\r\n                    {(showSubStatDetail && !isInvoiceView) && service.average_stock_usage.map((serviceAvg, key) => {\r\n                        const productUsed = service.product_used.filter((pu) => pu._id === serviceAvg._id)[0];\r\n                        if (productUsed) {\r\n                            return (\r\n                                <StatCount heading={`${productUsed.name}`} key={key}\r\n                                           count={`${serviceAvg.quantity_used} ${productUsed.product_unit}`}\r\n                                           size=\"small\"/>\r\n                            )\r\n                        }\r\n                        return null;\r\n                    })}\r\n                    {(showSubStatDetail && isInvoiceView) && service.product_used.map((serviceAvg, key) => {\r\n                        return (\r\n                            <StatCount heading={`${serviceAvg.name}`} key={key}\r\n                                       count={`${serviceAvg.quantity_used} ${serviceAvg.product_unit}`}\r\n                                       size=\"small\"/>\r\n                        )\r\n                    })}\r\n\r\n                    {isInvoiceView &&\r\n                    <StatCount heading={`Rs.${service.service_cost}`}\r\n                               count={`Cost`}\r\n                               size=\"small\"/>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ServiceLi;","import React, {Component} from \"react\";\r\nimport './Product.css';\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions, PRODUCT_ADD_MODAL, SERVICE_ADD_MODAL} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Paging from \"../../components/Page\";\r\nimport Tabs from \"../../components/Tabs\";\r\nimport ProductLi from \"../../components/ListView/ProductLi\";\r\nimport ServiceLi from \"../../components/ListView/ServiceLi\";\r\nimport Button from \"../../components/Button\";\r\nimport {getBranchActionPerm} from \"../../utils/index\";\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: 1\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const urlParams = new URLSearchParams(this.props.location.search);\r\n        switch (urlParams.get(\"tab\")) {\r\n            case \"2\":\r\n                this.setState({activeTab: Number(urlParams.get(\"tab\"))});\r\n                this.props.getAllService(urlParams.get(\"page\") ? urlParams.get(\"page\") : 0);\r\n                break;\r\n\r\n            default:\r\n                this.props.getAllProduct(urlParams.get(\"page\") ? urlParams.get(\"page\") : 0);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {allProductsData, allServiceData, myUserAccess, updateHistoryFn, currentBranch, loading} = this.props.appModuleData.toJS();\r\n\r\n        const panes = [\r\n            {\r\n                menuItem: 'Products',\r\n                render:\r\n                    <div style={{overflow: \"hidden\"}}>\r\n                        {allProductsData.products.map((data, key) => {\r\n                            return (\r\n                                <ProductLi product={data} history={updateHistoryFn} key={key}\r\n                                           branchId={this.props.match.params.branchId}/>\r\n                            )\r\n                        })}\r\n                        {allProductsData.products.length === 0 &&\r\n                        <div style={{color: \"#8c8c8c\", padding: 10}} align=\"center\">Nothing to show</div>}\r\n                    </div>\r\n            },\r\n            {\r\n                menuItem: 'Services',\r\n                render:\r\n                    <div style={{overflow: \"hidden\"}}>\r\n                        {allServiceData.services.map((data, key) => {\r\n                            return (\r\n                                <ServiceLi service={data} history={this.props.history} key={key}\r\n                                           branchId={this.props.match.params.branchId}/>\r\n                            )\r\n                        })}\r\n                        {allServiceData.services.length === 0 &&\r\n                        <div style={{color: \"#8c8c8c\", padding: 10}} align=\"center\">Nothing to show</div>}\r\n                    </div>\r\n            },\r\n        ];\r\n\r\n        let pagination = {};\r\n        switch (this.state.activeTab) {\r\n            case 1:\r\n                pagination = {\r\n                    loading: loading.getProductLoading,\r\n                    currentPage: allProductsData.count.page,\r\n                    totalPages: allProductsData.count.totalPages,\r\n                    shownContent: allProductsData.products.length,\r\n                    totalContent: allProductsData.count.total,\r\n                    nextPage: (pg) => this.props.getAllProduct(pg),\r\n                    prevPage: (pg) => this.props.getAllProduct(pg)\r\n                };\r\n                break;\r\n\r\n            case 2:\r\n                pagination = {\r\n                    loading: loading.getServiceLoading,\r\n                    currentPage: allServiceData.count.page,\r\n                    totalPages: allServiceData.count.totalPages,\r\n                    shownContent: allServiceData.services.length,\r\n                    totalContent: allServiceData.count.total,\r\n                    nextPage: (pg) => this.props.getAllService(pg),\r\n                    prevPage: (pg) => this.props.getAllService(pg)\r\n                }\r\n        }\r\n\r\n        let addIcon = \"PRODUCT/SERVICE\";\r\n        let addIconFunc;\r\n        switch (this.state.activeTab) {\r\n            case 1:\r\n                addIcon = \"PRODUCT\";\r\n                addIconFunc = () => this.props.modalToggle({modal: PRODUCT_ADD_MODAL, view: true});\r\n                break;\r\n            case 2:\r\n                addIcon = \"SERVICE\";\r\n                addIconFunc = () => this.props.modalToggle({modal: SERVICE_ADD_MODAL, view: true});\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">PRODUCT | SERVICE</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        {getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"add\") &&\r\n                        <Button name={`ADD ${addIcon}`} onClick={() => addIconFunc()}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"page-content\" id=\"pageContent\">\r\n                    <Tabs panes={panes} activeTab={this.state.activeTab} onTabClick={(i) => {\r\n                        this.setState({activeTab: i});\r\n                        const searchParams = new URLSearchParams(this.props.location.search);\r\n                        searchParams.set(\"tab\", i);\r\n                        let page = 0;\r\n                        switch (i) {\r\n                            case 2:\r\n                                page = allServiceData.count.page;\r\n                                if (allServiceData.services.length === 0) {\r\n                                    this.props.getAllService(page);\r\n                                }\r\n                                break;\r\n\r\n                            default:\r\n                                page = allProductsData.count.page;\r\n                                if (allProductsData.products.length === 0) {\r\n                                    this.props.getAllProduct(page);\r\n                                }\r\n                                break;\r\n\r\n                        }\r\n                        searchParams.set(\"page\", page.toString());\r\n                        this.props.history.push(`/branch/${this.props.match.params.branchId}/items/?${searchParams.toString()}`);\r\n                    }}/>\r\n                    <div className=\"float-right\">\r\n                        <Paging {...pagination}\r\n                                history={this.props.history}\r\n                                location={this.props.location}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));","import React, {Component} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Modal from \"../../components/Modal\";\r\nimport Input from \"../../components/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport api from \"../../utils/api\";\r\nimport {\r\n    appModuleActions as actions,\r\n    PRODUCT_ADD_MODAL,\r\n    PRODUCT_EDIT_MODAL,\r\n    SERVICE_ADD_MODAL,\r\n    SERVICE_EDIT_MODAL\r\n} from \"../../AppModule\";\r\n\r\nimport \"./Product.css\";\r\n\r\nconst unitOptions = [\r\n    {key: 'kg', text: 'kg', value: 'kg'},\r\n    {key: 'gram', text: 'gram', value: 'gram'},\r\n    {key: 'piece', text: 'piece', value: 'piece'},\r\n    {key: 'litre', text: 'litre', value: 'litre'},\r\n    {key: 'box', text: 'box', value: 'box'},\r\n    {key: 'pack', text: 'pack', value: 'pack'},\r\n    {key: 'ml', text: 'ml', value: 'ml'},\r\n    {key: 'kit', text: 'kit', value: 'kit'},\r\n    {key: 'full_kit', text: 'full_kit', value: 'full_kit'},\r\n    {key: 'half_kit', text: 'half_kit', value: 'half_kit'},\r\n];\r\n\r\nlet productOptions = [];\r\n\r\nclass AddOrEditItems extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            type: '',\r\n            _id: '',\r\n            productName: '',\r\n            productUnit: {},\r\n            productCost: 0,\r\n            quantityInMl: 0,\r\n            totalQuantity: 0,\r\n            quantityInBox: 0,\r\n            serviceName: '',\r\n            costOfService: 0,\r\n            productUsed: [],\r\n            branch: {}\r\n        };\r\n\r\n        this.onClickSubmit = this.onClickSubmit.bind(this);\r\n        this.setStockUsageQuantity = this.setStockUsageQuantity.bind(this);\r\n        this.setStateValues = this.setStateValues.bind(this);\r\n        this.onCloseModal = this.onCloseModal.bind(this);\r\n        this.checkAllInputOkay = this.checkAllInputOkay.bind(this);\r\n        this.onLoadProductSelectOption = this.onLoadProductSelectOption.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {productsData, serviceData, type} = this.props;\r\n\r\n        if (type === \"add-product\") {\r\n            this.setState({type: \"add-product\"});\r\n        } else if (type === \"add-service\") {\r\n            this.setState({type: \"add-service\"});\r\n        } else if (type === \"edit-product\") {\r\n            if (Object.keys(productsData).length > 0) {\r\n                let data = {\r\n                    type: \"edit-product\",\r\n                    _id: productsData._id,\r\n                    productName: productsData.name,\r\n                    productUnit: unitOptions.filter((uO) => uO.value === productsData.product_unit)[0],\r\n                    productCost: productsData.product_cost,\r\n                };\r\n                this.setState(data);\r\n            }\r\n        } else if (type === \"edit-service\") {\r\n            if (Object.keys(serviceData).length > 0) {\r\n                let data = {\r\n                    type: \"edit-service\",\r\n                    _id: serviceData._id,\r\n                    serviceName: serviceData.name,\r\n                    costOfService: String(serviceData.service_cost),\r\n                    productUsed: serviceData.product_used.filter((pr) => !pr.deleted).map((pr) => {\r\n                        const avgUsedLi = serviceData.average_stock_usage.filter((avgStk) => pr._id === avgStk._id);\r\n                        const avgUsedData = avgUsedLi.length > 0 ? avgUsedLi[0].quantity_used : 0;\r\n                        return {\r\n                            ...renderProductOptions([pr])[0], averageQuantityOfStockUsed: avgUsedData, fullObj: pr\r\n                        }\r\n                    })\r\n                };\r\n                this.setState(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClickSubmit() {\r\n        const {type, _id, productName, productUnit, productCost, serviceName} = this.state;\r\n        this.props.updateHistoryFun(this.props.history);\r\n\r\n        let branchId = {branch_id: this.props.match.params.branchId};\r\n        if (type === 'add-product') {\r\n            this.props.postNewProduct({\r\n                name: productName,\r\n                unit: productUnit.value,\r\n                cost: Number(productCost),\r\n                ...branchId\r\n            });\r\n        } else if (type === 'edit-product') {\r\n            this.props.updateProduct({\r\n                _id,\r\n                name: productName,\r\n                unit: productUnit.value,\r\n                cost: Number(productCost),\r\n                ...branchId\r\n            });\r\n        } else if (type === 'edit-service') {\r\n            let dataToPost = {\r\n                _id,\r\n                name: serviceName, costOfService: this.state.costOfService.toString(), ...branchId\r\n            };\r\n            dataToPost.productUsed = this.state.productUsed.map((productUsed) => productUsed.key);\r\n            const addToPostData = this.state.productUsed.filter((prUsed) => prUsed.averageQuantityOfStockUsed && Number(prUsed.averageQuantityOfStockUsed) && (Number(prUsed.averageQuantityOfStockUsed) > 0));\r\n            if (addToPostData.length > 0) {\r\n                dataToPost.averageStockUsage = this.state.productUsed.map((prUsed) => {\r\n                    return {_id: prUsed.fullObj._id, quantity_used: Number(prUsed.averageQuantityOfStockUsed)};\r\n                })\r\n            }\r\n            this.props.updateService(dataToPost)\r\n        } else {\r\n            let dataToPost = {\r\n                name: serviceName, costOfService: this.state.costOfService.toString(), ...branchId\r\n            };\r\n            dataToPost.productUsed = this.state.productUsed.map((productUsed) => productUsed.key);\r\n            const addToPostData = this.state.productUsed.filter((prUsed) => prUsed.averageQuantityOfStockUsed && Number(prUsed.averageQuantityOfStockUsed) && (Number(prUsed.averageQuantityOfStockUsed) > 0));\r\n            if (addToPostData.length > 0) {\r\n                dataToPost.averageStockUsage = this.state.productUsed.map((prUsed) => {\r\n                    return {_id: prUsed.fullObj._id, quantity_used: Number(prUsed.averageQuantityOfStockUsed)};\r\n                })\r\n            }\r\n            this.props.postNewService(dataToPost)\r\n        }\r\n        this.onCloseModal();\r\n    }\r\n\r\n    setStateValues(data) {\r\n        this.setState(data)\r\n    }\r\n\r\n    setStockUsageQuantity(key, value) {\r\n        const {productUsed} = this.state;\r\n        productUsed[key].averageQuantityOfStockUsed = value;\r\n        this.setStateValues({productUsed})\r\n    }\r\n\r\n    checkAllInputOkay() {\r\n        if (this.state.type === \"add-product\") {\r\n            return !this.state.productName\r\n                || Object.keys(this.state.productUnit).length === 0\r\n                || !this.state.productCost.toString()\r\n        } else if (this.state.type === \"add-service\") {\r\n            return !this.state.serviceName || !this.state.costOfService.toString()\r\n        } else if (this.state.type === \"edit-product\") {\r\n            return !this.state.productName\r\n                || Object.keys(this.state.productUnit).length === 0\r\n                || !this.state.productCost.toString()\r\n        } else if (this.state.type === \"edit-service\") {\r\n            return !this.state.serviceName || !this.state.costOfService.toString()\r\n        }\r\n    }\r\n\r\n    onCloseModal() {\r\n        const {loading} = this.props.appModuleData.toJS();\r\n        if (this.state.type === \"add-product\") {\r\n            !loading.postNewProductLoading && !loading.postNewServiceLoading && this.props.modalToggle({\r\n                modal: PRODUCT_ADD_MODAL,\r\n                view: false\r\n            });\r\n        } else if (this.state.type === \"add-service\") {\r\n            !loading.postNewProductLoading && !loading.postNewServiceLoading && this.props.modalToggle({\r\n                modal: SERVICE_ADD_MODAL,\r\n                view: false\r\n            });\r\n        } else if (this.state.type === \"edit-product\") {\r\n            this.props.modalToggle({modal: PRODUCT_EDIT_MODAL, view: false});\r\n        } else if (this.state.type === \"edit-service\") {\r\n            this.props.modalToggle({modal: SERVICE_EDIT_MODAL, view: false});\r\n        }\r\n    }\r\n\r\n    async onLoadProductSelectOption(inputVal) {\r\n        const {currentBranch} = this.props.appModuleData.toJS();\r\n        if (inputVal) {\r\n            try {\r\n                const {body} = await api({type: \"GET\", uri: `products/${currentBranch._id}?name=${inputVal}`});\r\n                return renderProductOptions(body.products)\r\n            } catch (e) {\r\n                // Do nothing\r\n                console.log(e)\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                open={true}\r\n                center={false}\r\n                onClose={() => this.onCloseModal()}\r\n                showCloseIcon={false}\r\n                size=\"big\"\r\n                header={\r\n                    <div>\r\n                        {this.state.type.toUpperCase()}\r\n                    </div>\r\n                }\r\n                content={\r\n                    <div>\r\n                        {(this.state.type === 'add-product' || this.state.type === 'edit-product') &&\r\n                        <div>\r\n                            <Input name=\"Product Name\"\r\n                                   value={this.state.productName}\r\n                                   required={true}\r\n                                   onValChange={(data) => {\r\n                                       this.setState({productName: data.value});\r\n                                   }}\r\n                            />\r\n                            <Input name={\"Select Product Unit\"}\r\n                                   value={this.state.productUnit}\r\n                                   type=\"select\"\r\n                                   required={true}\r\n                                   options={unitOptions}\r\n                                   onValChange={(productUnit) => this.setState({productUnit})}\r\n                            />\r\n                            <Input name=\"Product Cost\"\r\n                                   value={this.state.productCost}\r\n                                   required={true}\r\n                                   type=\"number\"\r\n                                   onValChange={(data) => this.setState({productCost: data.value})}\r\n                            />\r\n                        </div>\r\n                        }\r\n\r\n                        {(this.state.type === 'add-service' || this.state.type === 'edit-service') &&\r\n                        <div>\r\n                            <Input name=\"Service Name\"\r\n                                   value={this.state.serviceName}\r\n                                   required={true}\r\n                                   onValChange={(data) => {\r\n                                       this.setState({serviceName: data.value});\r\n                                   }}\r\n                            />\r\n                            <Input name=\"Service Cost\"\r\n                                   value={this.state.costOfService}\r\n                                   required={true}\r\n                                   type=\"number\"\r\n                                   onValChange={(data) => this.setState({costOfService: data.value})}\r\n                            />\r\n                            <Input name={\"Select Product Used\"}\r\n                                   value={this.state.productUsed}\r\n                                   type=\"asyncSelect\"\r\n                                   required={true}\r\n                                   isMulti={true}\r\n                                   loadOptions={async (inputVal) => await this.onLoadProductSelectOption(inputVal)}\r\n                                   options={unitOptions}\r\n                                   onValChange={(productUsed) => {\r\n                                       this.setState({productUsed: productUsed ? productUsed : []})\r\n                                   }}\r\n                            />\r\n\r\n                            {this.state.productUsed.length > 0 &&\r\n                            <div className=\"product-avg-usage-box\">\r\n                                {\r\n                                    this.state.productUsed.map((prUdObj, key) => {\r\n                                        return (\r\n                                            <div key={key}>\r\n                                                <Input type=\"number\"\r\n                                                       name={`Average quantity of ${prUdObj.fullObj.name} used in ${prUdObj.fullObj.product_unit}`}\r\n                                                       value={prUdObj.averageQuantityOfStockUsed}\r\n                                                       onValChange={(data) => {\r\n                                                           this.setStockUsageQuantity(key, data.value);\r\n                                                       }}/>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                }\r\n                footer={\r\n                    <div>\r\n                        <Button name=\"Submit\" disabled={this.checkAllInputOkay()} onClick={() => this.onClickSubmit()}/>\r\n                        <Button name=\"Close\" onClick={() => this.onCloseModal()}/>\r\n                    </div>\r\n                }\r\n\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddOrEditItems));\r\n\r\nfunction renderBranchOptions(branches) {\r\n    let branchesRet = [];\r\n    branches.filter((o) => !o.deleted).forEach((branch) => {\r\n        branchesRet.push({\r\n            key: branch._id,\r\n            value: branch._id,\r\n            text: branch['name'].toUpperCase() + ' - ' + branch['location']\r\n        });\r\n    });\r\n    return branchesRet;\r\n}\r\n\r\nconst renderProductOptions = function (data) {\r\n    productOptions = data.length === 0 ? productOptions : [];\r\n    data.filter((o) => !o.deleted).forEach((pD) => {\r\n        // const alreadyExist = productOptions.filter((exist) => pD._id === exist.key);\r\n        // if (alreadyExist.length === 0) {\r\n        //     productOptions.push({key: pD._id, value: pD._id, text: pD.name, fullObj: pD})\r\n        // }\r\n        productOptions.push({key: pD._id, value: pD._id, text: pD.name, fullObj: pD})\r\n    });\r\n    return productOptions;\r\n};","import React, {Component} from \"react\";\r\nimport './Product.css';\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions, PRODUCT_EDIT_MODAL} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\nimport {FiEdit, FiPlus} from \"react-icons/fi\";\r\n\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Tabs from \"../../components/Tabs\";\r\nimport {getBranchActionPerm, getDesiredDateTimeNow} from \"../../utils/index\";\r\nimport ServiceLi from \"../../components/ListView/ServiceLi\";\r\nimport InvoiceLi from \"../../components/ListView/InvoiceLi\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Input from \"../../components/Input\";\r\nimport AddOrEditItems from \"./AddOrEditItems\";\r\nimport {RiDeleteBinLine} from \"react-icons/ri\";\r\nimport api from \"../../utils/api\";\r\n\r\nconst ActionOptions = [{\r\n    icon: \"Add\",\r\n    value: \"Add\"\r\n}, {icon: \"Remove\", value: \"Remove\"}];\r\n\r\nclass ProductDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            addStockModal: false,\r\n            addStockData: {type: ActionOptions[0], number: ''},\r\n            showDeleteModal: false,\r\n            deleteLoading: false\r\n        };\r\n\r\n        this.addStockModal = this.addStockModal.bind(this);\r\n        this.isAllStockInputOkay = this.isAllStockInputOkay.bind(this);\r\n        this.onSubmitDeleteProduct = this.onSubmitDeleteProduct.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        let {id} = this.props.match.params;\r\n        this.props.getById({type: \"product\", id});\r\n    }\r\n\r\n    isAllStockInputOkay() {\r\n        return !(this.state.addStockData.number > 0)\r\n    }\r\n\r\n    addStockModal() {\r\n        const {detailData, currentBranch, myUserAccess} = this.props.appModuleData.toJS();\r\n        const {detail} = detailData;\r\n\r\n        let ModalActionOptions = [{\r\n            icon: \"Add\",\r\n            value: \"Add\"\r\n        }];\r\n\r\n        if (getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"edit\")) {\r\n            ModalActionOptions.push({icon: \"Remove\", value: \"Remove\"});\r\n        }\r\n        return (\r\n            <Modal\r\n                open={this.state.addStockModal}\r\n                center={false}\r\n                onClose={() => this.setState({addStockModal: false})}\r\n                showCloseIcon={false}\r\n                size=\"mini\"\r\n                header={\r\n                    <div>\r\n                        ADD/REMOVE STOCK\r\n                        | <span>(Available Stocks: {detail.available_stocks.toFixed(2)} {detail.product_unit})</span>\r\n                    </div>\r\n                }\r\n                content={\r\n                    <div>\r\n                        <Input name={\"Action Type\"}\r\n                               value={this.state.addStockData.type}\r\n                               type=\"select\"\r\n                               required={true}\r\n                               options={ModalActionOptions}\r\n                               onValChange={(data) => {\r\n                                   this.setState({\r\n                                       addStockData: {\r\n                                           ...this.state.addStockData,\r\n                                           type: data\r\n                                       }\r\n                                   })\r\n                               }}\r\n                        />\r\n                        <Input name={`No.of Stocks (in ${detail.product_unit})`}\r\n                               value={this.state.addStockData.number}\r\n                               required={true}\r\n                               type=\"number\"\r\n                               onValChange={(data) => {\r\n                                   this.setState({\r\n                                       addStockData: {\r\n                                           ...this.state.addStockData,\r\n                                           number: data.value\r\n                                       }\r\n                                   })\r\n                               }}\r\n                        />\r\n                        <Loading loading={this.state.addCustomerLoading}/>\r\n                    </div>\r\n                }\r\n                footer={\r\n                    <div>\r\n                        <Button name=\"Submit\" disabled={this.isAllStockInputOkay()} onClick={() => {\r\n                            this.props.addStockToProduct({\r\n                                type: this.state.addStockData.type.value.toLowerCase(),\r\n                                productId: detail._id,\r\n                                quantityToAdd: Number(this.state.addStockData.number),\r\n                                branch_id: detail.branch._id\r\n                            });\r\n                            this.setState({addStockModal: false, addStockData: {type: ActionOptions[0], number: 0}});\r\n                        }}/>\r\n                        <Button name=\"Close\" onClick={() => {\r\n                            this.setState({addStockModal: false, addStockData: {type: ActionOptions[0], number: 0}});\r\n                        }}/>\r\n                    </div>\r\n                }\r\n\r\n            />\r\n        )\r\n    }\r\n\r\n    async onSubmitDeleteProduct(product) {\r\n        this.setState({showDeleteModal: false, deleteLoading: true});\r\n        try {\r\n            const {currentBranch} = this.props.appModuleData.toJS();\r\n            const {body} = await api({type: \"DELETE\", uri: `product/${currentBranch._id}/${product._id}`});\r\n\r\n            if (!body || body.status === 'error') {\r\n                if (body.data) {\r\n                    this.props.addNotification({message: body.data, level: \"error\"});\r\n                }\r\n            } else {\r\n                let {id} = this.props.match.params;\r\n                this.props.getById({type: \"product\", id});\r\n                if (body.message) {\r\n                    this.props.addNotification({message: body.message, level: \"success\"});\r\n                }\r\n            }\r\n            this.setState({deleteLoading: false});\r\n        } catch (e) {\r\n            this.setState({deleteLoading: false});\r\n            this.props.addNotification({message: e.toString(), level: \"error\"});\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {detailData, loading, modal, currentBranch, myUserAccess} = this.props.appModuleData.toJS();\r\n        const {detail, servicesUsed, invoicesAdded} = detailData;\r\n\r\n        const branchId = this.props.match.params.branchId;\r\n\r\n        const panes = [\r\n            {\r\n                menuItem: \"Stock Details\",\r\n                render:\r\n                    <div style={{overflow: \"hidden\", padding: 10}}>\r\n                        <div className=\"Detail-View-Main-Content-Body\">\r\n                            <div className=\"stock-list\">\r\n                                {(!loading.getByIdLoading && !loading.addStockToProductLoading && !loading.postNewProductLoading && !this.state.deleteLoading) &&\r\n                                !detail.deleted && getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"add\") &&\r\n                                <div style={{alignSelf: \"center\", justifySelf: \"center\"}}>\r\n                                    <FiPlus size=\"40px\" style={{float: \"right\"}}\r\n                                            className=\"button-icon button-icon-bordered\"\r\n                                            onClick={() => this.setState({addStockModal: true})}/>\r\n                                    {this.state.addStockModal && this.addStockModal()}\r\n                                </div>\r\n                                }\r\n                                {detail.stocks && detail.stocks.reverse().map((stock) => {\r\n                                    return (\r\n                                        <div className={`stock-list-item ${stock.type}`}>\r\n                                            <div className=\"stock-list-item-id\">{stock._id}</div>\r\n                                            <div\r\n                                                className=\"stock-list-item-stock\">{`${stock.quantity.toFixed(3)} ${detail.product_unit}`}</div>\r\n                                            {stock.type === \"add\" &&\r\n                                            <div className=\"stock-list-item-type\">Added</div>}\r\n                                            {stock.type === \"remove\" &&\r\n                                            <div className=\"stock-list-item-type\">Removed</div>}\r\n                                            {stock.type === \"used\" &&\r\n                                            <div\r\n                                                className=\"stock-list-item-type\">Used <span\r\n                                                onClick={() => this.props.history.push(\"/invoice/\" + stock.bill_ref)}>\r\n                                                ({stock.bill_ref})</span>\r\n                                            </div>}\r\n                                            <div className=\"stock-list-item-added-by\">\r\n                                                <span>By:</span> {stock.added_by}\r\n                                            </div>\r\n                                            <div className=\"stock-list-item-added-by\">\r\n                                                <span>Date:</span> {getDesiredDateTimeNow(stock.added_date_time)}\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            },\r\n            {\r\n                menuItem: `Services Used (${servicesUsed && servicesUsed.length})`,\r\n                render:\r\n                    <div style={{overflow: \"hidden\", padding: 10}}>\r\n                        <div className=\"Detail-View-Main-Content-Body\">\r\n                            {servicesUsed && servicesUsed.map((service) => {\r\n                                return <ServiceLi service={service} history={this.props.history}\r\n                                                  showSubStatDetail={true} branchId={branchId}/>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n            },\r\n            {\r\n                menuItem: `Invoices (${invoicesAdded && invoicesAdded.length})`,\r\n                render:\r\n                    <div className=\"Detail-View-Main-Content-Body\">\r\n                        {invoicesAdded && invoicesAdded.map((invoice, key) => {\r\n                            return <InvoiceLi invoice={invoice}\r\n                                              history={this.props.history}\r\n                                              key={key} branchId={branchId}/>\r\n                        })}\r\n                    </div>\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">PRODUCT{detail.name ? ` - ${detail.name}` : \"\"}</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        <Loading type=\"simple\" style=\"native\"\r\n                                 loading={loading.getByIdLoading || loading.addStockToProductLoading || loading.postNewProductLoading || this.state.deleteLoading}/>\r\n                        {(!loading.getByIdLoading && !loading.addStockToProductLoading && !loading.postNewProductLoading && !this.state.deleteLoading) &&\r\n                        !detail.deleted && getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"edit\") &&\r\n                        <FiEdit size=\"20px\" style={{margin: 10}} className=\"button-icon\"\r\n                                onClick={() => this.props.modalToggle({\r\n                                    modal: PRODUCT_EDIT_MODAL,\r\n                                    view: true\r\n                                })}/>\r\n                        }\r\n                        {(!loading.getByIdLoading && !loading.addStockToProductLoading && !loading.postNewProductLoading && !this.state.deleteLoading) &&\r\n                        !detail.deleted && getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"delete\") &&\r\n                        <RiDeleteBinLine size=\"20px\" style={{margin: 10}} className=\"button-icon\"\r\n                                         onClick={() => this.setState({showDeleteModal: true})}/>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"page-content\" id=\"pageContent\">\r\n                    <div className=\"Detail-View\">\r\n                        {detailData.type === \"product\" && detail._id &&\r\n                        <div>\r\n                            <div className=\"Detail-View-Main-Content\">\r\n                                <div className=\"Detail-View-Main-Content-Column1\">\r\n                                    <div className=\"Detail-View-Main-Content-Name\">\r\n                                        {detail.name} {detail.deleted && <span>DELETED</span>}\r\n                                    </div>\r\n                                    <div className=\"Detail-View-Main-Content-Id\">\r\n                                        <img className=\"image\"\r\n                                             src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\r\n                                        {detail._id}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"Detail-View-Main-Content-Column2\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"information\">Product Information:</div>\r\n                                        <div className=\"stat\">\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Branch</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.branch ? detail.branch.name : \"NIL\"}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Created On</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {getDesiredDateTimeNow(detail.added_date_time)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Cost</div>\r\n                                                <div className=\"information-val\">{detail.product_cost}</div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Created by</div>\r\n                                                <div className=\"information-val\">{detail.added_by.full_name}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"information\">Stock Information:</div>\r\n                                        <div className=\"stat no-border\">\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Available Stocks</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.available_stocks.toFixed(2)} {detail.product_unit}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Stock Action Count</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.stocks.length}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{paddingTop: 10}}>\r\n                                <Tabs panes={panes} type=\"default\"/>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {modal.productEditModal &&\r\n                <AddOrEditItems type=\"edit-product\" {...this.props} productsData={detail}/>}\r\n\r\n                {\r\n                    this.state.showDeleteModal &&\r\n                    <Modal\r\n                        open={this.state.showDeleteModal}\r\n                        center={false}\r\n                        onClose={() => this.setState({showDeleteModal: false})}\r\n                        showCloseIcon={false}\r\n                        size=\"mini\"\r\n                        header={\r\n                            <div>\r\n                                DELETE PRODUCT: <span>{detail.name}</span>\r\n                            </div>\r\n                        }\r\n                        content={\r\n                            <div style={{padding: 10}}>\r\n                                Are you sure you want to delete this product?\r\n                            </div>\r\n                        }\r\n                        footer={\r\n                            <div>\r\n                                <Button name=\"Delete\"\r\n                                        onClick={async () => {\r\n                                            await this.onSubmitDeleteProduct(detail);\r\n                                        }}/>\r\n                                <Button name=\"Close\" onClick={() => this.setState({showDeleteModal: false})}/>\r\n                            </div>\r\n                        }\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProductDetail));","import React, {Component} from \"react\";\r\nimport './Product.css';\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions, PRODUCT_EDIT_MODAL, SERVICE_EDIT_MODAL} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\nimport {FiEdit, FiPlus} from \"react-icons/fi\";\r\n\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Tabs from \"../../components/Tabs\";\r\nimport {getBranchActionPerm, getDesiredDateTimeNow} from \"../../utils/index\";\r\nimport ProductLi from \"../../components/ListView/ProductLi\";\r\nimport InvoiceLi from \"../../components/ListView/InvoiceLi\";\r\nimport AddOrEditItems from \"./AddOrEditItems\";\r\nimport {RiDeleteBinLine} from \"react-icons/ri\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport api from \"../../utils/api\";\r\n\r\nclass ServiceDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showDeleteModal: false,\r\n            deleteLoading: false\r\n        };\r\n\r\n        this.onSubmitDeleteService = this.onSubmitDeleteService.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        let {id} = this.props.match.params;\r\n        this.props.getById({type: \"service\", id});\r\n    }\r\n\r\n    async onSubmitDeleteService(service) {\r\n        this.setState({showDeleteModal: false, deleteLoading: true});\r\n        try {\r\n            const {currentBranch} = this.props.appModuleData.toJS();\r\n            const {body} = await api({type: \"DELETE\", uri: `service/${currentBranch._id}/${service._id}`});\r\n\r\n            if (!body || body.status === 'error') {\r\n                if (body.data) {\r\n                    this.props.addNotification({message: body.data, level: \"error\"});\r\n                }\r\n            } else {\r\n                let {id} = this.props.match.params;\r\n                this.props.getById({type: \"service\", id});\r\n                if (body.message) {\r\n                    this.props.addNotification({message: body.message, level: \"success\"});\r\n                }\r\n            }\r\n            this.setState({deleteLoading: false});\r\n        } catch (e) {\r\n            this.setState({deleteLoading: false});\r\n            this.props.addNotification({message: e.toString(), level: \"error\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {detailData, modal, loading, myUserAccess, currentBranch} = this.props.appModuleData.toJS();\r\n        const {detail, invoicesAdded} = detailData;\r\n\r\n        const branchId = this.props.match.params.branchId;\r\n\r\n        const panes = [\r\n            {\r\n                menuItem: `Products Used (${detail.product_used && detail.product_used.length})`,\r\n                render:\r\n                    <div style={{overflow: \"hidden\", padding: 10}}>\r\n                        <div className=\"Detail-View-Main-Content-Body\">\r\n                            {detail.product_used && detail.product_used.map((product, key) => {\r\n                                return <ProductLi product={product}\r\n                                                  showAvgUsage={detail.average_stock_usage.filter((asu) => asu._id === product._id)[0]\r\n                                                      ? detail.average_stock_usage.filter((asu) => asu._id === product._id)[0].quantity_used\r\n                                                      : \"0\"}\r\n                                                  history={this.props.history}\r\n                                                  key={key} branchId={branchId}/>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n            },\r\n            {\r\n                menuItem: `Invoices (${invoicesAdded && invoicesAdded.length})`,\r\n                render:\r\n                    <div className=\"Detail-View-Main-Content-Body\">\r\n                        {invoicesAdded && invoicesAdded.map((invoice, key) => {\r\n                            return <InvoiceLi invoice={invoice}\r\n                                              history={this.props.history}\r\n                                              key={key} branchId={branchId}/>\r\n                        })}\r\n                    </div>\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">SERVICE{detail.name ? ` - ${detail.name}` : \"\"}</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        <Loading type=\"simple\" style=\"native\"\r\n                                 loading={loading.getByIdLoading || loading.updateServiceLoading}/>\r\n                        {((!loading.getByIdLoading && !loading.updateServiceLoading && !this.state.deleteLoading) &&\r\n                            !detail.deleted && getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"edit\")) &&\r\n                        <FiEdit size=\"20px\" style={{margin: 10}} className=\"button-icon\"\r\n                                onClick={() => this.props.modalToggle({modal: SERVICE_EDIT_MODAL, view: true})}/>\r\n                        }\r\n                        {(!loading.getByIdLoading && !loading.updateServiceLoading && !this.state.deleteLoading) &&\r\n                        !detail.deleted && getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"delete\") &&\r\n                        <RiDeleteBinLine size=\"20px\" style={{margin: 10}} className=\"button-icon\"\r\n                                         onClick={() => this.setState({showDeleteModal: true})}/>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"actual-content\" id=\"pageContent\">\r\n                    <div className=\"Detail-View\">\r\n                        {detailData.type === \"service\" && detail._id &&\r\n                        <div>\r\n                            <div className=\"Detail-View-Main-Content\">\r\n                                <div className=\"Detail-View-Main-Content-Column1\">\r\n                                    <div className=\"Detail-View-Main-Content-Name\">\r\n                                        {detail.name} {detail.deleted && <span>DELETED</span>}\r\n                                    </div>\r\n                                    <div className=\"Detail-View-Main-Content-Id\">\r\n                                        <img className=\"image\"\r\n                                             src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\r\n                                        {detail._id}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"Detail-View-Main-Content-Column2\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"information\">Service Information:</div>\r\n                                        <div className=\"stat\">\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Branch</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.branch ? detail.branch.name : \"NIL\"}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Created On</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {getDesiredDateTimeNow(detail.added_date_time)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Cost</div>\r\n                                                <div className=\"information-val\">{detail.service_cost}</div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Created by</div>\r\n                                                <div className=\"information-val\">{detail.added_by.full_name}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"information\">Product Information:</div>\r\n                                        <div className=\"stat no-border\">\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">No of Products Used</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.product_used.length}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{paddingTop: 10}}>\r\n                                <Tabs panes={panes} type=\"default\"/>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {modal.serviceEditModal &&\r\n                <AddOrEditItems type=\"edit-service\" {...this.props} serviceData={detail}/>}\r\n\r\n                {\r\n                    this.state.showDeleteModal &&\r\n                    <Modal\r\n                        open={this.state.showDeleteModal}\r\n                        center={false}\r\n                        onClose={() => this.setState({showDeleteModal: false})}\r\n                        showCloseIcon={false}\r\n                        size=\"mini\"\r\n                        header={\r\n                            <div>\r\n                                DELETE Service: <span>{detail.name}</span>\r\n                            </div>\r\n                        }\r\n                        content={\r\n                            <div style={{padding: 10}}>\r\n                                Are you sure you want to delete this service?\r\n                            </div>\r\n                        }\r\n                        footer={\r\n                            <div>\r\n                                <Button name=\"Delete\"\r\n                                        onClick={async () => {\r\n                                            await this.onSubmitDeleteService(detail);\r\n                                        }}/>\r\n                                <Button name=\"Close\" onClick={() => this.setState({showDeleteModal: false})}/>\r\n                            </div>\r\n                        }\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ServiceDetail));","import React, {Component} from \"react\";\r\nimport './invoice.css';\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport Paging from \"../../components/Page\";\r\nimport InvoiceLi from \"../../components/ListView/InvoiceLi\";\r\nimport Button from \"../../components/Button\";\r\nimport {getBranchActionPerm} from \"../../utils/index\";\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: 1\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const urlParams = new URLSearchParams(this.props.location.search);\r\n        this.props.getAllBills(urlParams.get(\"page\") ? urlParams.get(\"page\") : 0);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {allBillData, updateHistoryFn, loading, myUserAccess, currentBranch} = this.props.appModuleData.toJS();\r\n        const branchId = this.props.match.params.branchId;\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">INVOICE</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        {getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"bill\", \"add\") &&\r\n                        <Button name={`ADD INVOICE`}\r\n                                onClick={() => this.props.history.push(`/branch/${branchId}/new-invoice`)}/>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"actual-content\">\r\n                    {allBillData.invoices.map((data, key) => {\r\n                        return (\r\n                            <InvoiceLi invoice={data} history={updateHistoryFn} key={key}\r\n                                       branchId={this.props.match.params.branchId}/>\r\n                        )\r\n                    })}\r\n                    {allBillData.invoices.length === 0 &&\r\n                    <div style={{color: \"#8c8c8c\", padding: 10}} align=\"center\">\r\n                        Nothing to show\r\n                    </div>\r\n                    }\r\n                    <div className=\"float-right\">\r\n                        <Paging\r\n                            loading={loading.getBillLoading}\r\n                            currentPage={allBillData.count.page}\r\n                            totalPages={allBillData.count.totalPages}\r\n                            shownContent={allBillData.invoices.length}\r\n                            totalContent={allBillData.count.total}\r\n                            nextPage={(pg) => this.props.getAllBills(pg)}\r\n                            prevPage={(pg) => this.props.getAllBills(pg)}\r\n                            history={this.props.history}\r\n                            location={this.props.location}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));","import React, {Component} from \"react\";\r\nimport './invoice.css';\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Tabs from \"../../components/Tabs\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Input from \"../../components/Input\";\r\nimport {getBranchActionPerm, getDesiredDateTimeNow} from \"../../utils/index\";\r\nimport ServiceLi from \"../../components/ListView/ServiceLi\";\r\nimport ProductLi from \"../../components/ListView/ProductLi\";\r\nimport bec from \"../../utils/bec\";\r\n\r\nclass InvoiceDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            balancePaidModal: false,\r\n            completeBillLoading: false,\r\n            paidby: \"\",\r\n            amountPaid: null,\r\n            nowPaying: 0\r\n        };\r\n\r\n        this.completeBill = this.completeBill.bind(this);\r\n        this.setCompState = this.setCompState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {id} = this.props.match.params;\r\n        this.props.getById({type: \"invoice\", id});\r\n\r\n    }\r\n\r\n    setCompState(data) {\r\n        this.setState({...data});\r\n    }\r\n\r\n    async completeBill(billData, action) {\r\n        const {getById} = this.props;\r\n        const {setCompState} = this;\r\n        const {currentBranch} = this.props.appModuleData.toJS();\r\n        setCompState({completeBillLoading: true, balancePaidModal: false});\r\n\r\n        try {\r\n            const {body} = await bec({\r\n                type: 'PUT',\r\n                uri: `invoice/${currentBranch._id}/${billData._id}/${action}`,\r\n                obj: {\r\n                    balance_paid: this.state.nowPaying\r\n                }\r\n            })\r\n\r\n            if (!body || body.status === 'error') {\r\n                // window.alert(\"Error while updating password: \" + body.message);\r\n            } else {\r\n                getById({type: \"invoice\", id: billData._id});\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        setCompState({completeBillLoading: false});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {detailData, myUserAccess, loading, currentBranch} = this.props.appModuleData.toJS();\r\n        const {detail} = detailData;\r\n\r\n        const branchId = this.props.match.params.branchId;\r\n\r\n        const panes = [\r\n            {\r\n                menuItem: `Products (${detail.products && detail.products.length})`,\r\n                render:\r\n                    <div style={{overflow: \"hidden\", padding: 10}}>\r\n                        <div className=\"Detail-View-Main-Content-Body\">\r\n                            {detail.products && detail.products.map((product, key) => {\r\n                                return <ProductLi key={key} product={product} history={this.props.history}\r\n                                                  isInvoiceView={true} branchId={branchId}/>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n            },\r\n            {\r\n                menuItem: `Services (${detail.services && detail.services.length})`,\r\n                render:\r\n                    <div style={{overflow: \"hidden\", padding: 10}}>\r\n                        <div className=\"Detail-View-Main-Content-Body\">\r\n                            {detail.services && detail.services.map((service, key) => {\r\n                                return <ServiceLi key={key} service={service} history={this.props.history}\r\n                                                  isInvoiceView={true}\r\n                                                  showSubStatDetail={true} branchId={branchId}/>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">\r\n                        INVOICE{detail._id ? ` - ${detail._id} | ${detail.customer && detail.customer.full_name || detail.customer}` : \"\"}\r\n                    </div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        <Loading type=\"simple\" style=\"native\"\r\n                                 loading={loading.getByIdLoading || this.state.completeBillLoading}/>\r\n                        {(!loading.getByIdLoading && !this.state.completeBillLoading) &&\r\n                        getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"bill\", \"edit\") && detail.state === \"pending\" &&\r\n                        <Button name=\"Balance Paid\"\r\n                                onClick={() => this.setState({\r\n                                    balancePaidModal: !this.state.balancePaidModal,\r\n                                    paidby: myUserAccess.emp_id\r\n                                })}/>\r\n                        }\r\n                        {this.state.balancePaidModal &&\r\n                        <Modal\r\n                            open={true}\r\n                            center={false}\r\n                            onClose={() => this.setState({balancePaidModal: false})}\r\n                            showCloseIcon={false}\r\n                            size=\"big\"\r\n                            header={<div>INVOICE - {detail._id}</div>}\r\n                            content={\r\n                                <div>\r\n                                    <Input type=\"text\"\r\n                                           name=\"Paid by\"\r\n                                           value={this.state.paidby}\r\n                                           onValChange={(data) => this.setState({paidby: data.value})}/>\r\n                                    <Input type=\"text\"\r\n                                           name=\"Total Invoice Amount\"\r\n                                           value={detail.actual_bill_amount}\r\n                                           disabled={true}\r\n                                           onValChange={(data) => {\r\n                                           }}/>\r\n                                    <Input type=\"text\"\r\n                                           name=\"Balance Amount\"\r\n                                           value={detail.actual_bill_amount - detail.paid_amount}\r\n                                           disabled={true}\r\n                                           onValChange={(data) => {\r\n                                           }}/>\r\n                                    <Input type=\"number\"\r\n                                           name=\"Amount Paid\"\r\n                                           disabled={true}\r\n                                           value={detail.paid_amount}\r\n                                           onValChange={(data) => {\r\n                                           }}/>\r\n                                    <Input type=\"number\"\r\n                                           name=\"Now paying\"\r\n                                           value={this.state.nowPaying}\r\n                                           onValChange={(data) => this.setState({nowPaying: data.value})}/>\r\n                                </div>\r\n                            }\r\n                            footer={\r\n                                <div>\r\n                                    <Button name=\"Close\" onClick={() => this.setState({balancePaidModal: false})}/>\r\n                                    <Button name=\"Submit\" onClick={() => this.completeBill(detail, \"paid\")}/>\r\n                                </div>\r\n                            }\r\n\r\n                        />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"actual-content\">\r\n                    <div className=\"Detail-View\">\r\n                        {detailData.type === \"invoice\" && detail._id &&\r\n                        <div>\r\n                            <div className=\"Detail-View-Main-Content\">\r\n                                <div className=\"Detail-View-Main-Content-Column1\">\r\n                                    <div\r\n                                        className=\"Detail-View-Main-Content-Name Detail-View-Main-Content-Name-underline\"\r\n                                        onClick={() => this.props.history.push(`/branch/${branchId}/customer/${detail.customer._id ? detail.customer._id : detail.customer}`)}>\r\n                                        {detail.customer.full_name || detail.customer} {detail.deleted &&\r\n                                    <span>DELETED</span>}\r\n                                    </div>\r\n                                    <div className=\"Detail-View-Main-Content-Id\">\r\n                                        <img className=\"image\"\r\n                                             src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\r\n                                        {detail._id}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"Detail-View-Main-Content-Column2\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"information\">Invoice Information:</div>\r\n                                        <div className=\"stat\">\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Branch</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.branch ? detail.branch.name : \"NIL\"}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Created On</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {getDesiredDateTimeNow(detail.added_date_time)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Created by</div>\r\n                                                <div className=\"information-val\">{detail.added_by.full_name}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"information\">Customer Information:</div>\r\n                                        <div className=\"stat\">\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Name</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.customer.full_name}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Mobile Number</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.customer.mobile_number}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Age</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.customer.age}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Address</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.customer.address}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"information\">Payment Information:</div>\r\n                                        <div className=\"stat no-border\">\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Final Bill Amount</div>\r\n                                                <div className=\"information-val\">{detail.final_bill_amount}</div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Actual Bill Amount</div>\r\n                                                <div className=\"information-val\">{detail.actual_bill_amount}</div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Discount Amount</div>\r\n                                                <div className=\"information-val\">{detail.discount_amount}</div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Paid Amount</div>\r\n                                                <div className=\"information-val\">{detail.paid_amount}</div>\r\n                                            </div>\r\n                                            <div className=\"Detail-View-Main-Content-split\">\r\n                                                <div className=\"information-heading\">Balance Amount</div>\r\n                                                <div className=\"information-val\">\r\n                                                    {detail.final_bill_amount - detail.paid_amount}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{paddingTop: 10}}>\r\n                                <Tabs panes={panes} type=\"default\"/>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(InvoiceDetail));","import React, {Component} from \"react\";\r\nimport './invoice.css';\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appModuleActions as actions} from \"../../AppModule\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from 'react-select';\r\nimport AsyncSelect from 'react-select/async';\r\nimport {FormClose as GrommetFormClose, Edit as GrommetEdit} from 'grommet-icons';\r\n\r\nimport api from \"../../utils/api\";\r\nimport SegmentExpandable from \"../../components/SegmentExpandable\";\r\nimport Input from \"../../components/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\"\r\nimport {getDesiredDateTimeNow, getLocalStorage} from \"../../utils/index\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            branchData: {},\r\n            customerData: {},\r\n            customerQueryList: [],\r\n            items: [],\r\n            discountAmount: 0,\r\n            srcTag: {product: true, service: true},\r\n            showAddRow: true,\r\n            editProductUsed: false,\r\n            editProductUsedIndex: null,\r\n            createInvoice: false,\r\n            billedby: \"\",\r\n            paidby: \"\",\r\n            amountPaid: null\r\n        };\r\n\r\n        this.onLoadCustomers = this.onLoadCustomers.bind(this);\r\n        this.onLoadProductOrService = this.onLoadProductOrService.bind(this);\r\n        this.checkAllInputOkay = this.checkAllInputOkay.bind(this);\r\n        this.onRemoveItem = this.onRemoveItem.bind(this);\r\n        this.onClickSubmit = this.onClickSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const activeBr = this.props.match.params.branchId;\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n        const activeBranchDetail = myUserAccess.access_branches.filter((br) => br._id === Number(activeBr));\r\n        let toUpdate = {};\r\n        if (activeBranchDetail.length > 0) {\r\n            toUpdate.branchData = {\r\n                text: activeBranchDetail[0].name.toUpperCase(),\r\n                value: activeBranchDetail[0]._id\r\n            };\r\n        }\r\n\r\n        if (myUserAccess && myUserAccess.full_name) {\r\n            toUpdate.billedby = myUserAccess.full_name\r\n        }\r\n\r\n        this.setState(toUpdate);\r\n    }\r\n\r\n    async onLoadCustomers(inputVal) {\r\n        if (inputVal) {\r\n            try {\r\n                const {body} = await api({type: \"GET\", uri: `customers?full_name=${inputVal}`});\r\n                return renderCustomerOptions(body.customers);\r\n            } catch (e) {\r\n                // Do nothing\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n\r\n    async onLoadProductOrService(inputVal) {\r\n        if (inputVal) {\r\n            const {currentBranch} = this.props.appModuleData.toJS();\r\n            try {\r\n                const qry = [];\r\n                if (this.state.srcTag.product) {\r\n                    qry.push(`product=${inputVal}`);\r\n                }\r\n                if (this.state.srcTag.service) {\r\n                    qry.push(`service=${inputVal}`);\r\n                }\r\n                const {body} = await api({type: \"GET\", uri: `query/${currentBranch._id}?${qry.join('&')}`});\r\n                return renderProductOrServiceOptions(body)\r\n            } catch (e) {\r\n                // Do nothing\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n\r\n    checkAllInputOkay() {\r\n        return Object.keys(this.state.customerData).length === 0 || this.state.items.length === 0;\r\n    }\r\n\r\n    onRemoveItem(itemKey) {\r\n        const items = this.state.items;\r\n        items.splice(itemKey, 1);\r\n        this.setState({items});\r\n    }\r\n\r\n    onClickSubmit() {\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n        if (!this.state.paidby) {\r\n            return;\r\n        }\r\n        this.props.updateHistoryFun(this.props.history);\r\n        const services = this.state.items.filter((itm) => itm.type === \"service\").map((itm) => {\r\n            return {...itm.fullObj}\r\n        });\r\n        const products = this.state.items.filter((itm) => itm.type === \"product\").map((itm) => {\r\n            return {...itm.fullObj, quantity_used: itm.quantity_used.value}\r\n        });\r\n        this.props.postNewBill({\r\n            customer: this.state.customerData.fullObj,\r\n            services,\r\n            products,\r\n            paid_amount: Number(this.state.amountPaid ? this.state.amountPaid : 0),\r\n            discount_amount: Number(this.state.discountAmount),\r\n            paid_by: this.state.paidby,\r\n            billed_by: myUserAccess.emp_id,\r\n            branch_id: this.state.branchData.branch_id,\r\n            totalBillAmount: totalBillAmountFn(this.state, true),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {myUserAccess, loading} = this.props.appModuleData.toJS();\r\n        const branchId = this.props.match.params.branchId;\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">NEW INVOICE</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        <Button\r\n                            name=\"Create Invoice\"\r\n                            disabled={this.checkAllInputOkay()}\r\n                            onClick={() => this.setState({createInvoice: !this.state.createInvoice})}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"page-content\" id=\"pageContent\">\r\n                    <div className=\"invoice-detail\">\r\n                        <div className=\"invoice-detail-customer\">\r\n                            <div className=\"content-invoice-customer-grid\">\r\n                                <div className=\"content-invoice-customer-label\">\r\n                                    Bill From\r\n                                </div>\r\n                                <div className=\"content-invoice-customer-content\">\r\n                                    <Select\r\n                                        axis=\"y\"\r\n                                        closeMenuOnSelect={true}\r\n                                        value={this.state.branchData}\r\n                                        onChange={(branchData) => this.setState({branchData})}\r\n                                        options={renderBranchOptions(myUserAccess.access_branches)}\r\n                                        getOptionLabel={option => option.text ? option.text : option.value}\r\n                                        getOptionValue={option => option.value}\r\n                                        isDisabled={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"content-invoice-customer-grid\">\r\n                                <div className=\"content-invoice-customer-label\">\r\n                                    Bill To\r\n                                </div>\r\n                                <div className=\"content-invoice-customer-content\">\r\n                                    <div>\r\n                                        <AsyncSelect\r\n                                            closeMenuOnSelect={true}\r\n                                            defaultOptions\r\n                                            loadOptions={async (val) => this.onLoadCustomers(val)}\r\n                                            value={this.state.customerData}\r\n                                            onChange={(customerData) => this.setState({\r\n                                                customerData,\r\n                                                paidby: customerData.text\r\n                                            })}\r\n                                            getOptionLabel={option => option.text ? option.text : option.value}\r\n                                            getOptionValue={option => option.value}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"invoice-detail-date\">\r\n                            <div className=\"content-invoice-customer-split content-invoice-customer-label\">\r\n                                Date\r\n                            </div>\r\n                            <div className=\"content-invoice-customer-split\">\r\n                                <div\r\n                                    className=\"content-invoice-customer-content-text content-invoice-customer-content-text-box\">\r\n                                    {getDesiredDateTimeNow(new Date())}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content-invoice-total\">\r\n                        <div>\r\n                            <div className=\"total-name\">Total</div>\r\n                            <div className=\"amount\">Rs: {totalBillAmountFn(this.state, true)}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"total-name\">Discount</div>\r\n                            <div className=\"amount\"> - Rs: {Number(this.state.discountAmount).toFixed(2)}</div>\r\n                            <div style={{paddingTop: 10, paddingBottom: 10}}>\r\n                                <SegmentExpandable header=\"Add Discount\">\r\n                                    <Input type=\"number\"\r\n                                           name=\"Discount Amount\"\r\n                                           value={this.state.discountAmount}\r\n                                           onValChange={(data) => this.setState({discountAmount: data.value})}/>\r\n                                </SegmentExpandable>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"border-top\">\r\n                            <div className=\"total-name\">Bill Amount</div>\r\n                            <div className=\"amount\">Rs: {totalBillAmountFn(this.state)}</div>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.showAddRow &&\r\n                    <div className=\"content-invoice-search-box\">\r\n                        <div className=\"invoice-src-type invoice-src-type-drop\">\r\n                            <AsyncSelect\r\n                                closeMenuOnSelect={true}\r\n                                defaultOptions\r\n                                loadOptions={async (val) => this.onLoadProductOrService(val)}\r\n                                value={{}}\r\n                                onChange={(productOrService) => {\r\n                                    const items = this.state.items;\r\n                                    productOrService.quantity_used = {key: 1, value: 1};\r\n                                    items.push(productOrService);\r\n                                    this.setState({items})\r\n                                }}\r\n                                menuPlacement=\"top\"\r\n                                menuContainerStyle={{top: 'auto', bottom: '100%'}}\r\n                                placeholder=\"Search Product/Service...\"\r\n                                getOptionLabel={option => option.text ? option.text : option.value}\r\n                                getOptionValue={option => option.value}\r\n                            />\r\n                        </div>\r\n                        <div style={{paddingTop: 10}}>\r\n                                <span className=\"invoice-src-type-checkbox\">\r\n                                    <Checkbox\r\n                                        checked={this.state.srcTag.product}\r\n                                        onChange={() => this.setState({\r\n                                            srcTag: {\r\n                                                ...this.state.srcTag,\r\n                                                product: !this.state.srcTag.product\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                Product\r\n                            </span>\r\n                            <span className=\"invoice-src-type-checkbox\">\r\n                                    <Checkbox\r\n                                        checked={this.state.srcTag.service}\r\n                                        onChange={() => this.setState({\r\n                                            srcTag: {\r\n                                                ...this.state.srcTag,\r\n                                                service: !this.state.srcTag.service\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                Service\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    <div style={{marginBottom: 40}}>\r\n                        <div className=\"content-invoice-items\">\r\n                            <div className=\"content-invoice-item content-invoice-item-header\">\r\n                                <div className=\"ci-item-name justify-center\">Name</div>\r\n                                <div className=\"ci-item-quantity justify-center\">Quantity</div>\r\n                                <div className=\"ci-item-price justify-center\">Price (Rs)</div>\r\n                                <div className=\"ci-item-unit justify-center\">Unit</div>\r\n                                <div className=\"ci-item-total justify-center\">Total</div>\r\n                            </div>\r\n                            {this.state.items.map((item, itemKey) => {\r\n                                return (\r\n                                    <div className=\"content-invoice-item\" key={itemKey}>\r\n                                        {/*<td className=\"ci-td\" style={{overflowY: \"auto\"}}>{item.key}</td>*/}\r\n                                        <div className=\"ci-item-name\">\r\n                                            <div\r\n                                                onClick={() => this.props.history.push(`/branch/${branchId}/${item.type}/${item.key}`)}>\r\n                                                <span>{item.heading}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"ci-item-quantity\">\r\n                                            {item.type === \"product\" &&\r\n                                            <Select\r\n                                                menuPlacement=\"top\"\r\n                                                closeMenuOnSelect={true}\r\n                                                value={item.quantity_used}\r\n                                                onChange={(qty) => {\r\n                                                    const items = this.state.items;\r\n                                                    items[itemKey].quantity_used = qty;\r\n                                                    this.setState({items})\r\n                                                }}\r\n                                                options={renderNumberOptions(15)}\r\n                                                getOptionLabel={option => option.text ? option.text : option.value}\r\n                                                getOptionValue={option => option.value}\r\n                                            />\r\n                                            }\r\n                                            {/*{item.type === \"service\" && item.quantity_used.value}*/}\r\n                                            {item.type === \"service\" &&\r\n                                            <SegmentExpandable\r\n                                                header={\r\n                                                    item.fullObj.product_used.map((prUsd, key) => {\r\n                                                        const avgUsd = item.fullObj.average_stock_usage\r\n                                                            .filter((p) => p._id === prUsd._id);\r\n                                                        return `${avgUsd[0] ? avgUsd[0].quantity_used : 0} ${prUsd.product_unit} of ${prUsd.name}`\r\n                                                    }).join(\", \")\r\n                                                }\r\n                                                action={\r\n                                                    <span className=\"content-invoice-table-avg-product-used-action\"\r\n                                                          style={{float: \"right\"}}\r\n                                                          onClick={() => this.setState({\r\n                                                              editProductUsed: true,\r\n                                                              editProductUsedIndex: itemKey\r\n                                                          })}>\r\n                                                                    <GrommetEdit size='small'/>\r\n                                                                </span>\r\n                                                }\r\n                                                expandAtStart={false}>\r\n                                                {item.fullObj.product_used.map((prUsd, key) => {\r\n                                                    const avgUsd = item.fullObj.average_stock_usage\r\n                                                        .filter((p) => p._id === prUsd._id);\r\n                                                    return (\r\n                                                        <div key={key}\r\n                                                             className=\"content-invoice-table-avg-product-used\"\r\n                                                             align=\"center\">\r\n                                                            {`${avgUsd[0] ? avgUsd[0].quantity_used : 0} ${prUsd.product_unit}`}\r\n                                                            <span style={{fontSize: 10}}>\r\n                                                                            {` of `}\r\n                                                                        </span>\r\n                                                            <span style={{fontWeight: \"bold\", fontStyle: \"italic\"}}>\r\n                                                                            {`${prUsd.name}`}\r\n                                                                        </span>\r\n                                                        </div>\r\n                                                    )\r\n                                                })}\r\n                                            </SegmentExpandable>}\r\n                                        </div>\r\n                                        <div className=\"ci-item-price\">\r\n                                            {item.type === \"product\" && item.fullObj.product_cost.toFixed(2)}\r\n                                            {item.type === \"service\" && item.fullObj.service_cost.toFixed(2)}\r\n                                        </div>\r\n                                        <div className=\"ci-item-unit\">\r\n                                            {item.type === \"product\" && item.fullObj.product_unit}\r\n                                            {item.type === \"service\" && \"nil\"}\r\n                                        </div>\r\n                                        <div className=\"ci-item-total\">\r\n                                            Rs:\r\n                                            <span className=\"item-amount\">\r\n                                                        {item.type === \"product\" && (Number(item.quantity_used.key) * item.fullObj.product_cost).toFixed(2)}\r\n                                                {item.type === \"service\" && (Number(item.quantity_used.key) * item.fullObj.service_cost).toFixed(2)}\r\n                                                    </span>\r\n                                        </div>\r\n                                        <div className=\"ci-item-cancel\">\r\n                                            <GrommetFormClose onClick={() => this.onRemoveItem(itemKey)}/>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {this.state.editProductUsed &&\r\n                    <Modal\r\n                        open={true}\r\n                        center={false}\r\n                        onClose={() => this.setState({editProductUsed: false})}\r\n                        showCloseIcon={false}\r\n                        size=\"big\"\r\n                        header={\r\n                            <div>\r\n                                Edit Product used quantity - {this.state.editProductUsedIndex !== null &&\r\n                            this.state.items[this.state.editProductUsedIndex] &&\r\n                            this.state.items[this.state.editProductUsedIndex].fullObj &&\r\n                            this.state.items[this.state.editProductUsedIndex].fullObj.name}\r\n                            </div>\r\n                        }\r\n                        content={\r\n                            <div>\r\n                                {this.state.editProductUsedIndex !== null &&\r\n                                this.state.items[this.state.editProductUsedIndex] &&\r\n                                this.state.items[this.state.editProductUsedIndex].fullObj &&\r\n                                this.state.items[this.state.editProductUsedIndex].fullObj.product_used.length > 0 &&\r\n                                <div className=\"product-avg-usage-box\">\r\n                                    {\r\n                                        this.state.items[this.state.editProductUsedIndex].fullObj.product_used.map((prUdObj, key) => {\r\n                                            const avgUsd = this.state.items[this.state.editProductUsedIndex].fullObj.average_stock_usage.filter((p) => p._id === prUdObj._id);\r\n                                            return (\r\n                                                <div key={key}>\r\n                                                    <Input type=\"number\"\r\n                                                           name={`Average quantity of ${prUdObj.name} used in ${prUdObj.product_unit} (${prUdObj.available_stocks} ${prUdObj.product_unit} available)`}\r\n                                                           value={avgUsd[0] ? avgUsd[0].quantity_used : 0}\r\n                                                           onValChange={(data) => {\r\n                                                               const items = this.state.items;\r\n                                                               items[this.state.editProductUsedIndex].fullObj.average_stock_usage = this.state.items[this.state.editProductUsedIndex].fullObj.average_stock_usage.map((avgStckUsd) => {\r\n                                                                   if ((prUdObj._id === avgStckUsd._id) && (Number(data.value) <= prUdObj.available_stocks)) {\r\n                                                                       avgStckUsd.quantity_used = Number(data.value);\r\n                                                                   }\r\n                                                                   return avgStckUsd;\r\n                                                               });\r\n                                                               this.setState({items})\r\n                                                           }}/>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                        footer={\r\n                            <div>\r\n                                <Button name=\"Close\" onClick={() => this.setState({editProductUsed: false})}/>\r\n                            </div>\r\n                        }\r\n\r\n                    />}\r\n\r\n                    {this.state.createInvoice &&\r\n                    <Modal\r\n                        open={true}\r\n                        center={false}\r\n                        onClose={() => this.setState({editProductUsed: false})}\r\n                        showCloseIcon={false}\r\n                        size=\"big\"\r\n                        header={<div>INVOICE - {this.state.customerData.text}</div>}\r\n                        content={\r\n                            <div>\r\n                                {/* <Input type=\"text\"\r\n                                        name=\"Billed by\"\r\n                                        value={this.state.billedby}\r\n                                        onValChange={(data) => this.setState({ billedby: data.value })} /> */}\r\n                                <Input type=\"text\"\r\n                                       name=\"Paid by\"\r\n                                       disabled={true}\r\n                                       value={this.state.paidby}\r\n                                       onValChange={(data) => this.setState({paidby: data.value})}/>\r\n                                <Input type=\"text\"\r\n                                       name=\"Total Invoice Amount\"\r\n                                       value={totalBillAmountFn(this.state)}\r\n                                       disabled={true}\r\n                                       onValChange={(data) => {\r\n                                       }}/>\r\n                                <Input type=\"number\"\r\n                                       name=\"Amount Paid\"\r\n                                       value={this.state.amountPaid}\r\n                                       onValChange={(data) => this.setState({amountPaid: data.value})}/>\r\n                                <Loading loading={loading.postNewBillLoading}/>\r\n                            </div>\r\n                        }\r\n                        footer={\r\n                            <div>\r\n                                <Button name=\"Close\" onClick={() => this.setState({createInvoice: false})}/>\r\n                                <Button name=\"Submit\" disabled={!this.state.amountPaid}\r\n                                        onClick={() => this.onClickSubmit()}/>\r\n                            </div>\r\n                        }\r\n\r\n                    />}\r\n\r\n                    {/*<div className=\"content-invoice-add-product-service\"*/}\r\n                    {/*onClick={() => this.setState({showAddRow: !this.state.showAddRow})}>*/}\r\n                    {/*<span><FormAdd/></span> <span className=\"text\">Add Product/Service</span>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));\r\n\r\nconst totalBillAmountFn = function (state, actual = false) {\r\n    let bill = 0;\r\n    state.items.forEach((itm) => {\r\n        if (itm.type === \"product\") {\r\n            bill += itm.quantity_used.value * itm.fullObj.product_cost;\r\n        } else if (itm.type === \"service\") {\r\n            bill += itm.quantity_used.value * itm.fullObj.service_cost;\r\n        }\r\n    });\r\n\r\n    return (actual ? bill : bill - state.discountAmount).toFixed(2);\r\n};\r\n\r\nconst renderCustomerOptions = function (data) {\r\n    let customerOptions = [];\r\n    data.filter((o) => !o.deleted).forEach((pD) => {\r\n        customerOptions.push({key: pD._id, value: pD._id, text: `${pD.full_name} (${pD.mobile_number})`, fullObj: pD})\r\n    });\r\n    return customerOptions;\r\n};\r\n\r\nconst renderBranchOptions = function (data) {\r\n    return data.filter((o) => !o.deleted).map((br) => {\r\n        return {text: br.name.toUpperCase(), value: br._id}\r\n    });\r\n};\r\n\r\nconst renderProductOrServiceOptions = function (data) {\r\n    let options = [];\r\n    data.products.filter((o) => !o.deleted).forEach((pD) => {\r\n        options.push({\r\n            key: pD._id,\r\n            value: pD._id,\r\n            text: <span>\r\n                <span className=\"typeLabel\">Product</span>\r\n                <span>{`${pD.name}`}</span>\r\n                <span style={{float: \"right\", fontWeight: \"bold\"}}>{`  Rs: ${pD.product_cost}`}</span>\r\n                <span style={{float: \"right\", paddingRight: 10}}>{`Stocks Available: ${pD.available_stocks}  `}</span>\r\n            </span>,\r\n            heading: <span>\r\n                <span className=\"typeLabel\">Product</span>\r\n                <span className=\"Detail-View-Main-Content-Name-underline\">{`${pD.name}`}</span>\r\n            </span>,\r\n            type: \"product\",\r\n            fullObj: pD\r\n        })\r\n    });\r\n    data.services.filter((o) => !o.deleted).forEach((pD) => {\r\n        options.push({\r\n            key: pD._id,\r\n            value: pD._id,\r\n            text: <span>\r\n                <span className=\"typeLabel\">Service</span>\r\n                <span>{`${pD.name}`}</span>\r\n                <span style={{float: \"right\"}}>{`Rs: ${pD.service_cost}`}</span>\r\n            </span>,\r\n            heading: <span>\r\n                <span className=\"typeLabel\">Service</span>\r\n                <span className=\"Detail-View-Main-Content-Name-underline\">{`${pD.name}`}</span>\r\n            </span>,\r\n            type: \"service\",\r\n            fullObj: pD\r\n        })\r\n    });\r\n    return options;\r\n};\r\n\r\nconst renderNumberOptions = (num) => {\r\n    const li = [];\r\n    for (let i = 1; i <= num; i++) {\r\n        li.push({key: i, text: i, value: i});\r\n    }\r\n    return li;\r\n};\r\n\r\nconst Checkbox = props => <input type=\"checkbox\" {...props} />;","import React, {Component} from \"react\";\r\n\r\nimport Modal from \"../../components/Modal\";\r\nimport Input from \"../../components/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport Loading from \"../../components/Loading\";\r\nimport {options as genderOptions} from \"../../components/ListView/CustomerLi\";\r\nimport api from \"../../utils/api\";\r\nimport {appModuleActions as actions, CUSTOMER_ADD_MODAL} from \"../../AppModule\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass AddCustomer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            addCustomerData: {\r\n                name: \"\",\r\n                email: \"\",\r\n                address: \"\",\r\n                age: null,\r\n                mobileNo: null,\r\n                branch_id: null,\r\n                gender: genderOptions[1]\r\n            },\r\n            addCustomerLoading: false,\r\n            isSuccessIndicator: false\r\n\r\n        };\r\n\r\n        this.onSubmitAddCustomer = this.onSubmitAddCustomer.bind(this);\r\n        this.isAllInputOkay = this.isAllInputOkay.bind(this);\r\n    }\r\n\r\n    async onSubmitAddCustomer(custData) {\r\n        const {allCustomerData, currentBranch} = this.props.appModuleData.toJS();\r\n        const branchId = this.props.match.params.branchId;\r\n        this.setState({\r\n            addCustomerLoading: true,\r\n            isSuccessIndicator: false,\r\n            message: {}\r\n        });\r\n        const obj = {\r\n            name: custData.full_name,\r\n            email: custData.email,\r\n            gender: custData.gender.value,\r\n            address: custData.address,\r\n            age: Number(custData.age),\r\n            mobileNo: Number(custData.mobile_number),\r\n            branch_id: Number(branchId)\r\n        };\r\n\r\n        try {\r\n            const {body} = await api({type: \"POST\", uri: \"customer/\" + currentBranch._id, obj});\r\n            this.setState({\r\n                addCustomerLoading: false,\r\n                isSuccessIndicator: true,\r\n                message: {type: \"success\", text: body.message}\r\n            });\r\n\r\n            this.props.modalToggle({modal: CUSTOMER_ADD_MODAL, view: false});\r\n            this.props.getAllCustomer(allCustomerData.count.page);\r\n            setTimeout(async () => {\r\n                this.setState({isSuccessIndicator: false, successMessage: \"\"});\r\n            }, 4000);\r\n        } catch (e) {\r\n            this.setState({\r\n                addCustomerLoading: false,\r\n                isSuccessIndicator: true,\r\n                message: {type: \"error\", text: e.toString()}\r\n            });\r\n        }\r\n    }\r\n\r\n    isAllInputOkay() {\r\n        const {addCustomerData} = this.state;\r\n        return !addCustomerData.full_name\r\n            || (addCustomerData.mobile_number && !addCustomerData.mobile_number.toString())\r\n            || !addCustomerData.gender\r\n            || (addCustomerData.age && !addCustomerData.age.toString())\r\n            || (addCustomerData.mobile_number && addCustomerData.mobile_number.length !== 10)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                open={true}\r\n                center={false}\r\n                onClose={() => {\r\n                    this.setState({\r\n                        addCustomerLoading: false,\r\n                        isSuccessIndicator: false,\r\n                        message: {},\r\n                        addCustomerData: {gender: genderOptions[1]},\r\n                    });\r\n                    this.props.modalToggle({modal: CUSTOMER_ADD_MODAL, view: false});\r\n                }}\r\n                showCloseIcon={false}\r\n                size=\"big\"\r\n                header={\r\n                    <div>\r\n                        ADD CUSTOMER\r\n                    </div>\r\n                }\r\n                content={\r\n                    <div>\r\n                        {this.state.isSuccessIndicator &&\r\n                        <div\r\n                            className={this.state.message.type === \"success\" ? \"customer-li-success-msg\" : \"customer-li-error-msg\"}>\r\n                            {this.state.message.text}\r\n                        </div>\r\n                        }\r\n\r\n                        {/*{myUserAccess.role === \"admin\" &&*/}\r\n                        {/*<Input name={\"Branch\"}*/}\r\n                        {/*       value={this.state.addCustomerData.branch}*/}\r\n                        {/*       type=\"select\"*/}\r\n                        {/*       required={true}*/}\r\n                        {/*       options={allBranchOptions}*/}\r\n                        {/*       onValChange={(data) => {*/}\r\n                        {/*           this.setState({*/}\r\n                        {/*               addCustomerData: {*/}\r\n                        {/*                   ...this.state.addCustomerData,*/}\r\n                        {/*                   branch: data*/}\r\n                        {/*               }*/}\r\n                        {/*           })*/}\r\n                        {/*       }}*/}\r\n                        {/*/>*/}\r\n                        {/*}*/}\r\n\r\n                        <Input name={\"Name\"}\r\n                               value={this.state.addCustomerData.full_name}\r\n                               required={true}\r\n                               onValChange={(data) => {\r\n                                   this.setState({\r\n                                       addCustomerData: {\r\n                                           ...this.state.addCustomerData,\r\n                                           full_name: data.value\r\n                                       }\r\n                                   })\r\n                               }}\r\n                        />\r\n\r\n                        <Input name={\"Mobile Number\"}\r\n                               value={this.state.addCustomerData.mobile_number}\r\n                               type=\"mobile_number\"\r\n                               maxLength=\"10\"\r\n                               required={true}\r\n                               onValChange={(data) => {\r\n                                   this.setState({\r\n                                       addCustomerData: {\r\n                                           ...this.state.addCustomerData,\r\n                                           mobile_number: data.value\r\n                                       }\r\n                                   })\r\n                               }}\r\n                        />\r\n\r\n                        <Input name={\"Home Address\"}\r\n                               value={this.state.addCustomerData.address}\r\n                               type=\"textarea\"\r\n                               onValChange={(data) => {\r\n                                   this.setState({\r\n                                       addCustomerData: {\r\n                                           ...this.state.addCustomerData,\r\n                                           address: data.value\r\n                                       }\r\n                                   })\r\n                               }}\r\n                        />\r\n\r\n                        <Input name={\"Email\"}\r\n                               value={this.state.addCustomerData.email}\r\n                               onValChange={(data) => {\r\n                                   this.setState({\r\n                                       addCustomerData: {\r\n                                           ...this.state.addCustomerData,\r\n                                           email: data.value\r\n                                       }\r\n                                   })\r\n                               }}\r\n                        />\r\n\r\n                        <Input name={\"Age\"}\r\n                               value={this.state.addCustomerData.age}\r\n                               type=\"number\"\r\n                               maxLength=\"2\"\r\n                               required={true}\r\n                               onValChange={(data) => {\r\n                                   this.setState({\r\n                                       addCustomerData: {\r\n                                           ...this.state.addCustomerData,\r\n                                           age: data.value\r\n                                       }\r\n                                   })\r\n                               }}\r\n                        />\r\n\r\n                        <Input name={\"Gender\"}\r\n                               value={this.state.addCustomerData.gender}\r\n                               type=\"select\"\r\n                               required={true}\r\n                               options={genderOptions}\r\n                               onValChange={(data) => {\r\n                                   this.setState({\r\n                                       addCustomerData: {\r\n                                           ...this.state.addCustomerData,\r\n                                           gender: data\r\n                                       }\r\n                                   })\r\n                               }}\r\n                        />\r\n                        <Loading loading={this.state.addCustomerLoading}/>\r\n                    </div>\r\n                }\r\n                footer={\r\n                    <div>\r\n                        <Button name=\"Submit\"\r\n                                disabled={this.isAllInputOkay()}\r\n                                onClick={async () => {\r\n                                    await this.onSubmitAddCustomer(this.state.addCustomerData)\r\n                                }}/>\r\n                        <Button name=\"Close\" onClick={() => {\r\n                            this.setState({\r\n                                addCustomerLoading: false,\r\n                                isSuccessIndicator: false,\r\n                                message: {},\r\n                                addCustomerData: {gender: genderOptions[1]},\r\n                            });\r\n                            this.props.modalToggle({modal: CUSTOMER_ADD_MODAL, view: false});\r\n                        }}/>\r\n                    </div>\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddCustomer));","import React, {Component} from \"react\";\r\nimport Checkbox from \"react-simple-checkbox\";\r\n\r\nimport \"./style.css\";\r\nimport Dropdown from \"../DropDown\";\r\nimport Modal from '../Modal';\r\nimport Button from \"../Button\";\r\nimport api from \"../../utils/api\";\r\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\r\n\r\nexport const options = [\r\n    {value: 'male', label: 'Male'},\r\n    {value: 'female', label: 'Female'}\r\n];\r\n\r\nclass UserGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showDetailModal: false,\r\n            showEditModal: false,\r\n            editCustomerData: {},\r\n            editLoading: false,\r\n            showDeleteModal: false,\r\n            deleteCustomerData: {},\r\n            isSuccessIndicator: false,\r\n            message: {\r\n                type: \"\",\r\n                text: \"\"\r\n            },\r\n        };\r\n\r\n        this.isAllInputOkay = this.isAllInputOkay.bind(this);\r\n        this.onSubmitEditCustomer = this.onSubmitEditCustomer.bind(this);\r\n        this.onSubmitDeleteCustomer = this.onSubmitDeleteCustomer.bind(this);\r\n    }\r\n\r\n    async onSubmitEditCustomer(customer) {\r\n        this.setState({showEditModal: false, editLoading: true});\r\n        const obj = {\r\n            name: customer.full_name,\r\n            email: customer.email,\r\n            gender: customer.gender.value,\r\n            address: customer.address,\r\n            age: customer.age,\r\n            mobileNo: customer.mobile_number\r\n        };\r\n        try {\r\n            const {body} = await api({type: \"PUT\", uri: \"customer/\" + customer._id, obj});\r\n            this.setState({\r\n                editLoading: false,\r\n                isSuccessIndicator: true,\r\n                message: {type: \"success\", text: body.message}\r\n            });\r\n\r\n            this.props.getAllCustomer(this.props.page);\r\n            setTimeout(async () => {\r\n                this.setState({isSuccessIndicator: false, successMessage: \"\"});\r\n            }, 4000);\r\n        } catch (e) {\r\n            this.setState({\r\n                editLoading: false,\r\n                isSuccessIndicator: true,\r\n                message: {type: \"error\", text: e.toString()}\r\n            });\r\n        }\r\n    }\r\n\r\n    async onSubmitDeleteCustomer(customer) {\r\n        this.setState({showDeleteModal: false, editLoading: true});\r\n        try {\r\n            const {body} = await api({type: \"DELETE\", uri: \"customer/\" + customer._id});\r\n            this.setState({\r\n                editLoading: false,\r\n                isSuccessIndicator: true,\r\n                message: {type: \"success\", text: body.message}\r\n            });\r\n\r\n            this.props.getAllCustomer(this.props.page);\r\n            setTimeout(async () => {\r\n                this.setState({isSuccessIndicator: false, successMessage: \"\"});\r\n            }, 4000);\r\n        } catch (e) {\r\n            this.setState({\r\n                editLoading: false,\r\n                isSuccessIndicator: true,\r\n                message: {type: \"error\", text: e.toString()}\r\n            });\r\n        }\r\n    }\r\n\r\n    isAllInputOkay() {\r\n        const {editCustomerData} = this.state;\r\n        return !editCustomerData.full_name || !editCustomerData.mobile_number || !editCustomerData.gender || !editCustomerData.age\r\n    }\r\n\r\n    render() {\r\n        const {user, type, onClickAction} = this.props;\r\n\r\n        const userOptions = [];\r\n\r\n        if (!user.deleted) {\r\n            if (type === \"branch\") {\r\n                userOptions.push(\r\n                    {\r\n                        icon: \"view-detail\",\r\n                        value: \"view-detail\"\r\n                    }, {\r\n                        icon: \"edit permission\",\r\n                        value: \"edit permission\"\r\n                    }, {\r\n                        icon: \"remove from branch\",\r\n                        value: \"remove from branch\"\r\n                    }\r\n                );\r\n            } else {\r\n                userOptions.push(\r\n                    {\r\n                        icon: \"view-detail\",\r\n                        value: \"view-detail\"\r\n                    }, {\r\n                        icon: \"edit\",\r\n                        value: \"edit\"\r\n                    }, {\r\n                        icon: \"delete\",\r\n                        value: \"delete\"\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"grid-main\">\r\n                <div>\r\n                    <div className=\"grid-split grid-name\">\r\n                        {user.full_name}\r\n                    </div>\r\n                    <div className=\"grid-split\" style={{float: \"right\"}}>\r\n                        <Dropdown\r\n                            list={userOptions}\r\n                            onSelectOption={(val) => {\r\n                                if (val === \"view-detail\") {\r\n                                    this.setState({showDetailModal: true});\r\n                                } else {\r\n                                    if (!!onClickAction) onClickAction(val, user);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-padding\">\r\n                    {user.mobile_number &&\r\n                    <div className=\"grid-split\">\r\n                        <img style={{width: 15}} src=\"https://img.icons8.com/carbon-copy/100/000000/phone.png\"/>\r\n                        <div className=\"grid-split\">\r\n                            {user.mobile_number}\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n                <div>\r\n                    {user._id &&\r\n                    <div className=\"grid-split grid-label\">\r\n                        {user._id}\r\n                    </div>}\r\n                    {user.added_date_time && <div className=\"grid-split grid-label\">\r\n                        {getDesiredDateTimeNow(user.added_date_time)}\r\n                    </div>}\r\n                    {user.deleted &&\r\n                    <div className=\"grid-split grid-deleted\">\r\n                        Deleted\r\n                    </div>}\r\n                </div>\r\n\r\n                <Modal\r\n                    open={this.state.showDetailModal}\r\n                    center={false}\r\n                    onClose={() => this.setState({showDetailModal: false})}\r\n                    showCloseIcon={false}\r\n                    size=\"big\"\r\n                    header={\r\n                        <div>\r\n                            Employee Detail - {user.full_name}\r\n                        </div>\r\n                    }\r\n                    content={\r\n                        <div style={{padding: 10}}>\r\n                            <div className=\"Detail-View\">\r\n                                <div className=\"Detail-View-Main-Content\">\r\n                                    <div className=\"Detail-View-Main-Content-Column1\">\r\n                                        <div className=\"Detail-View-Main-Content-Name\">\r\n                                            {user.full_name}\r\n                                        </div>\r\n                                        <div className=\"Detail-View-Main-Content-Id\">\r\n                                            <img className=\"image\"\r\n                                                 src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\r\n                                            {user._id}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"Detail-View-Main-Content-Column2\">\r\n                                        <div className=\"container\">\r\n                                            <div className=\"information\">User Information:</div>\r\n                                            <div className=\"stat no-border\">\r\n                                                <div className=\"Detail-View-Main-Content-split\">\r\n                                                    <div className=\"information-heading\">Created On</div>\r\n                                                    <div className=\"information-val\">\r\n                                                        {getDesiredDateTimeNow(user.added_date_time)}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"Detail-View-Main-Content-split\">\r\n                                                    <div className=\"information-heading\">Mobile Number</div>\r\n                                                    <div className=\"information-val\">{user.mobile_number}</div>\r\n                                                </div>\r\n                                                {user.added_by &&\r\n                                                <div className=\"Detail-View-Main-Content-split\">\r\n                                                    <div className=\"information-heading\">Created by</div>\r\n                                                    <div\r\n                                                        className=\"information-val\">{user.added_by}\r\n                                                    </div>\r\n                                                </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {type === \"branch\" &&\r\n                            <div className=\"employee-permission\">\r\n                                <div className=\"employee-permission-header-name\"> User Permissions</div>\r\n                                <div className=\"employee-permission-box\">\r\n                                    {user.perm &&\r\n                                    <table className=\"content-header-table\">\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td className=\"content-header-name\">Invoice</td>\r\n                                            <td className=\"content-header-name\">Customer</td>\r\n                                            <td className=\"content-header-name\">Items</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"content-header-name\">\r\n                                                <Checkbox disabled checked={user.perm.bill.add}/> Add\r\n                                                <br/>\r\n                                                <Checkbox disabled checked={user.perm.bill.view}/> View\r\n                                                <br/>\r\n                                                <Checkbox disabled checked={user.perm.bill.edit}/> Edit\r\n                                                <br/>\r\n                                                <Checkbox disabled checked={user.perm.bill.delete}/> Delete\r\n                                                <br/>\r\n                                            </td>\r\n                                            <td className=\"content-header-name\">\r\n                                                <Checkbox disabled checked={user.perm.customer.add}/> Add <br/>\r\n                                                <Checkbox disabled checked={user.perm.customer.view}/> View <br/>\r\n                                                <Checkbox disabled checked={user.perm.customer.edit}/> Edit <br/>\r\n                                                <Checkbox disabled\r\n                                                          checked={user.perm.customer.delete}/> Delete <br/>\r\n                                            </td>\r\n                                            <td className=\"content-header-name\">\r\n                                                <Checkbox disabled checked={user.perm.items.add}/> Add <br/>\r\n                                                <Checkbox disabled checked={user.perm.items.view}/> View <br/>\r\n                                                <Checkbox disabled checked={user.perm.items.edit}/> Edit <br/>\r\n                                                <Checkbox disabled\r\n                                                          checked={user.perm.items.delete}/> Delete <br/>\r\n                                            </td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>}\r\n                                </div>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    footer={\r\n                        <div>\r\n                            <Button name=\"Close\" onClick={() => this.setState({showDetailModal: false})}/>\r\n                        </div>\r\n                    }\r\n\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default UserGrid;","import React, {Component} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {appModuleActions as actions, BRANCH_ADD_MODAL, BRANCH_EDIT_MODAL, PRODUCT_EDIT_MODAL} from \"../../AppModule\";\r\n\r\nimport \"./style.css\";\r\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\r\nimport UserLi from \"../../components/ListView/UserLi\";\r\nimport Tabs from \"../../components/Tabs\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Checkbox from \"react-simple-checkbox\";\r\nimport api from \"../../utils/api\";\r\nimport Loading from \"../../components/Loading\";\r\nimport {IoIosAdd} from \"react-icons/io\";\r\nimport UserGrid from \"../../components/GridView/UserGrid\";\r\nimport {FiEdit} from \"react-icons/fi\";\r\nimport AddOrEditBranch from \"./AddOrEditBranch\";\r\nimport {RiDeleteBinLine} from \"react-icons/ri\";\r\n\r\nclass Settings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            deleteBranchModal: false,\r\n            whichBranch: {},\r\n            updatePermissionModal: false,\r\n            updatePermissionData: {},\r\n            updateData: {},\r\n            removeUserModal: false,\r\n            settingsLoading: false,\r\n            showDeleteModal: false\r\n        };\r\n\r\n        this.onClickAction = this.onClickAction.bind(this);\r\n        this.isAllInputOkay = this.isAllInputOkay.bind(this)\r\n        this.onChangePermission = this.onChangePermission.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.onClickUpdatePermission = this.onClickUpdatePermission.bind(this);\r\n        this.onClickRemoveUser = this.onClickRemoveUser.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        let {branchId} = this.props.match.params;\r\n        this.props.getById({type: \"branch\", branchId});\r\n    }\r\n\r\n    onClickAction(type, userData) {\r\n        if (type === \"edit permission\") {\r\n            this.setState({updatePermissionModal: true, updatePermissionData: userData.perm, updateData: userData});\r\n        } else if (type === \"remove from branch\") {\r\n            this.setState({removeUserModal: true, updateData: userData});\r\n        }\r\n    }\r\n\r\n    isAllInputOkay() {\r\n        const {updatePermissionData} = this.state;\r\n        return false\r\n    }\r\n\r\n    onChangePermission(type, action, permFlag) {\r\n        let {updatePermissionData} = this.state;\r\n        updatePermissionData[type][action] = permFlag;\r\n        this.setState({updatePermissionData});\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            updatePermissionData: {},\r\n            updatePermissionModal: false,\r\n            updateData: {},\r\n            removeUserModal: false,\r\n        });\r\n    }\r\n\r\n    async onClickUpdatePermission() {\r\n        const {currentBranch} = this.props.appModuleData.toJS();\r\n        this.setState({settingsLoading: true});\r\n\r\n        try {\r\n            const {body} = await api({\r\n                type: \"PUT\",\r\n                uri: `branch/${currentBranch._id}/${this.state.updateData._id}`,\r\n                obj: {perm: this.state.updatePermissionData}\r\n            });\r\n            this.props.getById({type: \"branch\", branchId: currentBranch._id});\r\n            this.closeModal();\r\n            this.props.addNotification({\r\n                message: body.message,\r\n                level: \"success\"\r\n            });\r\n        } catch (e) {\r\n            this.props.addNotification({\r\n                message: e.toString(),\r\n                level: \"error\"\r\n            });\r\n        }\r\n        this.setState({settingsLoading: false});\r\n    }\r\n\r\n    async onClickRemoveUser() {\r\n        const {currentBranch} = this.props.appModuleData.toJS();\r\n        this.setState({settingsLoading: true});\r\n\r\n        try {\r\n            const {body} = await api({\r\n                type: \"DELETE\",\r\n                uri: `branch/${currentBranch._id}/${this.state.updateData._id}`,\r\n            });\r\n            this.props.getById({type: \"branch\", branchId: currentBranch._id});\r\n            this.closeModal();\r\n            this.props.addNotification({\r\n                message: body.message,\r\n                level: \"success\"\r\n            });\r\n        } catch (e) {\r\n            this.props.addNotification({\r\n                message: e.toString(),\r\n                level: \"error\"\r\n            });\r\n        }\r\n        this.setState({settingsLoading: false});\r\n    }\r\n\r\n    async onSubmitDeleteBranch(branch) {\r\n        this.setState({showDeleteModal: false, settingsLoading: true});\r\n        try {\r\n            const {body} = await api({type: \"DELETE\", uri: `branch/${branch._id}`});\r\n\r\n            if (!body || body.status === 'error') {\r\n                if (body.data) {\r\n                    this.props.addNotification({message: body.data, level: \"error\"});\r\n                }\r\n            } else {\r\n                let {id} = this.props.match.params;\r\n                // this.props.getById({type: \"branch\", id});\r\n                if (body.message) {\r\n                    this.props.addNotification({message: body.message, level: \"success\"});\r\n                }\r\n\r\n                window.location.href = \"/\"\r\n            }\r\n            this.setState({settingsLoading: false});\r\n        } catch (e) {\r\n            this.setState({settingsLoading: false});\r\n            this.props.addNotification({message: e.toString(), level: \"error\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {detailData, modal, loading, myUserAccess} = this.props.appModuleData.toJS();\r\n        const {detail} = detailData;\r\n        const {updatePermissionData, updateData} = this.state;\r\n\r\n        const panes = [\r\n            {\r\n                menuItem: 'Employees',\r\n                menuButton: <IoIosAdd/>,\r\n                menuButtonClick: () => {\r\n                },\r\n                render:\r\n                    <div className=\"grid-container\">\r\n                        {detail.employees && detail.employees.filter((emp) => emp.employee_id.role === \"employee\").map((user, key) => {\r\n                            return (\r\n                                <UserGrid key={key} user={{...user.employee_id, perm: user.perm}} type=\"branch\"\r\n                                          onClickAction={this.onClickAction} {...this.props}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n            },\r\n            {\r\n                menuItem: 'Admins',\r\n                menuButton: <IoIosAdd size=\"30px\"/>,\r\n                menuButtonClick: () => {\r\n                },\r\n                render:\r\n                    <div className=\"grid-container\">\r\n                        {detail.employees && detail.employees.filter((emp) => emp.employee_id.role === \"admin\").map((user, key) => {\r\n                            return (\r\n                                <UserGrid key={key} user={{...user.employee_id, perm: user.perm}} type=\"branch\"\r\n                                          onClickAction={this.onClickAction} {...this.props}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className=\"app-page\">\r\n                <div className=\"page-header\" id=\"pageHeader\">\r\n                    <div className=\"page-header-name\">SETTINGS</div>\r\n                    <div className=\"page-header-add-btn\">\r\n                        <Loading type=\"simple\" style=\"native\"\r\n                                 loading={this.state.settingsLoading || loading.getByIdLoading}/>\r\n                        {myUserAccess.role === \"admin\" && (!this.state.settingsLoading && !loading.getByIdLoading && !detail.deleted) &&\r\n                        <FiEdit size=\"20px\" style={{margin: 10}} className=\"button-icon\"\r\n                                onClick={() => this.props.modalToggle({modal: BRANCH_EDIT_MODAL, view: true})}/>}\r\n\r\n                        {myUserAccess.role === \"admin\" && (!this.state.settingsLoading && !loading.getByIdLoading && !detail.deleted) &&\r\n                        <RiDeleteBinLine size=\"20px\" style={{margin: 10}} className=\"button-icon\"\r\n                                         onClick={() => this.setState({showDeleteModal: true})}/>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"actual-content\">\r\n                    <div className=\"Detail-View\">\r\n                        <div className=\"Detail-View-Main-Content\">\r\n                            <div className=\"Detail-View-Main-Content-Column1\">\r\n                                <div className=\"Detail-View-Main-Content-Name\">\r\n                                    {detail.name}\r\n                                </div>\r\n                                <div className=\"Detail-View-Main-Content-Id\">\r\n                                    <img className=\"image\"\r\n                                         src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\r\n                                    {detail._id}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"Detail-View-Main-Content-Column2\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"information\">Branch Information:</div>\r\n                                    <div className=\"stat\">\r\n                                        <div className=\"Detail-View-Main-Content-split\">\r\n                                            <div className=\"information-heading\">Location</div>\r\n                                            <div className=\"information-val\">\r\n                                                {detail.location ? detail.location : \"NIL\"}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"Detail-View-Main-Content-split\">\r\n                                            <div className=\"information-heading\">Created On</div>\r\n                                            <div className=\"information-val\">\r\n                                                {getDesiredDateTimeNow(detail.added_date_time)}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"Detail-View-Main-Content-split\">\r\n                                            <div className=\"information-heading\">Mobile Number</div>\r\n                                            <div className=\"information-val\">{detail.mobile_number}</div>\r\n                                        </div>\r\n                                        {detail.added_by &&\r\n                                        <div className=\"Detail-View-Main-Content-split\">\r\n                                            <div className=\"information-heading\">Created by</div>\r\n                                            <div\r\n                                                className=\"information-val\">{detail.added_by && detail.added_by.full_name} ({detail.added_by && detail.added_by._id})\r\n                                            </div>\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"container\">\r\n                                    <div className=\"information\">Employee Information:</div>\r\n                                    <div className=\"stat no-border\">\r\n                                        <div className=\"Detail-View-Main-Content-split\">\r\n                                            <div className=\"information-heading\">No of employees</div>\r\n                                            <div className=\"information-val\">\r\n                                                {detail.employees ? detail.employees.length : 0}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{paddingTop: 10}}>\r\n                            <Tabs panes={panes} type=\"default\"/>\r\n                        </div>\r\n\r\n                        {this.state.updatePermissionModal &&\r\n                        <Modal\r\n                            open={this.state.updatePermissionModal}\r\n                            center={false}\r\n                            onClose={() => this.closeModal()}\r\n                            showCloseIcon={false}\r\n                            size=\"mini\"\r\n                            header={\r\n                                <div>\r\n                                    EDIT PERMISSION: <span\r\n                                    className=\"Modal-Header-name\">{this.state.updateData.full_name}</span>\r\n                                </div>\r\n                            }\r\n                            content={\r\n                                <div>\r\n                                    {Object.keys(updatePermissionData).length > 0 &&\r\n                                    <div className=\"employee-permission-box\">\r\n                                        {/*<div className=\"employee-permission-header-name\"> User Permissions</div>*/}\r\n                                        <div className=\"employee-permission-box\">\r\n                                            <table className=\"content-header-table add-employee-permission-table\">\r\n                                                <tbody>\r\n                                                <tr className=\"add-employee-permission-tr\">\r\n                                                    <td className=\"content-header-name\">Invoice</td>\r\n                                                    <td className=\"content-header-name\">Customer</td>\r\n                                                    <td className=\"content-header-name\">Items</td>\r\n                                                </tr>\r\n                                                <tr className=\"add-employee-permission-tr\">\r\n                                                    <td className=\"content-header-name\">\r\n                                                        <Checkbox checked={updatePermissionData.bill.add}\r\n                                                                  onChange={(data) => this.onChangePermission('bill', 'add', data)}/> Add <br/>\r\n                                                        <Checkbox\r\n                                                            checked={updatePermissionData.bill.view}\r\n                                                            onChange={(data) => this.onChangePermission('bill', 'view', data)}/> View <br/>\r\n                                                        <Checkbox\r\n                                                            checked={updatePermissionData.bill.edit}\r\n                                                            onChange={(data) => this.onChangePermission('bill', 'edit', data)}/> Edit <br/>\r\n                                                        <Checkbox\r\n                                                            checked={updatePermissionData.bill.delete}\r\n                                                            onChange={(data) => this.onChangePermission('bill', 'delete', data)}/> Delete <br/>\r\n                                                    </td>\r\n                                                    <td className=\"content-header-name\">\r\n                                                        <Checkbox\r\n                                                            checked={updatePermissionData.customer.add}\r\n                                                            onChange={(data) => this.onChangePermission('customer', 'add', data)}/> Add <br/>\r\n                                                        <Checkbox\r\n                                                            checked={updatePermissionData.customer.view}\r\n                                                            onChange={(data) => this.onChangePermission('customer', 'view', data)}/> View <br/>\r\n                                                        <Checkbox\r\n                                                            checked={updatePermissionData.customer.edit}\r\n                                                            onChange={(data) => this.onChangePermission('customer', 'edit', data)}/> Edit <br/>\r\n                                                        <Checkbox\r\n                                                            checked={updatePermissionData.customer.delete}\r\n                                                            onChange={(data) => this.onChangePermission('customer', 'delete', data)}/> Delete <br/>\r\n                                                    </td>\r\n                                                    <td className=\"content-header-name\">\r\n                                                        <Checkbox checked={updatePermissionData.items.add}\r\n                                                                  onChange={(data) => this.onChangePermission('items', 'add', data)}/> Add <br/>\r\n                                                        <Checkbox\r\n                                                            checked={updatePermissionData.items.view}\r\n                                                            onChange={(data) => this.onChangePermission('items', 'view', data)}/> View <br/>\r\n                                                        <Checkbox\r\n                                                            checked={updatePermissionData.items.edit}\r\n                                                            onChange={(data) => this.onChangePermission('items', 'edit', data)}/> Edit <br/>\r\n                                                        <Checkbox\r\n                                                            checked={updatePermissionData.items.delete}\r\n                                                            onChange={(data) => this.onChangePermission('items', 'delete', data)}/> Delete <br/>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    }\r\n                                    <Loading loading={this.state.settingsLoading}/>\r\n                                </div>\r\n                            }\r\n                            footer={\r\n                                <div>\r\n                                    <Button name=\"Update\"\r\n                                            disabled={this.isAllInputOkay() || this.state.settingsLoading}\r\n                                            onClick={async () => await this.onClickUpdatePermission()}/>\r\n                                    <Button disabled={this.state.settingsLoading} name=\"Close\"\r\n                                            onClick={() => this.closeModal()}/>\r\n                                </div>\r\n                            }\r\n                        />\r\n                        }\r\n\r\n                        {this.state.removeUserModal &&\r\n                        <Modal\r\n                            open={this.state.removeUserModal}\r\n                            center={false}\r\n                            onClose={() => this.closeModal()}\r\n                            showCloseIcon={false}\r\n                            size=\"mini\"\r\n                            header={\r\n                                <div>\r\n                                    REMOVE EMPLOYEE FROM BRANCH:<span>{updateData.full_name}</span>\r\n                                </div>\r\n                            }\r\n                            content={\r\n                                <div style={{padding: 10}}>\r\n                                    Remove employee from branch will revoke permission for user to do any further action\r\n                                    in branch.\r\n                                    <Loading loading={this.state.settingsLoading}/>\r\n                                </div>\r\n                            }\r\n                            footer={\r\n                                <div>\r\n                                    <Button name=\"Remove from branch\" disabled={this.state.settingsLoading}\r\n                                            onClick={async () => this.onClickRemoveUser()}/>\r\n                                    <Button name=\"Close\" disabled={this.state.settingsLoading}\r\n                                            onClick={() => this.closeModal()}/>\r\n                                </div>\r\n                            }\r\n                        />\r\n                        }\r\n\r\n                        {modal.branchEditModal && <AddOrEditBranch type={\"edit-branch\"} branchData={detail}/>}\r\n\r\n                        {\r\n                            this.state.showDeleteModal &&\r\n                            <Modal\r\n                                open={this.state.showDeleteModal}\r\n                                center={false}\r\n                                onClose={() => this.setState({showDeleteModal: false})}\r\n                                showCloseIcon={false}\r\n                                size=\"mini\"\r\n                                header={\r\n                                    <div>\r\n                                        DELETE BRANCH: <span>{detail.name}</span>\r\n                                    </div>\r\n                                }\r\n                                content={\r\n                                    <div style={{padding: 10}}>\r\n                                        Are you sure you want to delete this branch? Once the branch is deleted,\r\n                                        you cannot revert, add or make any changes to the branch propertoes.\r\n                                        <Loading loading={this.state.settingsLoading}/>\r\n                                    </div>\r\n                                }\r\n                                footer={\r\n                                    <div>\r\n                                        <Button name=\"Delete\"\r\n                                                onClick={async () => {\r\n                                                    await this.onSubmitDeleteBranch(detail);\r\n                                                }}/>\r\n                                        <Button name=\"Close\" onClick={() => this.setState({showDeleteModal: false})}/>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Settings));","import React, {Component} from \"react\";\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport './Dashboard.css';\r\n\r\nimport {appModuleActions as actions, CUSTOMER_ADD_MODAL, PRODUCT_ADD_MODAL} from \"../../AppModule\";\r\nimport NotificationSystem from \"../../components/Notification\";\r\nimport ViewCustomers from \"../Customer/CustomerList\";\r\nimport CustomerDetail from \"../Customer/CustomerDetail\";\r\nimport Items from \"../Items\";\r\nimport ProductDetail from \"../Items/ProductDetail\";\r\nimport ServiceDetail from \"../Items/ServiceDetail\";\r\nimport ViewBills from \"../Invoice\";\r\nimport InvoiceDetail from \"../Invoice/InvoiceDetail\";\r\nimport CreateInvoice from \"../Invoice/CreateInvoice\";\r\nimport VerticalLayout from \"../../components/Layout/Vertical\";\r\nimport {setLocalStorage} from \"../../utils/index\";\r\nimport AddCustomer from \"../Customer/AddCustomer\";\r\nimport AddOrEditItems from \"../Items/AddOrEditItems\";\r\nimport BranchSettings from \"../Branch/Settings\";\r\nimport {RiAccountCircleLine, RiSettings3Line, RiHome7Line} from \"react-icons/ri\";\r\nimport {IoMdLogOut} from \"react-icons/io\";\r\n\r\nclass DashboardOne extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n        setLocalStorage('activeBranch', this.props.match.params.branchId);\r\n        const {myUserAccess} = this.props.appModuleData.toJS();\r\n        const branchId = this.props.match.params.branchId;\r\n        const activeBranch = myUserAccess.access_branches.filter((branch) => branch._id === Number(branchId));\r\n        if (activeBranch && activeBranch.length > 0) {\r\n            this.props.setCurrentBranch(activeBranch[0])\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const prevBranchId = prevProps.match.params.branchId;\r\n        const currentBranch = this.props.match.params.branchId;\r\n        if (prevBranchId !== currentBranch) {\r\n            const {myUserAccess} = this.props.appModuleData.toJS();\r\n            const activeBranch = myUserAccess.access_branches.filter((branch) => branch._id === Number(currentBranch));\r\n            if (activeBranch && activeBranch.length > 0) {\r\n                this.props.setCurrentBranch(activeBranch[0])\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {myUserAccess, currentBranch, modal} = this.props.appModuleData.toJS();\r\n        const leftMenu = [];\r\n\r\n        const branchId = this.props.match.params.branchId;\r\n        const activeBranch = myUserAccess.access_branches.filter((branch) => branch._id === Number(branchId));\r\n\r\n        if (activeBranch && activeBranch.length > 0) {\r\n            const branchPerm = activeBranch[0].employees[0].perm\r\n            if (branchPerm.customer.view) {\r\n                let custAccData = {\r\n                    name: \"Customers\",\r\n                    id: \"customers\",\r\n                    link: `/branch/${branchId}/customers`\r\n                };\r\n                if (branchPerm.customer.add && !currentBranch.deleted) custAccData.addFunc = () => this.props.modalToggle({\r\n                    modal: CUSTOMER_ADD_MODAL,\r\n                    view: true\r\n                });\r\n                leftMenu.push(custAccData);\r\n            }\r\n\r\n            if (branchPerm.items.view) {\r\n                let itemAccData = {\r\n                    name: \"Product/Service\",\r\n                    id: \"items\",\r\n                    link: `/branch/${branchId}/items`,\r\n                };\r\n                if (branchPerm.items.add && !currentBranch.deleted) itemAccData.addFunc = () => this.props.modalToggle({\r\n                    modal: PRODUCT_ADD_MODAL,\r\n                    view: true\r\n                });\r\n                leftMenu.push(itemAccData);\r\n            }\r\n\r\n            if (branchPerm.bill.view) {\r\n                let billAccData = {\r\n                    name: \"Invoice\",\r\n                    id: \"Invoice\",\r\n                    link: `/branch/${branchId}/invoices`\r\n                };\r\n                if (branchPerm.bill.add && !currentBranch.deleted) billAccData.addLink = `/branch/${branchId}/new-invoice`;\r\n                leftMenu.push(billAccData);\r\n            }\r\n\r\n            if (myUserAccess.role === \"admin\") {\r\n                leftMenu.push({\r\n                    name: \"Settings\",\r\n                    id: \"Settings\",\r\n                    link: `/branch/${branchId}/settings`\r\n                });\r\n            }\r\n\r\n            let actions = [{\r\n                link: \"/dashboard\",\r\n                icon: <RiHome7Line size=\"24px\"/>\r\n            }, {\r\n                link: \"/account\",\r\n                icon: <RiAccountCircleLine size=\"24px\"/>\r\n            }, {\r\n                link: \"/settings\",\r\n                icon: <RiSettings3Line size=\"24px\"/>\r\n            }, {\r\n                link: \"/logout\",\r\n                icon: <IoMdLogOut size=\"24px\"/>\r\n            }];\r\n\r\n            return (\r\n                <VerticalLayout history={this.props.history} location={this.props.location} pageHeader={{\r\n                    appName: `Bill1ne`,\r\n                    isBranch: true,\r\n                    branchName: currentBranch.name,\r\n                    routeLinks: [],\r\n                    rightUserDetail: myUserAccess,\r\n                    leftMenu,\r\n                    actions,\r\n                    changePasswordFn: () => this.props.history.push(\"/change-password\"),\r\n                    checkAuth: this.props.checkAuth\r\n                }}>\r\n                    <NotificationSystem props/>\r\n\r\n                    {modal.customerAddModal && <AddCustomer/>}\r\n                    {modal.productAddModal && <AddOrEditItems type={\"add-product\"}/>}\r\n                    {modal.serviceAddModal && <AddOrEditItems type={\"add-service\"}/>}\r\n\r\n                    <div>\r\n                        <Route path={`/branch/:branchId/customers`} component={ViewCustomers}/>\r\n                        <Route path={`/branch/:branchId/customer/:id`} component={CustomerDetail}/>\r\n\r\n                        <Route path={`/branch/:branchId/items`} component={Items}/>\r\n                        <Route path={`/branch/:branchId/product/:id`} component={ProductDetail}/>\r\n                        <Route path={`/branch/:branchId/service/:id`} component={ServiceDetail}/>\r\n\r\n                        <Route path={`/branch/:branchId/invoices`} component={ViewBills}/>\r\n                        <Route path={`/branch/:branchId/invoice/:id/`} component={InvoiceDetail}/>\r\n                        <Route path={`/branch/:branchId/new-invoice`} component={CreateInvoice}/>\r\n                        {(myUserAccess.role === \"admin\") &&\r\n                        <Route path={`/branch/:branchId/settings`} component={BranchSettings}/>}\r\n                    </div>\r\n                </VerticalLayout>\r\n            );\r\n        } else {\r\n            return (\r\n                <div align=\"center\" style={{padding: 20}}>You dont have access to this branch</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardOne));","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport bec from '../utils/bec';\r\nimport {appModuleActions as actions} from \"../AppModule\";\r\nimport DashboardAll from \"./DashboardAll\";\r\nimport DashboardOne from \"./DashboardOne\";\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loggedIn: false,\r\n            loading: true,\r\n            navOpenState: {\r\n                isOpen: true,\r\n                width: 304,\r\n            },\r\n            modalVisible: false,\r\n            modalType: ''\r\n        };\r\n\r\n        this.checkedLogin = this.checkedLogin.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        const {checkedLogin} = this;\r\n        const {updateUserAccessDetails, appModuleData, firstTimeBoot, updateHistoryFun} = this.props;\r\n        if (!appModuleData.getIn(['myUserAccess', 'role'])) {\r\n            bec({type: 'GET', uri: 'auth/verify'}, true, (error, {body}) => {\r\n                if (!body || body.status === 'error') {\r\n                    if (window.location.pathname !== '/auth') {\r\n                        //window.location.href = '/auth';\r\n                        this.props.history.push('/auth');\r\n                    }\r\n                    checkedLogin(false);\r\n                } else {\r\n                    updateUserAccessDetails(body.response);\r\n                    if (!appModuleData.get('firstTimeBoot')) {\r\n                        firstTimeBoot(true);\r\n                    }\r\n                    updateHistoryFun(this.props.history);\r\n                    checkedLogin(true, false);\r\n                    if (window.location.pathname === '/' || window.location.pathname === '') {\r\n                        //window.location.href = '/auth';\r\n                        this.props.history.push('/dashboard');\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            checkedLogin(true, false);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const checkAuth = this.props.checkAuth;\r\n        setInterval(() => {\r\n            checkAuth();\r\n        }, 60000 * 2);\r\n    }\r\n\r\n    checkedLogin(data, loading) {\r\n        this.setState({loggedIn: data, loading: !loading ? loading : true});\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        if (this.state.loggedIn) {\r\n            return (\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/branch/:branchId\" component={DashboardOne}/>\r\n                        <Route path=\"/\" component={DashboardAll}/>\r\n                    </Switch>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div align=\"center\" style={{padding: 20}}>Loading...</div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import {combineReducers} from 'redux';\r\n\r\nimport appModuleReducer from '../AppModule';\r\n\r\nexport default combineReducers({\r\n    appModuleReducer,\r\n});","import {fork, all} from 'redux-saga/effects';\r\n\r\nimport {appModuleSaga} from '../AppModule';\r\n\r\nexport default function* root() {\r\n    yield all([\r\n        fork(appModuleSaga),\r\n    ]);\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Box, Grid as GridGrom} from \"grommet\";\r\n\r\nimport NotificationSystem from '../../components/Notification';\r\nimport {appModuleActions as actions} from \"../../AppModule\";\r\nimport bec from \"../../utils/bec\";\r\nimport {setLocalStorage} from \"../../utils/index\";\r\n\r\nimport \"./style.css\";\r\nimport Input from \"../../components/Input\";\r\n\r\nfunction renderBranchOptions(branches) {\r\n    let branchesRet = [];\r\n    branches.filter((o) => !o.deleted).forEach((branch) => {\r\n        branchesRet.push({\r\n            key: branch._id,\r\n            value: branch._id,\r\n            text: branch['name'] + ' - ' + branch['location']\r\n        });\r\n    });\r\n    return branchesRet;\r\n}\r\n\r\nclass Auth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            empId: '',\r\n            password: '',\r\n            'login-branch': '',\r\n            loginLoading: false,\r\n            loginError: '',\r\n            loginView: true\r\n        };\r\n\r\n        this.setLoginState = this.setLoginState.bind(this);\r\n        this.doLogin = this.doLogin.bind(this);\r\n    }\r\n\r\n    setLoginState(data) {\r\n        this.setState({...data});\r\n    }\r\n\r\n    componentWillMount() {\r\n        // this.props.getAllBranch();\r\n        bec({type: 'GET', uri: 'auth/verify'}, true, (error, {body}) => {\r\n            if (body && body.status === 'ok') {\r\n                if (window.location.pathname === '/auth') {\r\n                    this.props.history.push('/dashboard');\r\n                    //window.location.href = '/';\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    doLogin({empId, password}) {\r\n        const {addNotification} = this.props;\r\n        this.setLoginState({loginLoading: true, loginError: \"\"});\r\n        bec({\r\n            type: 'POST',\r\n            uri: 'auth/login',\r\n            obj: {'emp-id': Number(empId), password}\r\n        }, true, (error, {body}) => {\r\n            if (body && body.status === 'ok') {\r\n                setLocalStorage('t', body.response.token);\r\n                // window.location.href = '/';\r\n                this.props.history.push('/dashboard');\r\n                this.setLoginState({loginLoading: false})\r\n            } else {\r\n                let err = \"Error while login\";\r\n                if (body !== null && body.data !== null) {\r\n                    err = err + \" :\" + body.data\r\n                }\r\n                addNotification({message: err, level: 'error'});\r\n                this.setLoginState({loginError: err, loginLoading: false})\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NotificationSystem props/>\r\n                <div className=\"auth-main\">\r\n                    <div className=\"auth-banner\">\r\n                        <img src={require('../../components/Layout/icon.png')} className=\"auth-banner-logo\"/>\r\n                        <p className=\"auth-banner-app-name\">Bill1ne</p>\r\n                        <div className=\"input-main\">\r\n                            <div className=\"input-label\">\r\n                                Emp Id\r\n                            </div>\r\n                            <div\r\n                                className={(!this.state.empId) ? \"input-content-error\" : \"input-content\"}>\r\n                                <input\r\n                                    className={(!this.state.empId) ? \"input-content-box input-content-box-error\" : \"input-content-box\"}\r\n                                    style={{width: window.innerWidth < 800 ? \"100%\" : \"90%\"}}\r\n                                    value={this.state.empId} type=\"number\"\r\n                                    onChange={(e) => this.setState({empId: e.target.value})}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-main\">\r\n                            <div className=\"input-label\">\r\n                                Password\r\n                            </div>\r\n                            <div\r\n                                className={(!this.state.password) ? \"input-content-error\" : \"input-content\"}>\r\n                                <input\r\n                                    className={(!this.state.password) ? \"input-content-box input-content-box-error\" : \"input-content-box\"}\r\n                                    style={{width: window.innerWidth < 800 ? \"100%\" : \"90%\"}}\r\n                                    value={this.state.password} type=\"password\"\r\n                                    onChange={(e) => this.setState({password: e.target.value})}/>\r\n                            </div>\r\n                        </div>\r\n                        {/*<Input*/}\r\n                        {/*    name=\"Username\"*/}\r\n                        {/*    required={true}*/}\r\n                        {/*    type=\"user_id\"*/}\r\n                        {/*    value={this.state.empId}*/}\r\n                        {/*    onValChange={(data) => this.setState({empId: data.value})}*/}\r\n                        {/*/>*/}\r\n                        {/*<Input*/}\r\n                        {/*    name=\"Password\"*/}\r\n                        {/*    type=\"password\"*/}\r\n                        {/*    required={true}*/}\r\n                        {/*    value={this.state.password}*/}\r\n                        {/*    onValChange={(data) => this.setState({password: data.value})}*/}\r\n                        {/*/>*/}\r\n                        <button\r\n                            className=\"auth-button\"\r\n                            type=\"submit\"\r\n                            disabled={!this.state.empId || !this.state.password || this.state.loginLoading}\r\n                            onClick={() => this.doLogin({empId: this.state.empId, password: this.state.password})}\r\n                        >\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appModuleData: state.appModuleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...actions,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Auth));","import React, {Component} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport {ConnectedRouter, routerMiddleware} from 'react-router-redux';\r\nimport {createBrowserHistory} from 'history';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport Main from \"./screens/Main\";\r\nimport configureStore from './store/configureStore';\r\nimport root from './Sagas';\r\nimport Auth from \"./screens/Auth/Auth\";\r\n\r\nexport const history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore(sagaMiddleware, routeMiddleware);\r\n\r\nsagaMiddleware.run(root);\r\n\r\nclass Index extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <div>\r\n                    <Router>\r\n                        <div>\r\n                            <Switch>\r\n                                <Route path={'/auth'} component={Auth}/>\r\n                                <Route path={'/'} component={Main}/>\r\n                            </Switch>\r\n                        </div>\r\n                    </Router>\r\n                </div>\r\n            </Provider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nReactDOM.render(<Index/>, document.getElementById(\"root\"));\r\n\r\nregisterServiceWorker();\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(sagaMiddleware, routeMiddleware, initialState) {\r\n    const enhancer = compose(\r\n        applyMiddleware(sagaMiddleware, routeMiddleware),\r\n    );\r\n\r\n    return createStore(rootReducer, initialState, enhancer)\r\n}\r\n"],"sourceRoot":""}