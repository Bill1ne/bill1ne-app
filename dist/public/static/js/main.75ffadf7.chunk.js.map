{"version":3,"sources":["utils/index.js","components/AppLayout/icon.png","registerServiceWorker.js","utils/bec.js","AppModule/selectors.js","AppModule/index.js","components/Notification/index.js","components/Modal/index.js","components/DropDown/index.js","components/AppLayout/AppPage/PageHeader/index.js","screens/Pages.js","components/AppLayout/AppPage/index.js","components/AppLayout/index.js","components/Tabs/index.js","components/SearchBar/index.js","components/Button/index.js","utils/api.js","components/Input/index.js","components/ListView/UserLi.js","screens/Users/Employees.js","components/Loading/index.js","screens/Users/AddOrEditEmployees.js","screens/ActionModals/ActivityView.js","components/SegmentExpandable/index.js","screens/DashboardAll/Dashboard.js","screens/Branch/AddOrEditBranch.js","components/GridView/BranchGrid.js","screens/Branch/index.js","screens/ActionModals/ChangePassword.js","components/ListView/CustomerLi.js","screens/Users/Account.js","screens/Auth/Logout.js","screens/DashboardAll/index.js","components/Pagination/index.js","components/Stats/StatCount.js","screens/Customer/CustomerList.js","components/Stats/StatList.js","components/ListView/InvoiceLi.js","screens/Customer/CustomerDetail.js","components/ListView/ProductLi.js","components/ListView/ServiceLi.js","screens/Items/index.js","screens/Items/AddOrEditItems.js","screens/Items/ProductDetail.js","screens/Items/ServiceDetail.js","screens/Invoice/index.js","screens/Invoice/InvoiceDetail.js","screens/Invoice/CreateInvoice.js","screens/Customer/AddCustomer.js","components/GridView/UserGrid.js","screens/Branch/Settings.js","screens/DashboardOne/index.js","screens/Main.js","reducers/index.js","Sagas/index.js","screens/Auth/Auth.js","index.js","store/configureStore.js"],"names":["setLocalStorage","key","value","global","localStorage","setItem","getLocalStorage","getItem","removeToken","removeItem","pad2","number","getDesiredDateTimeNow","dateAndTime","d","Date","month","getMonth","getDate","getFullYear","getDesiredDateNow","hours","getHours","getMinutes","getDesiredTimeNow","getBranchActionPerm","currentBranch","empId","type","action","employees","employee_id","perm","module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","seperate","resp","a","_uri","uri","fullUrl","obj","headers","_headers","method","body","toJS","toLowerCase","undefined","JSON","stringify","toUpperCase","Accept","Authorization","fetch","res","json","text","resBody","respError","ok","Error","data","href","status","response","bec","getPostCustomerData","appModuleReducer","get","getPostBillData","getPostProductData","getPostServiceData","getAddNewStockToProductData","getLoginCreds","deleteACustomerData","putCustomerData","deleteABranchData","updateHistoryFnData","takeSnapshotQueryData","postLoginSaga","getAllCustomerSaga","postCustomerSaga","putCustomerSaga","deleteACustomerSaga","getAllProductSaga","getByIdSaga","postProductSaga","updateProductSaga","getAllStockSaga","getAllServiceSaga","addStockToProductSaga","postServiceSaga","updateServiceSaga","postBillSaga","getAllBillsSaga","getAllBranchSaga","getAllEmployeesSaga","deleteABranchSaga","getAllActivitiesSaga","checkAuthSaga","takeSnapshotSaga","getStatsSaga","watchLoginSaga","watchGetAllCustomerSaga","watchPostCustomerSaga","watchPutCustomerSaga","watchDeleteACustomerSaga","watchPostProductSaga","watchUpdateProductSaga","watchGetAllProductSaga","watchGetByIdSaga","watchAddStockToProductSaga","watchPostNewServiceSaga","watchUpdateServiceSaga","watchGetAllServiceSaga","watchPostBillSaga","watchGetAllStockSaga","watchGetAllBillsSaga","watchGetAllBranchSaga","watchGetAllEmployeesSaga","watchDeleteABranchSaga","watchGetAllActivities","watchCheckAuth","watchTakeSnapshot","watchGetStats","appModuleSaga","ONCLICK_LOGIN","LOGIN_FAILS","ADD_NOTIFICATION","SUCCESS","GET_ALL_CUSTOMER","PUT_CUSTOMER","POST_NEW_BILL","POST_NEW_PRODUCT","POST_NEW_SERVICE","GET_ALL_PRODUCT","GET_BY_ID","GET_ALL_SERVICE","GET_ALL_BILLS","DELETE_BRANCH","TAKE_SNAPSHOT","UPDATE_PRODUCT","UPDATE_SERVICE","appModuleActions","updateUserAccessDetails","onClickLogin","loginSuccess","loginFails","loginLoading","success","failure","getAllCustomer","getAllCustomerSuccess","getAllCustomerFails","postNewCustomer","postNewCustomerSuccess","postNewCustomerFails","putCustomer","deleteACustomer","deleteACustomerSuccess","deleteACustomerFails","postNewService","postNewServiceSuccess","postNewServiceFails","updateService","getAllStock","getAllStockSuccess","getAllStockFails","postNewProduct","postNewProductSuccess","postNewProductFails","updateProduct","getAllProduct","getById","getAllProductSuccess","getAllProductFails","getAllService","getAllServiceSuccess","getAllServiceFails","addStockToProduct","addStockToProductSuccess","addStockToProductFails","postNewBill","postNewBillSuccess","postNewBillFails","getAllBills","getAllBillsSuccess","getAllBillsFails","getAllBranch","getAllBranchSuccess","getAllBranchFails","getAllEmployees","getAllEmployeesSuccess","getAllEmployeesFails","editBranch","deleteBranch","deleteBranchSuccess","deleteBranchFails","updateHistoryFun","getAllActivities","checkAuth","addNotification","takeSnapshot","setCurrentBranch","getStats","modalToggle","loadingToogle","commonErrorMsg","firstTimeBoot","put","select","selectors","creds","call","username","password","token","query","message","level","customerData","fullData","_id","push","queryId","id","successData","detailData","detail","product","invoicesAdded","servicesUsed","service","invoice","customer","branch","modal","PRODUCT_ADD_MODAL","view","productData","PRODUCT_EDIT_MODAL","addNewStockToProductData","serviceData","SERVICE_ADD_MODAL","SERVICE_EDIT_MODAL","billData","goBack","allActivitiesData","activities","start","setHours","end","toISOString","moment","subtract","toDate","stats","takeLatest","takeEvery","all","fork","initialState","fromJS","myUserAccess","role","bill","add","edit","items","credsDetail","postNewCustomerData","postNewProductData","postNewServiceData","postNewBillData","takeSnapshotQuery","allProductsData","products","count","total","page","totalPages","productQueryPage","allCustomerData","customers","customerQueryPage","allServiceData","services","serviceQueryPage","allStockData","allBillData","invoices","billQueryPage","allBranchData","editBranchData","allEmployeesData","admins","loading","postNewCustomerLoading","postNewProductLoading","viewProductsLoading","getProductLoading","addStockToProductLoading","getAllCustomerLoading","postNewServiceLoading","getServiceLoading","postNewBillLoading","getStockLoading","getBillLoading","deleteACustomerLoading","getAllBranchLoading","getAllEmployeesLoading","deleteABranchLoading","putCustomerLoading","getAllActivitiesLoading","takeSnapshotLoading","getByIdLoading","updateServiceLoading","getStatsLoading","customerAddModal","productAddModal","serviceAddModal","productEditModal","serviceEditModal","branchAddModal","branchEditModal","employeeAddModal","viewCustomersModal","updateHistoryFn","notification","style","NotificationItem","DefaultStyle","margin","backgroundColor","border","boxShadow","color","MessageWrapper","padding","Dismiss","top","right","warning","info","NotificationContainer","props","this","notificationSystem","refs","newProps","appModuleData","setState","ref","Component","mapDispatchToProps","actions","withRouter","connect","ModalIndex","open","onClose","header","content","footer","center","showCloseIcon","modalClass","size","classNames","className","Dropdown","container","React","createRef","checkType","typeDropdown","showDropdown","event","isOpen","hideDropdown","current","contains","target","chooseItem","labelItem","renderDataDropDown","item","index","onSelectOption","label","onClick","toLocaleUpperCase","list","length","firstItem","document","addEventListener","removeEventListener","icon","cursor","width","src","map","defaultProps","pageName","userAccountList","val","history","Pages","pages","name","path","byLocation","pageLocation","pathname","includes","children","VerticalLayout","leftMenuWidth","pageWidth","innerWidth","pageHeight","innerHeight","onSelectBranch","showLeftMenu","handleWindowResize","bind","pageHeader","appName","display","isBranch","leftMenu","menu","link","addLink","addFunc","Modal","marginTop","actionItem","Tabs","tabActive","_getMenuItems","_getSelectedPanel","e","preventDefault","onTabClick","activeTab","panes","panel","setActive","menuItem","render","Button","disabled","Input","onValChange","maxLength","minLength","options","required","isMulti","loadOptions","params","pattern","onChange","isNotValue","closeMenuOnSelect","selectedOption","styles","getOptionLabel","option","getOptionValue","cacheOptions","defaultOptions","isInputVal","toString","Number","RegExp","test","roleOptions","UserLi","showDetailModal","showEditModal","editCustomerData","editLoading","showDeleteModal","deleteCustomerData","editUserModal","editUserData","editUserPasswordModal","editUserPasswordData","isSuccessIndicator","isAllInputOkay","onSubmitEditUser","onSubmitDeleteUser","user","newPassword","repeatPassword","full_name","email","gender","address","age","mobileNo","mobile_number","api","onClickAction","customerOptions","deleted","emp_id","added_date_time","filter","ge","added_by","checked","delete","Employees","deleteModal","filterField","deleteEmployeeLoading","deleteEmployee","onChangeState","empData","employeesData","allAdminData","overflow","i","Loading","Loader","onRequestClose","overlayClassName","AddOrEditEmployees","postCustomerLoading","postEmployee","putEmployee","closeModal","empRole","emp","empl","String","ViewActivity","structured","activity","description","SegmentExpandable","show","expandAtStart","nextProps","CaretDown","CaretNext","paddingLeft","Dashboard","activeStat","statData","stat","added","totalInvoiceAmount","totalPaidAmount","totalUnPaidAmount","align","defaultPerm","AddOrEditBranch","addBranchLoading","checkOkayToAdd","onClickAddBranch","onChangePermission","renderEmployeesOptions","branchData","forEach","empsRet","permFlag","updatedEmp","branchId","allEmployeesCombined","concat","BranchGrid","onClickFn","onClickAdd","bKye","Branches","ChangePassword","updatePassLoading","onClickUpdatePass","setStateChangeValues","search","substring","updatePasswordModal","CustomerLi","minimal","Account","justifyContent","Logout","DashboardAll","AppLayout","routeLinks","rightUserDetail","changePasswordFn","Notification","exact","component","ViewEmployees","ActivityView","Page","currentPage","nextPage","prevPage","shownContent","totalContent","searchParams","URLSearchParams","set","StatCount","heading","noBorder","borderColor","main","ViewCustomers","deleteCustomerModal","whichCustomer","urlParams","branch_id","filteredCustomerData","cuData","borderBottom","alt","custData","pg","InvoiceLi","final_bill_amount","toFixed","paid_amount","CustomerDetail","editCustomerModal","onSubmitDeleteCustomer","Object","keys","deleteLoading","paddingTop","ProductLi","showAvgUsage","isInvoiceView","product_unit","available_stocks","product_cost","quantity_used","ServiceLi","showSubStatDetail","average_stock_usage","product_used","serviceAvg","productUsed","pu","service_cost","Index","addIconFunc","pagination","unitOptions","productOptions","AddOrEditItems","productName","productUnit","productCost","quantityInMl","totalQuantity","quantityInBox","serviceName","costOfService","onClickSubmit","setStockUsageQuantity","setStateValues","onCloseModal","checkAllInputOkay","onLoadProductSelectOption","productsData","uO","pr","avgUsedLi","avgStk","avgUsedData","renderProductOptions","averageQuantityOfStockUsed","fullObj","unit","cost","dataToPost","prUsed","averageStockUsage","inputVal","prUdObj","o","pD","ActionOptions","ProductDetail","addStockModal","addStockData","isAllStockInputOkay","onSubmitDeleteProduct","ModalActionOptions","addCustomerLoading","productId","quantityToAdd","alignSelf","justifySelf","float","stocks","reverse","stock","quantity","bill_ref","ServiceDetail","onSubmitDeleteService","asu","InvoiceDetail","balancePaidModal","completeBillLoading","paidby","amountPaid","nowPaying","completeBill","setCompState","balance_paid","actual_bill_amount","discount_amount","customerQueryList","discountAmount","srcTag","showAddRow","editProductUsed","editProductUsedIndex","createInvoice","billedby","onLoadCustomers","onLoadProductOrService","onRemoveItem","activeBr","activeBranchDetail","access_branches","br","toUpdate","renderCustomerOptions","qry","join","renderProductOrServiceOptions","itemKey","splice","itm","paid_by","billed_by","totalBillAmount","totalBillAmountFn","axis","renderBranchOptions","isDisabled","paddingBottom","productOrService","menuPlacement","menuContainerStyle","bottom","placeholder","marginBottom","qty","renderNumberOptions","prUsd","avgUsd","p","fontSize","fontWeight","fontStyle","avgStckUsd","actual","paddingRight","num","li","Checkbox","AddCustomer","addCustomerData","genderOptions","onSubmitAddCustomer","setTimeout","successMessage","UserGrid","onSubmitEditCustomer","userOptions","Settings","deleteBranchModal","whichBranch","updatePermissionModal","updatePermissionData","updateData","removeUserModal","settingsLoading","onClickUpdatePermission","onClickRemoveUser","userData","reload","menuButton","menuButtonClick","onSubmitDeleteBranch","DashboardOne","activeBranch","prevProps","prevState","snapshot","prevBranchId","branchPerm","custAccData","itemAccData","billAccData","branchName","Items","ViewBills","CreateInvoice","BranchSettings","Main","loggedIn","navOpenState","modalVisible","modalType","checkedLogin","getIn","setInterval","combineReducers","merge","byData","branches","mergeDeep","root","Auth","loginError","loginView","setLoginState","doLogin","err","require","createBrowserHistory","routeMiddleware","routerMiddleware","sagaMiddleware","createSagaMiddleware","store","enhancer","compose","applyMiddleware","createStore","rootReducer","configureStore","run","ReactDOM","getElementById","URL","process","origin","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.75ffadf7.chunk.js","sourcesContent":["export const generateUIDNotMoreThan1million = () => {\n    return (\"0000\" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4)\n};\n\nexport const setLocalStorage = (key, value) => {\n    global.localStorage.setItem(key, value);\n};\n\nexport const getLocalStorage = (key) => global.localStorage.getItem(key);\n\nexport const removeToken = () => {\n    global.localStorage.removeItem('t');\n    global.localStorage.removeItem('activeBranch');\n};\n\nexport const getPercentValue = (val) => {\n    if (val === 'completed') {\n        return 100;\n    } else if (val === 'in-progress') {\n        return 75;\n    } else if (val === 'new') {\n        return 10;\n    } else {\n        return 0;\n    }\n\n};\n\nexport const getNextState = (val) => {\n    if (val === 'completed') {\n        return 0;\n    } else if (val === 'in-progress') {\n        return 100;\n    } else if (val === 'new') {\n        return 75;\n    } else {\n        return 0;\n    }\n};\n\nfunction pad2(number) {\n    return (number < 10 ? '0' : '') + number\n}\n\nexport const getDesiredTimeNow = (dateAndTime) => {\n    var d = new Date(dateAndTime);\n    var hours = d.getHours();\n    if (hours < 12) {\n        return pad2(hours) + ':' + pad2(d.getMinutes()) + ' AM';\n    } else {\n        hours = hours - 12;\n        return pad2(hours) + ':' + pad2(d.getMinutes()) + ' PM';\n    }\n};\n\n\nexport const getDesiredDateNow = (dateAndTime) => {\n    var d = new Date(dateAndTime);\n    var month = d.getMonth() + 1;\n    return pad2(d.getDate()) + '/' + pad2(month) + '/' + d.getFullYear();\n};\n\nexport const getDesiredDateTimeNow = (dateAndTime) => {\n    return getDesiredDateNow(dateAndTime) + ' ' + getDesiredTimeNow(dateAndTime);\n};\n\nexport const getStateColor = (state) => {\n    switch (state.toLowerCase()) {\n        case 'new':\n            return 'rgb(249, 182, 191)';\n            break;\n        case 'in-progress':\n            return 'orange';\n            break;\n        case 'completed':\n            return '#93ffcb';\n            break;\n        default:\n            return 'black';\n\n    }\n};\n\nexport const jsUcfirst = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nexport const getBranchActionPerm = (currentBranch, empId, type, action) => {\n    return currentBranch.employees &&\n        currentBranch.employees[0] &&\n        currentBranch.employees[0].employee_id === empId &&\n        currentBranch.employees[0].perm &&\n        currentBranch.employees[0].perm[type][action]\n}","module.exports = __webpack_public_path__ + \"static/media/icon.eee5af7e.png\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {getLocalStorage} from './';\n\nexport const host = process.env.NODE_ENV === \"production\" ? \"\" : \"http://localhost:8001\";\n\nasync function bec({type = 'GET', uri: _uri, fullUrl = '', obj = {}, headers: _headers = {}}, seperate, resp) {\n    let method = type;\n    let uri = fullUrl ? fullUrl : `${host}/api/${_uri}`;\n    let headers = _headers;\n    let body = obj.toJS ? obj.toJS() : obj;\n\n    if (method === 'del') method = 'DELETE';\n\n    switch (method.toLowerCase()) {\n        case 'head':\n        case 'get':\n            body = undefined;\n            break;\n\n        case 'post':\n        case 'put':\n        case 'patch':\n        case 'delete':\n            body = JSON.stringify(body);\n            break;\n        default:\n            break;\n    }\n\n    method = method.toUpperCase();\n    headers = {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + getLocalStorage('t'),\n        // 'Active-Branch': getLocalStorage('activeBranch'),\n        ...headers,\n    };\n\n\n    const res = await fetch(uri, {\n        method,\n        headers,\n        body,\n    });\n\n    const resBody = await res.json()\n        .catch(() => res.text())\n        .catch(() => null);\n\n    const respError = {};\n    if (!res.ok && !seperate) {\n        const error = new Error(\"some error happened\");\n        error.res = res;\n        error.body = resBody;\n        if (resBody.data === \"Invalid token\") {\n            window.location.href = '/';\n        } else if (resBody.data === \"jwt expired\") {\n            window.location.href = '/';\n        }\n        throw error;\n    } else if (!res.ok && seperate) {\n        respError.body = resBody;\n    }\n\n    if (resBody && resBody.status === 'error' && !seperate) {\n        const error = new Error(resBody.data);\n        error.res = res;\n        error.body = resBody;\n        if (resBody.data === \"Invalid token\") {\n            window.location.href = '/';\n        } else if (resBody.data === \"jwt expired\") {\n            window.location.href = '/';\n        }\n        throw error;\n    }\n\n    return seperate ? resp(respError, {body: resBody}) : {res, body: resBody.response};\n}\n\nexport default bec;","export const getPostCustomerData = ({appModuleReducer}) => appModuleReducer.get('postNewCustomerData');\nexport const getPostBillData = ({appModuleReducer}) => appModuleReducer.get('postNewBillData');\nexport const getPostProductData = ({appModuleReducer}) => appModuleReducer.get('postNewProductData');\nexport const getPostServiceData = ({appModuleReducer}) => appModuleReducer.get('postNewServiceData');\nexport const getAddNewStockToProductData = ({appModuleReducer}) => appModuleReducer.get('addNewStockToProductData');\nexport const getLoginCreds = ({appModuleReducer}) => appModuleReducer.get('credsDetail');\nexport const deleteACustomerData = ({appModuleReducer}) => appModuleReducer.get('deleteACustomerData');\nexport const putCustomerData = ({appModuleReducer}) => appModuleReducer.get('putCustomerData');\nexport const deleteABranchData = ({appModuleReducer}) => appModuleReducer.get('deleteABranchData');\nexport const updateHistoryFnData = ({appModuleReducer}) => appModuleReducer.get('updateHistoryFn').toJS();\nexport const takeSnapshotQueryData = ({appModuleReducer}) => appModuleReducer.get('takeSnapshotQuery');","import {fromJS} from 'immutable';\nimport moment from 'moment';\nimport {fork, put, call, select, takeLatest, all, takeEvery} from 'redux-saga/effects';\nimport bec from '../utils/bec';\nimport {setLocalStorage} from '../utils/index';\n\nimport * as selectors from './selectors';\n\nexport const UPDATE_USER_ACCESS_DETAILS = 'appModule/UPDATE_USER_ACCESS_DETAILS';\nexport const ONCLICK_LOGIN = 'appModule/ONCLICK_LOGIN';\nexport const LOGIN_SUCCESS = 'appModule/LOGIN_SUCCESS';\nexport const LOGIN_FAILS = 'appModule/LOGIN_SUCCESS';\nexport const LOGIN_LOADING = 'appModule/LOGIN_LOADING';\nexport const ADD_NOTIFICATION = 'appModule/ADD_NOTIFICATION';\n\n// Success (or) Failure\nexport const SUCCESS = 'appModule/SUCCESS';\nexport const FAILURE = 'appModule/FAILURE';\n\n// Customer\nexport const GET_ALL_CUSTOMER = 'appModule/GET_ALL_CUSTOMER';\nexport const GET_ALL_CUSTOMER_SUCCESS = 'appModule/GET_ALL_CUSTOMER_SUCCESS';\nexport const GET_ALL_CUSTOMER_FAILS = 'appModule/GET_ALL_CUSTOMER_FAILS';\nexport const POST_NEW_CUSTOMER = 'appModule/POST_NEW_CUSTOMER';\nexport const POST_NEW_CUSTOMER_SUCCESS = 'appModule/POST_NEW_CUSTOMER_SUCCESS';\nexport const POST_NEW_CUSTOMER_FAILS = 'appModule/POST_NEW_CUSTOMER_FAILS';\nexport const PUT_CUSTOMER = 'appModule/PUT_CUSTOMER';\nexport const DELETE_A_CUSTOMER = 'appModule/DELETE_A_CUSTOMER';\nexport const DELETE_A_CUSTOMER_SUCCESS = 'appModule/DELETE_A_CUSTOMER_SUCCESS';\nexport const DELETE_A_CUSTOMER_FAILS = 'appModule/DELETE_A_CUSTOMER_FAILS';\n\nexport const POST_NEW_BILL = 'appModule/POST_NEW_BILL';\nexport const POST_NEW_BILL_SUCCESS = 'appModule/POST_NEW_BILL_SUCCESS';\nexport const POST_NEW_BILL_FAILS = 'appModule/POST_NEW_BILL_FAILS';\nexport const POST_NEW_PRODUCT = 'appModule/POST_NEW_PRODUCT';\nexport const POST_NEW_PRODUCT_SUCCESS = 'appModule/POST_NEW_PRODUCT_SUCCESS';\nexport const POST_NEW_PRODUCT_FAILS = 'appModule/POST_NEW_PRODUCT_FAILS';\nexport const POST_NEW_SERVICE = 'appModule/POST_NEW_SERVICE';\nexport const POST_NEW_SERVICE_SUCCESS = 'appModule/POST_NEW_SERVICE_SUCCESS';\nexport const POST_NEW_SERVICE_FAILS = 'appModule/POST_NEW_SERVICE_FAILS';\nexport const GET_ALL_PRODUCT = 'appModule/GET_ALL_PRODUCT';\nexport const GET_BY_ID = 'appModule/GET_BY_ID';\nexport const GET_ALL_PRODUCT_SUCCESS = 'appModule/GET_ALL_PRODUCT_SUCCESS';\nexport const GET_ALL_PRODUCT_FAILS = 'appModule/GET_ALL_PRODUCT_FAILS';\nexport const GET_ALL_SERVICE = 'appModule/GET_ALL_SERVICE';\nexport const GET_ALL_SERVICE_SUCCESS = 'appModule/GET_ALL_SERVICE_SUCCESS';\nexport const GET_ALL_SERVICE_FAILS = 'appModule/GET_ALL_SERVICE_FAILS';\nexport const ADD_STOCK_TO_PRODUCT = 'appModule/ADD_STOCK_TO_PRODUCT';\nexport const ADD_STOCK_TO_PRODUCT_SUCCESS = 'appModule/ADD_STOCK_TO_PRODUCT_SUCCESS';\nexport const ADD_STOCK_TO_PRODUCT_FAILS = 'appModule/ADD_STOCK_TO_PRODUCT_FAILS';\nexport const GET_ALL_STOCK = 'appModule/GET_ALL_STOCK';\nexport const GET_ALL_STOCK_SUCCESS = 'appModule/GET_ALL_STOCK_SUCCESS';\nexport const GET_ALL_STOCK_FAILS = 'appModule/GET_ALL_STOCK_FAILS';\nexport const GET_ALL_BILLS = 'appModule/GET_ALL_BILLS';\nexport const GET_ALL_BILLS_SUCCESS = 'appModule/GET_ALL_BILLS_SUCCESS';\nexport const GET_ALL_BILLS_FAILS = 'appModule/GET_ALL_BILLS_FAILS';\nexport const GET_ALL_BRANCH = 'appModule/GET_ALL_BRANCH';\nexport const GET_ALL_BRANCH_SUCCESS = 'appModule/GET_ALL_BRANCH_SUCCESS';\nexport const GET_ALL_BRANCH_FAILS = 'appModule/GET_ALL_BRANCH_FAILS';\nexport const ADD_BRANCH = 'appModule/ADD_BRANCH';\nexport const ADD_BRANCH_SUCCESS = 'appModule/ADD_BRANCH_SUCCESS';\nexport const ADD_BRANCH_FAILS = 'appModule/ADD_BRANCH_FAILS';\nexport const GET_ALL_EMPLOYEES = 'appModule/GET_ALL_EMPLOYEES';\nexport const GET_ALL_EMPLOYEES_SUCCESS = 'appModule/GET_ALL_EMPLOYEES_SUCCESS';\nexport const GET_ALL_EMPLOYEES_FAILS = 'appModule/GET_ALL_EMPLOYEES_FAILS';\nexport const ADD_EMPLOYEE = 'appModule/ADD_EMPLOYEE';\nexport const ADD_EMPLOYEE_SUCCESS = 'appModule/ADD_EMPLOYEE_SUCCESS';\nexport const ADD_EMPLOYEE_FAILS = 'appModule/ADD_EMPLOYEE_FAILS';\nexport const EDIT_BRANCH = 'appModule/EDIT_BRANCH';\nexport const DELETE_BRANCH = 'appModule/DELETE_BRANCH';\nexport const DELETE_BRANCH_SUCCESS = 'appModule/DELETE_BRANCH_SUCCESS';\nexport const DELETE_BRANCH_FAILS = 'appModule/DELETE_BRANCH_FAILS';\nexport const UPDATE_HISTORY_FN = 'appModule/UPDATE_HISTORY_FN';\nexport const GET_ALL_ACTIVITIES = 'appModule/GET_ALL_ACTIVITIES';\nexport const CHECK_AUTH = 'appModule/CHECK_AUTH';\nexport const TAKE_SNAPSHOT = 'appModule/TAKE_SNAPSHOT';\nexport const UPDATE_PRODUCT = 'appModule/UPDATE_PRODUCT';\nexport const UPDATE_SERVICE = 'appModule/UPDATE_SERVICE';\nexport const SET_CURRENT_BRANCH = 'appModule/SET_CURRENT_BRANCH';\nexport const GET_STATS = 'appModule/GET_STATS';\n\nexport const MODAL_TOGGLE = 'appModule/MODAL_TOGGLE';\nexport const LOADING_TOOGLE = 'appModule/LOADING_TOOGLE';\nexport const COMMON_ERROR_MESSAGE = 'appModule/COMMON_ERROR_MESSAGE';\nexport const FIRST_TIME_BOOT = 'appModule/FIRST_TIME_BOOT';\n\nexport const appModuleActions = {\n    updateUserAccessDetails: (data) => ({type: UPDATE_USER_ACCESS_DETAILS, data}),\n    onClickLogin: (data) => ({type: ONCLICK_LOGIN, data}),\n    loginSuccess: () => ({type: LOGIN_SUCCESS}),\n    loginFails: (data) => ({type: LOGIN_FAILS, data}),\n    loginLoading: (data) => ({type: LOGIN_LOADING, data}),\n\n    // Success (or) Failure\n    success: (data) => ({type: SUCCESS, data}),\n    failure: (data) => ({type: FAILURE, data}),\n\n    // Customer\n    getAllCustomer: (data) => ({type: GET_ALL_CUSTOMER, data}),\n    getAllCustomerSuccess: (data) => ({type: GET_ALL_CUSTOMER_SUCCESS, data}),\n    getAllCustomerFails: (data) => ({type: GET_ALL_CUSTOMER_FAILS, data}),\n    postNewCustomer: (data) => ({type: POST_NEW_CUSTOMER, data}),\n    postNewCustomerSuccess: (data) => ({type: POST_NEW_CUSTOMER_SUCCESS, data}),\n    postNewCustomerFails: (data) => ({type: POST_NEW_CUSTOMER_FAILS, data}),\n    putCustomer: (data) => ({type: PUT_CUSTOMER, data}),\n    deleteACustomer: (data) => ({type: DELETE_A_CUSTOMER, data}),\n    deleteACustomerSuccess: (data) => ({type: DELETE_A_CUSTOMER_SUCCESS, data}),\n    deleteACustomerFails: (data) => ({type: DELETE_A_CUSTOMER_FAILS, data}),\n\n    postNewService: (data) => ({type: POST_NEW_SERVICE, data}),\n    postNewServiceSuccess: (data) => ({type: POST_NEW_SERVICE_SUCCESS, data}),\n    postNewServiceFails: (data) => ({type: POST_NEW_SERVICE_FAILS, data}),\n    updateService: (data) => ({type: UPDATE_SERVICE, data}),\n    getAllStock: (data) => ({type: GET_ALL_STOCK, data}),\n    getAllStockSuccess: (data) => ({type: GET_ALL_STOCK_SUCCESS, data}),\n    getAllStockFails: (data) => ({type: GET_ALL_STOCK_FAILS, data}),\n    postNewProduct: (data) => ({type: POST_NEW_PRODUCT, data}),\n    postNewProductSuccess: (data) => ({type: POST_NEW_PRODUCT_SUCCESS, data}),\n    postNewProductFails: (data) => ({type: POST_NEW_PRODUCT_FAILS, data}),\n    updateProduct: (data) => ({type: UPDATE_PRODUCT, data}),\n    getAllProduct: (data) => ({type: GET_ALL_PRODUCT, data}),\n    getById: (data) => ({type: GET_BY_ID, data}),\n    getAllProductSuccess: (data) => ({type: GET_ALL_PRODUCT_SUCCESS, data}),\n    getAllProductFails: (data) => ({type: GET_ALL_PRODUCT_FAILS, data}),\n    getAllService: (data) => ({type: GET_ALL_SERVICE, data}),\n    getAllServiceSuccess: (data) => ({type: GET_ALL_SERVICE_SUCCESS, data}),\n    getAllServiceFails: (data) => ({type: GET_ALL_SERVICE_FAILS, data}),\n    addStockToProduct: (data) => ({type: ADD_STOCK_TO_PRODUCT, data}),\n    addStockToProductSuccess: (data) => ({type: ADD_STOCK_TO_PRODUCT_SUCCESS, data}),\n    addStockToProductFails: (data) => ({type: ADD_STOCK_TO_PRODUCT_FAILS, data}),\n    postNewBill: (data) => ({type: POST_NEW_BILL, data}),\n    postNewBillSuccess: (data) => ({type: POST_NEW_BILL_SUCCESS, data}),\n    postNewBillFails: (data) => ({type: POST_NEW_BILL_FAILS, data}),\n    getAllBills: (data) => ({type: GET_ALL_BILLS, data}),\n    getAllBillsSuccess: (data) => ({type: GET_ALL_BILLS_SUCCESS, data}),\n    getAllBillsFails: (data) => ({type: GET_ALL_BILLS_FAILS, data}),\n    getAllBranch: (data) => ({type: GET_ALL_BRANCH, data}),\n    getAllBranchSuccess: (data) => ({type: GET_ALL_BRANCH_SUCCESS, data}),\n    getAllBranchFails: (data) => ({type: GET_ALL_BRANCH_FAILS, data}),\n    getAllEmployees: (data) => ({type: GET_ALL_EMPLOYEES, data}),\n    getAllEmployeesSuccess: (data) => ({type: GET_ALL_EMPLOYEES_SUCCESS, data}),\n    getAllEmployeesFails: (data) => ({type: GET_ALL_EMPLOYEES_FAILS, data}),\n    editBranch: (data) => ({type: EDIT_BRANCH, data}),\n    deleteBranch: (data) => ({type: DELETE_BRANCH, data}),\n    deleteBranchSuccess: (data) => ({type: DELETE_BRANCH_SUCCESS, data}),\n    deleteBranchFails: (data) => ({type: DELETE_BRANCH_FAILS, data}),\n    updateHistoryFun: (data) => ({type: UPDATE_HISTORY_FN, data}),\n    getAllActivities: (data) => ({type: GET_ALL_ACTIVITIES, data}),\n    checkAuth: (data) => ({type: CHECK_AUTH}),\n    addNotification: (data) => ({type: ADD_NOTIFICATION, data}),\n    takeSnapshot: (data) => ({type: TAKE_SNAPSHOT, data}),\n    setCurrentBranch: (data) => ({type: SET_CURRENT_BRANCH, data}),\n\n    getStats: (data) => ({type: GET_STATS, data}),\n\n    modalToggle: (data) => ({type: MODAL_TOGGLE, data}),\n    loadingToogle: (data) => ({type: LOADING_TOOGLE, data}),\n    commonErrorMsg: (data) => ({type: COMMON_ERROR_MESSAGE, data}),\n    firstTimeBoot: (data) => ({type: FIRST_TIME_BOOT, data}),\n};\n\nexport function* postLoginSaga() {\n    yield put(appModuleActions.loginLoading(true));\n    yield put(appModuleActions.loginFails(''));\n    const creds = yield select(selectors.getLoginCreds);\n    try {\n        const {body} = yield call(bec, {\n            type: 'post',\n            uri: 'auth/login',\n            obj: {\n                username: creds.get('username'),\n                password: creds.get('password')\n            },\n        });\n        setLocalStorage('t', body.token);\n        yield put(appModuleActions.loginSuccess(body));\n        yield put(appModuleActions.loginLoading(false));\n        // yield put(push('/'));\n        window.location.href = '/';\n\n    } catch (e) {\n        yield put(appModuleActions.loginFails(e.body.data));\n        yield put(appModuleActions.loginLoading(false));\n    }\n}\n\n\n// Customer\nexport function* getAllCustomerSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'getAllCustomerLoading', value: true}));\n\n    const query = yield select(({appModuleReducer}) => appModuleReducer.get('customerQueryPage'));\n    try {\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: 'customers?page=' + query,\n        });\n        yield put(appModuleActions.getAllCustomerSuccess(body));\n        yield put(appModuleActions.loadingToogle({key: 'getAllCustomerLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.getAllCustomerFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'getAllCustomerLoading', value: false}));\n    }\n}\n\nexport function* postCustomerSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'postNewCustomerLoading', value: true}));\n    const customerData = yield select(selectors.getPostCustomerData);\n    const updateHistoryFnData = yield select(selectors.updateHistoryFnData);\n    try {\n        let fullData = {\n            type: 'post',\n            uri: 'customer',\n            obj: {\n                ...customerData.toJS()\n            },\n        };\n\n        const {body} = yield call(bec, fullData);\n        yield put(appModuleActions.postNewCustomerSuccess(body));\n        yield put(appModuleActions.getAllCustomer());\n        if (body.message && body._id) {\n            yield put(appModuleActions.addNotification({\n                message: `Customer ${customerData.get(\"name\")} - ${body._id} created successfully.`,\n                level: \"success\"\n            }));\n        }\n        yield put(appModuleActions.loadingToogle({key: 'postNewCustomerLoading', value: false}));\n        updateHistoryFnData.push('/customers');\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.postNewCustomerFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'postNewCustomerLoading', value: false}));\n    }\n}\n\nexport function* putCustomerSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'putCustomerLoading', value: true}));\n    const customerData = yield select(selectors.putCustomerData);\n    const updateHistoryFnData = yield select(selectors.updateHistoryFnData);\n    try {\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('detailData'));\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const queryId = query.get(\"queryId\");\n        const type = query.get(\"type\");\n        let fullData = {\n            type: 'put',\n            uri: `customer/${currentBranch._id}/${customerData.get(\"mobileNo\")}`,\n            obj: {\n                ...customerData.toJS()\n            },\n        };\n\n        const {body} = yield call(bec, fullData);\n        yield put(appModuleActions.success());\n        // yield put(appModuleActions.getAllCustomer());\n        yield put(appModuleActions.getById({type, id: queryId}));\n        if (body.message && body._id) {\n            yield put(appModuleActions.addNotification({\n                message: `Customer ${customerData.get(\"name\")} - ${customerData.get(\"mobileNo\")} updated successfully.`,\n                level: \"success\"\n            }));\n        }\n        yield put(appModuleActions.loadingToogle({key: 'putCustomerLoading', value: false}));\n        // updateHistoryFnData.push('/customers');\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.failure(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'putCustomerLoading', value: false}));\n    }\n}\n\nexport function* deleteACustomerSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'deleteACustomerLoading', value: true}));\n    const deleteACustomerData = yield select(selectors.deleteACustomerData);\n    const updateHistoryFnData = yield select(selectors.updateHistoryFnData);\n    try {\n        const {body} = yield call(bec, {\n            type: 'delete',\n            uri: 'customer/' + deleteACustomerData.get(\"mobile_number\"),\n        });\n        updateHistoryFnData.push('/customers');\n        yield put(appModuleActions.getAllCustomer());\n        if (body.message && body._id) {\n            yield put(appModuleActions.addNotification({\n                message: `Customer ${deleteACustomerData.get(\"full_name\")} - ${deleteACustomerData.get(\"_id\")} deleted successfully.`,\n                level: \"success\"\n            }));\n        }\n        yield put(appModuleActions.loadingToogle({key: 'deleteACustomerLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.deleteACustomerFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'deleteACustomerLoading', value: false}));\n    }\n}\n\n// Product\nexport function* getAllProductSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'getProductLoading', value: true}));\n    try {\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('productQueryPage'));\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: `products/${currentBranch._id}/?page=${query}`,\n        });\n        yield put(appModuleActions.getAllProductSuccess(body));\n        yield put(appModuleActions.loadingToogle({key: 'getProductLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.failure(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'getProductLoading', value: false}));\n    }\n}\n\nexport function* getByIdSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'getByIdLoading', value: true}));\n    try {\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('detailData'));\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const queryId = query.get(\"queryId\");\n        const type = query.get(\"type\");\n        let uri = `${type}/${queryId}`;\n        switch (type) {\n            case \"product\":\n            case \"service\":\n            case \"invoice\":\n                uri = `${type}/${currentBranch._id}/${queryId}`;\n                break;\n            case \"branch\":\n                uri = `${type}/${currentBranch._id}/`;\n                break;\n\n            default:\n                break;\n        }\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri,\n        });\n        let successData = {};\n        switch (type) {\n            case \"product\":\n                successData = {\n                    detailData: {\n                        detail: body.product,\n                        invoicesAdded: body.invoicesAdded,\n                        servicesUsed: body.servicesUsed,\n                        queryId,\n                        type\n                    }\n                };\n                break;\n\n            case \"service\":\n                successData = {\n                    detailData: {\n                        detail: body.service,\n                        invoicesAdded: body.invoicesAdded,\n                        queryId,\n                        type\n                    }\n                };\n                break;\n\n            case \"invoice\":\n                successData = {\n                    detailData: {\n                        detail: body.invoice,\n                        queryId,\n                        type\n                    }\n                };\n                break;\n\n            case \"customer\":\n                successData = {\n                    detailData: {\n                        detail: body.customer,\n                        invoicesAdded: body.invoicesAdded,\n                        queryId,\n                        type\n                    }\n                };\n                break;\n\n            case \"branch\":\n                successData = {\n                    detailData: {\n                        detail: body.branch,\n                        type\n                    }\n                };\n                break;\n\n            default:\n                break;\n        }\n        yield put(appModuleActions.success(successData));\n        yield put(appModuleActions.loadingToogle({key: 'getByIdLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.failure(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'getByIdLoading', value: false}));\n    }\n}\n\nexport function* postProductSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: true}));\n    const customerData = yield select(selectors.getPostProductData);\n    const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n    try {\n        const {body} = yield call(bec, {\n            type: 'post',\n            uri: `product/${currentBranch._id}`,\n            obj: {\n                ...customerData.toJS(),\n            },\n        });\n\n        yield put(appModuleActions.modalToggle({modal: PRODUCT_ADD_MODAL, view: false}));\n        yield put(appModuleActions.success(body));\n        yield put(appModuleActions.getAllProduct());\n        if (body.message && body._id) {\n            yield put(appModuleActions.addNotification({\n                message: `Product ${body._id} added successfully.`,\n                level: \"success\"\n            }));\n        }\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.failure(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\n    }\n}\n\nexport function* updateProductSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: true}));\n    const productData = yield select(selectors.getPostProductData);\n    try {\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('detailData'));\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const queryId = query.get(\"queryId\");\n        const type = query.get(\"type\");\n        const {body} = yield call(bec, {\n            type: 'put',\n            uri: `product/${currentBranch._id}/${productData.get('_id')}`,\n            obj: {\n                ...productData.toJS(),\n            },\n        });\n        yield put(appModuleActions.modalToggle({modal: PRODUCT_EDIT_MODAL, view: false}));\n        yield put(appModuleActions.success(body));\n        yield put(appModuleActions.getById({type, id: queryId}));\n        if (body.message && body._id) {\n            yield put(appModuleActions.addNotification({\n                message: body.message,\n                level: \"success\"\n            }));\n        }\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.failure(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\n    }\n}\n\n\nexport function* getAllStockSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'getStockLoading', value: true}));\n    try {\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: `stock/${currentBranch._id}`,\n        });\n        yield put(appModuleActions.getAllStockSuccess(body));\n        yield put(appModuleActions.loadingToogle({key: 'getStockLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.getAllStockFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'getStockLoading', value: false}));\n    }\n}\n\n\nexport function* getAllServiceSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'getServiceLoading', value: true}));\n    try {\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('serviceQueryPage'));\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: `services/${currentBranch._id}?page=${query}`,\n        });\n        yield put(appModuleActions.getAllServiceSuccess(body));\n        yield put(appModuleActions.loadingToogle({key: 'getServiceLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.getAllServiceFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'getServiceLoading', value: false}));\n    }\n}\n\nexport function* addStockToProductSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'addStockToProductLoading', value: true}));\n    const addNewStockToProductData = yield select(selectors.getAddNewStockToProductData);\n    try {\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('detailData'));\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const queryId = query.get(\"queryId\");\n        const type = query.get(\"type\");\n        const {body} = yield call(bec, {\n            type: 'post',\n            uri: `stock/${currentBranch._id}`,\n            obj: {\n                ...addNewStockToProductData.toJS(),\n            },\n        });\n        yield put(appModuleActions.addStockToProductSuccess(body));\n        yield put(appModuleActions.getById({type, id: queryId}));\n        if (body.message && body._id) {\n            yield put(appModuleActions.addNotification({\n                message: `Stock ${body._id} added successfully.`,\n                level: \"success\"\n            }));\n        }\n        yield put(appModuleActions.loadingToogle({key: 'addStockToProductLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.addStockToProductFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'addStockToProductLoading', value: false}));\n    }\n}\n\nexport function* postServiceSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: true}));\n    const serviceData = yield select(selectors.getPostServiceData);\n    try {\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const {body} = yield call(bec, {\n            type: 'post',\n            uri: `service/${currentBranch._id}`,\n            obj: {\n                ...serviceData.toJS(),\n            },\n        });\n\n        yield put(appModuleActions.modalToggle({modal: SERVICE_ADD_MODAL, view: false}));\n        yield put(appModuleActions.postNewServiceSuccess(body));\n        yield put(appModuleActions.getAllService());\n        if (body.message && body._id) {\n            yield put(appModuleActions.addNotification({\n                message: `Service ${body._id} created successfully.`,\n                level: \"success\"\n            }));\n        }\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\n        yield put(appModuleActions.modalToggle({key: 'newProductModal', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.postNewServiceFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'postNewProductLoading', value: false}));\n    }\n}\n\nexport function* updateServiceSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'updateServiceLoading', value: true}));\n    const serviceData = yield select(selectors.getPostServiceData);\n    try {\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('detailData'));\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const queryId = query.get(\"queryId\");\n        const type = query.get(\"type\");\n        const {body} = yield call(bec, {\n            type: 'put',\n            uri: `service/${currentBranch._id}/${serviceData.get('_id')}`,\n            obj: {\n                ...serviceData.toJS(),\n            },\n        });\n        yield put(appModuleActions.modalToggle({modal: SERVICE_EDIT_MODAL, view: false}));\n        yield put(appModuleActions.success(body));\n        yield put(appModuleActions.getById({type, id: queryId}));\n        if (body.message && body._id) {\n            yield put(appModuleActions.addNotification({\n                message: `Service ${body._id} updated successfully.`,\n                level: \"success\"\n            }));\n        }\n        yield put(appModuleActions.loadingToogle({key: 'updateServiceLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.failure(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'updateServiceLoading', value: false}));\n    }\n}\n\nexport function* postBillSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'postNewBillLoading', value: true}));\n    const billData = yield select(selectors.getPostBillData);\n    const updateHistoryFnData = yield select(selectors.updateHistoryFnData);\n    try {\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const {body} = yield call(bec, {\n            type: 'post',\n            uri: `invoice/${currentBranch._id}`,\n            obj: {\n                ...billData.toJS(),\n            },\n        });\n\n        updateHistoryFnData.goBack();\n        if (body.message && body._id) {\n            yield put(appModuleActions.addNotification({\n                message: `Invoice ${body._id} created successfully.`,\n                level: \"success\"\n            }));\n        }\n        // yield put(appModuleActions.getAllBills());\n        yield put(appModuleActions.loadingToogle({key: 'postNewBillLoading', value: false}));\n        yield put(appModuleActions.modalToggle({key: 'newBillModal', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.postNewBillFails(e));\n        yield put(appModuleActions.loadingToogle({key: 'postNewBillLoading', value: false}));\n    }\n}\n\nexport function* getAllBillsSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'getBillLoading', value: true}));\n    try {\n        const query = yield select(({appModuleReducer}) => appModuleReducer.get('billQueryPage'));\n        const currentBranch = yield select(({appModuleReducer}) => appModuleReducer.get('currentBranch').toJS());\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: `invoices/${currentBranch._id}?page=${query}`,\n        });\n        yield put(appModuleActions.getAllBillsSuccess(body));\n        yield put(appModuleActions.loadingToogle({key: 'getBillLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.getAllBillsFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'getBillLoading', value: false}));\n    }\n}\n\nexport function* getAllBranchSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'getAllBranchLoading', value: true}));\n    try {\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: 'branches',\n        });\n        yield put(appModuleActions.getAllBranchSuccess(body));\n        yield put(appModuleActions.loadingToogle({key: 'getAllBranchLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.getAllBranchFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'getAllBranchLoading', value: false}));\n    }\n}\n\nexport function* getAllEmployeesSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'getAllEmployeesLoading', value: true}));\n    try {\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: 'user/employees',\n        });\n        yield put(appModuleActions.getAllEmployeesSuccess(body));\n        yield put(appModuleActions.loadingToogle({key: 'getAllEmployeesLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.getAllEmployeesFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'getAllEmployeesLoading', value: false}));\n    }\n}\n\nexport function* deleteABranchSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'deleteABranchLoading', value: true}));\n    const deleteABranchData = yield select(selectors.deleteABranchData);\n    try {\n        const {body} = yield call(bec, {\n            type: 'delete',\n            uri: 'branch/' + deleteABranchData.get(\"_id\"),\n        });\n        yield put(appModuleActions.getAllBranch());\n        yield put(appModuleActions.addNotification({\n            message: `${deleteABranchData.get(\"name\")} - ${deleteABranchData.get(\"_id\")} deleted successfully.`,\n            level: \"success\"\n        }));\n        yield put(appModuleActions.loadingToogle({key: 'deleteABranchLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}))\n        yield put(appModuleActions.deleteBranchFails(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'deleteABranchLoading', value: false}));\n    }\n}\n\nexport function* getAllActivitiesSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'getAllActivitiesLoading', value: true}));\n    try {\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: 'activity',\n        });\n        yield put(appModuleActions.success({allActivitiesData: body.activities}));\n        yield put(appModuleActions.loadingToogle({key: 'getAllActivitiesLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.failure(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'getAllActivitiesLoading', value: false}));\n    }\n}\n\nexport function* checkAuthSaga() {\n    try {\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: 'auth/verify',\n        });\n\n        yield put(appModuleActions.updateUserAccessDetails(body));\n        console.log(\"user logged in\");\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: \"user logged out\", level: \"error\"}));\n        console.log(\"user logged out\");\n        try {\n            const updateHistoryFnData = yield select(selectors.updateHistoryFnData);\n            updateHistoryFnData.push('/auth');\n        } catch (e) {\n            // nothing\n        }\n    }\n}\n\nexport function* takeSnapshotSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'takeSnapshotLoading', value: true}));\n    try {\n        const takeSnapshotQueryData = yield select(selectors.takeSnapshotQueryData);\n        let query = \"\";\n        if (takeSnapshotQueryData === \"today\") {\n            let start = new Date();\n            start.setHours(0, 0, 0, 0);\n            let end = new Date();\n            end.setHours(23, 59, 59, 999);\n            query = `start=${start.toISOString()}&end=${end.toISOString()}`\n        } else if (takeSnapshotQueryData === \"week\") {\n            let start = moment().subtract(7, 'days').toDate();\n            let end = new Date();\n            end.setHours(23, 59, 59, 999);\n            query = `start=${start}&end=${end}`\n        } else if (takeSnapshotQueryData === \"month\") {\n            let start = moment().subtract(30, 'days').toDate();\n            let end = new Date();\n            end.setHours(23, 59, 59, 999);\n            query = `start=${start.toISOString()}&end=${end.toISOString()}`\n        } else if (takeSnapshotQueryData === \"year\") {\n            let start = moment().subtract(365, 'days').toDate();\n            let end = new Date();\n            end.setHours(23, 59, 59, 999);\n            query = `start=${start.toISOString()}&end=${end.toISOString()}`\n        }\n\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: 'snapshot?' + query,\n        });\n\n        yield put(appModuleActions.addNotification({\n            message: \"Today's snapshot has been sent to your email successfully.\",\n            level: \"success\"\n        }));\n        yield put(appModuleActions.loadingToogle({key: 'takeSnapshotLoading', value: false}));\n\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.loadingToogle({key: 'takeSnapshotLoading', value: false}));\n    }\n}\n\nexport function* getStatsSaga() {\n    yield put(appModuleActions.loadingToogle({key: 'getStatsLoading', value: true}));\n    try {\n        const {body} = yield call(bec, {\n            type: 'get',\n            uri: `stats/today`,\n        });\n        yield put(appModuleActions.success({stats: body.stats}));\n        yield put(appModuleActions.loadingToogle({key: 'getStatsLoading', value: false}));\n    } catch (e) {\n        yield put(appModuleActions.addNotification({message: e.body.data, level: \"error\"}));\n        yield put(appModuleActions.failure(e.body.data));\n        yield put(appModuleActions.loadingToogle({key: 'getStatsLoading', value: false}));\n    }\n}\n\nfunction* watchLoginSaga() {\n    yield takeLatest(ONCLICK_LOGIN, postLoginSaga)\n}\n\n// Customer\nfunction* watchGetAllCustomerSaga() {\n    yield takeLatest(GET_ALL_CUSTOMER, getAllCustomerSaga)\n}\n\nfunction* watchPostCustomerSaga() {\n    yield takeLatest(POST_NEW_CUSTOMER, postCustomerSaga)\n}\n\nfunction* watchPutCustomerSaga() {\n    yield takeLatest(PUT_CUSTOMER, putCustomerSaga)\n}\n\nfunction* watchDeleteACustomerSaga() {\n    yield takeLatest(DELETE_A_CUSTOMER, deleteACustomerSaga)\n}\n\nfunction* watchPostProductSaga() {\n    yield takeLatest(POST_NEW_PRODUCT, postProductSaga)\n}\n\nfunction* watchUpdateProductSaga() {\n    yield takeLatest(UPDATE_PRODUCT, updateProductSaga)\n}\n\nfunction* watchGetAllProductSaga() {\n    yield takeLatest(GET_ALL_PRODUCT, getAllProductSaga)\n}\n\nfunction* watchGetByIdSaga() {\n    yield takeEvery(GET_BY_ID, getByIdSaga)\n}\n\nfunction* watchAddStockToProductSaga() {\n    yield takeLatest(ADD_STOCK_TO_PRODUCT, addStockToProductSaga)\n}\n\nfunction* watchPostNewServiceSaga() {\n    yield takeLatest(POST_NEW_SERVICE, postServiceSaga)\n}\n\nfunction* watchUpdateServiceSaga() {\n    yield takeLatest(UPDATE_SERVICE, updateServiceSaga)\n}\n\nfunction* watchGetAllServiceSaga() {\n    yield takeLatest(GET_ALL_SERVICE, getAllServiceSaga)\n}\n\nfunction* watchPostBillSaga() {\n    yield takeLatest(POST_NEW_BILL, postBillSaga)\n}\n\nfunction* watchGetAllStockSaga() {\n    yield takeLatest(GET_ALL_STOCK, getAllStockSaga)\n}\n\nfunction* watchGetAllBillsSaga() {\n    yield takeLatest(GET_ALL_BILLS, getAllBillsSaga)\n}\n\nfunction* watchGetAllBranchSaga() {\n    yield takeLatest(GET_ALL_BRANCH, getAllBranchSaga)\n}\n\nfunction* watchGetAllEmployeesSaga() {\n    yield takeLatest(GET_ALL_EMPLOYEES, getAllEmployeesSaga)\n}\n\nfunction* watchDeleteABranchSaga() {\n    yield takeLatest(DELETE_BRANCH, deleteABranchSaga)\n}\n\nfunction* watchGetAllActivities() {\n    yield takeLatest(GET_ALL_ACTIVITIES, getAllActivitiesSaga)\n}\n\nfunction* watchCheckAuth() {\n    yield takeLatest(CHECK_AUTH, checkAuthSaga)\n}\n\nfunction* watchTakeSnapshot() {\n    yield takeLatest(TAKE_SNAPSHOT, takeSnapshotSaga)\n}\n\nfunction* watchGetStats() {\n    yield takeLatest(GET_STATS, getStatsSaga)\n}\n\nexport function* appModuleSaga() {\n    yield all([\n        fork(watchLoginSaga),\n        fork(watchGetAllCustomerSaga),\n        fork(watchPutCustomerSaga),\n        fork(watchPostCustomerSaga),\n        fork(watchDeleteACustomerSaga),\n        fork(watchPostProductSaga),\n        fork(watchUpdateProductSaga),\n        fork(watchGetAllProductSaga),\n        fork(watchGetByIdSaga),\n        fork(watchAddStockToProductSaga),\n        fork(watchPostNewServiceSaga),\n        fork(watchUpdateServiceSaga),\n        fork(watchGetAllServiceSaga),\n        fork(watchPostBillSaga),\n        fork(watchGetAllStockSaga),\n        fork(watchGetAllBillsSaga),\n        fork(watchGetAllBranchSaga),\n        fork(watchGetAllEmployeesSaga),\n        fork(watchDeleteABranchSaga),\n        fork(watchGetAllActivities),\n        fork(watchCheckAuth),\n        fork(watchTakeSnapshot),\n        fork(watchGetStats),\n    ]);\n}\n\nconst initialState = fromJS({\n    myUserAccess: {\n        role: '',\n        perm: {\n            bill: {\n                add: false,\n                edit: false,\n                view: false\n            },\n            customer: {\n                add: false,\n                edit: false,\n                view: false\n            },\n            items: {\n                add: false,\n                edit: false,\n                view: false\n            }\n        },\n    },\n    commonErrorMsg: '',\n    firstTimeBoot: false,\n    loginLoading: false,\n    credsDetail: {},\n    success: {},\n    error: '',\n    postNewCustomerData: {},\n    putCustomerData: {},\n    postNewProductData: {},\n    postNewServiceData: {},\n    postNewBillData: {},\n    takeSnapshotQuery: \"\",\n    addNewStockToProductData: {},\n    allProductsData: {\n        products: [],\n        count: {total: 0, page: 0, totalPages: 0},\n    },\n    productQueryPage: 0,\n    detailData: {\n        detail: {},\n        invoicesAdded: [],\n        servicesUsed: [],\n        queryId: \"\"\n    },\n    allCustomerData: {\n        customers: [],\n        count: {total: 0, page: 0, totalPages: 0},\n    },\n    customerQueryPage: 0,\n    allServiceData: {\n        services: [],\n        count: {total: 0, page: 0, totalPages: 0},\n    },\n    serviceQueryPage: 0,\n    allStockData: [],\n    allBillData: {\n        invoices: [],\n        count: {total: 0, page: 0, totalPages: 0},\n    },\n    billQueryPage: 0,\n    allBranchData: [],\n    editBranchData: {},\n    allEmployeesData: {\n        employees: [],\n        admins: []\n    },\n    allActivitiesData: [],\n    deleteACustomerData: {},\n    deleteABranchData: {},\n    stats: [],\n    currentBranch: {},\n    loading: {\n        postNewCustomerLoading: false,\n        postNewProductLoading: false,\n        viewProductsLoading: false,\n        getProductLoading: false,\n        addStockToProductLoading: false,\n        getAllCustomerLoading: false,\n        postNewServiceLoading: false,\n        getServiceLoading: false,\n        postNewBillLoading: false,\n        getStockLoading: false,\n        getBillLoading: false,\n        deleteACustomerLoading: false,\n        getAllBranchLoading: false,\n        getAllEmployeesLoading: false,\n        deleteABranchLoading: false,\n        putCustomerLoading: false,\n        getAllActivitiesLoading: false,\n        takeSnapshotLoading: false,\n        getByIdLoading: false,\n        updateServiceLoading: false,\n        getStatsLoading: false\n    },\n    modal: {\n        customerAddModal: false,\n        productAddModal: false,\n        serviceAddModal: false,\n        productEditModal: false,\n        serviceEditModal: false,\n        branchAddModal: false,\n        branchEditModal: false,\n        employeeAddModal: false,\n        viewCustomersModal: false\n    },\n    updateHistoryFn: {},\n    notification: {\n        type: \"\",\n        message: \"\",\n        level: \"\"\n    },\n});\n\nexport const CUSTOMER_ADD_MODAL = \"customerAddModal\";\nexport const PRODUCT_ADD_MODAL = \"productAddModal\";\nexport const SERVICE_ADD_MODAL = \"serviceAddModal\";\nexport const PRODUCT_EDIT_MODAL = \"productEditModal\";\nexport const SERVICE_EDIT_MODAL = \"serviceEditModal\"\nexport const BRANCH_ADD_MODAL = \"branchAddModal\";\nexport const BRANCH_EDIT_MODAL = \"branchEditModal\";\nexport const EMPLOYEE_ADD_MODAL = \"employeeAddModal\";\n\nexport default (state = initialState, {type, data}) => {\n    switch (type) {\n\n        case FIRST_TIME_BOOT:\n            return state.merge({\n                firstTimeBoot: data\n            });\n\n        case UPDATE_USER_ACCESS_DETAILS:\n            return state.merge({\n                myUserAccess: data\n            });\n\n        case COMMON_ERROR_MESSAGE:\n            return state.merge({\n                commonErrorMsg: data\n            });\n\n        case LOGIN_LOADING:\n            return state.merge({\n                loginLoading: data\n            });\n\n        case ONCLICK_LOGIN:\n            return state.merge({\n                credsDetail: data\n            });\n\n        case LOGIN_FAILS:\n            return state.merge({\n                error: data\n            });\n\n        // Customer\n\n        case GET_ALL_CUSTOMER:\n            return state.merge({\n                customerQueryPage: data ? data : 0\n            });\n\n        case GET_ALL_CUSTOMER_SUCCESS:\n            return state.merge({\n                allCustomerData: {\n                    customers: [...data.customers],\n                    count: {\n                        total: data.count.total,\n                        page: data.count.page,\n                        totalPages: data.count.totalPages\n                    }\n                }\n            });\n\n        case POST_NEW_CUSTOMER:\n            return state.merge({\n                postNewCustomerData: data\n            });\n\n        case PUT_CUSTOMER:\n            return state.merge({\n                putCustomerData: data\n            });\n\n        case DELETE_A_CUSTOMER:\n            return state.merge({\n                deleteACustomerData: data\n            });\n\n        case POST_NEW_BILL:\n            return state.merge({\n                postNewBillData: data\n            });\n\n        case POST_NEW_PRODUCT:\n        case UPDATE_PRODUCT:\n            return state.merge({\n                postNewProductData: data\n            });\n\n        case POST_NEW_SERVICE:\n        case UPDATE_SERVICE:\n            return state.merge({\n                postNewServiceData: data\n            });\n\n        case GET_BY_ID:\n            let byData = {\n                detailData: {\n                    detail: {},\n                    invoicesAdded: [],\n                    servicesUsed: [],\n                    queryId: data.id,\n                    type: data.type\n                }\n            };\n            return state.merge(byData);\n\n        case GET_ALL_PRODUCT:\n            return state.merge({\n                productQueryPage: data ? data : 0\n            });\n\n        case GET_ALL_PRODUCT_SUCCESS:\n            return state.merge({\n                allProductsData: {\n                    products: [...data.products],\n                    count: {\n                        total: data.count.total,\n                        page: data.count.page,\n                        totalPages: data.count.totalPages\n                    }\n                }\n            });\n\n        case ADD_STOCK_TO_PRODUCT:\n            return state.merge({\n                addNewStockToProductData: data\n            });\n\n        case GET_ALL_BILLS:\n            return state.merge({\n                billQueryPage: data ? data : 0\n            });\n\n        case GET_ALL_BILLS_SUCCESS:\n            return state.merge({\n                allBillData: {\n                    invoices: [...data.invoices],\n                    count: {\n                        total: data.count.total,\n                        page: data.count.page,\n                        totalPages: data.count.totalPages\n                    }\n                }\n            });\n\n        case GET_ALL_SERVICE:\n            return state.merge({\n                serviceQueryPage: data ? data : 0\n            });\n\n        case GET_ALL_SERVICE_SUCCESS:\n            return state.merge({\n                allServiceData: {\n                    services: [...data.services],\n                    count: {\n                        total: data.count.total,\n                        page: data.count.page,\n                        totalPages: data.count.totalPages\n                    }\n                }\n            });\n\n        case GET_ALL_STOCK_SUCCESS:\n            return state.merge({\n                allStockData: data\n            });\n\n        case GET_ALL_BRANCH_SUCCESS:\n            return state.merge({\n                allBranchData: data.branches\n            });\n\n        case GET_ALL_EMPLOYEES_SUCCESS:\n            return state.merge({\n                allEmployeesData: data\n            });\n\n        case EDIT_BRANCH:\n            return state.merge({\n                editBranchData: data\n            });\n\n        case DELETE_BRANCH:\n            return state.merge({\n                deleteABranchData: data\n            });\n\n        case UPDATE_HISTORY_FN:\n            return state.merge({\n                updateHistoryFn: data\n            });\n\n        case LOADING_TOOGLE:\n            return state.mergeDeep({\n                loading: {\n                    [data.key]: data.value,\n                }\n            });\n\n        case MODAL_TOGGLE:\n            return state.mergeDeep({\n                modal: {\n                    [data.modal]: data.view,\n                }\n            });\n\n        case SUCCESS:\n            return state.merge({...data});\n\n        case ADD_NOTIFICATION:\n            return state.merge({\n                notification: {\n                    type: ADD_NOTIFICATION,\n                    message: data.message,\n                    level: data.level,\n                }\n            });\n\n        case TAKE_SNAPSHOT:\n            return state.merge({takeSnapshotQuery: data});\n\n        case SET_CURRENT_BRANCH:\n            return state.merge({currentBranch: data})\n\n        default:\n            return state\n    }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions} from \"../../AppModule\";\nimport NotificationSystem from 'react-notification-system';\n\nvar style = {\n    NotificationItem: {\n        DefaultStyle: {\n            margin: '10px 5px 2px 1px',\n            backgroundColor: 'white',\n            border: '1px solid #c7c7c7',\n            boxShadow: '0px 4px 20px 0px #c7c7c7'\n        },\n        success: {\n            color: 'black'\n        },\n        error: {\n            color: '#ed5e5e',\n            border: '1px solid #ed5e5e',\n            backgroundColor: '#ffeded',\n        }\n    },\n    MessageWrapper: {\n        DefaultStyle: {\n            margin: 0,\n            padding: 3\n        }\n    },\n    Dismiss: {\n        DefaultStyle: {\n            backgroundColor: '#000000',\n            color: '#ffffff',\n            top: '6px',\n            right: '8px',\n        },\n        success: {\n            backgroundColor: '#000000',\n            color: '#ffffff',\n        },\n        error: {\n            backgroundColor: '#ed5e5e',\n            color: 'white',\n        },\n        warning: {\n            backgroundColor: '#000000',\n            color: '#ffffff',\n        },\n        info: {\n            backgroundColor: '#000000',\n            color: '#ffffff',\n        }\n    },\n}\n\nclass NotificationContainer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            message: \"\",\n            level: \"\"\n        }\n    }\n\n    componentDidMount() {\n        this.notificationSystem = this.refs.notificationSystem;\n    }\n\n    componentWillReceiveProps(newProps) {\n        const {notification} = newProps.appModuleData.toJS();\n        const {message, level} = notification;\n        if (message && level) {\n            this.notificationSystem.addNotification({message, level});\n            this.setState({message, level});\n            this.props.addNotification({message: null, level: null});\n        }\n    }\n\n    render() {\n        return (\n            <NotificationSystem ref=\"notificationSystem\" style={style}/>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NotificationContainer));","import React, {Component} from \"react\";\nimport \"./modal.css\";\n\nimport Modal from 'react-responsive-modal';\n\nclass ModalIndex extends Component {\n    render() {\n        const {open, onClose, header, content, footer, center, showCloseIcon, size} = this.props;\n\n        let modalClass = {};\n\n        switch (size) {\n            case \"mini\":\n                modalClass = {modal: \"Modal-Mini\"};\n                break;\n\n            case \"big\":\n                modalClass = {modal: \"Modal-Big\"};\n                break;\n\n            default:\n                break;\n        }\n\n        return (\n            <Modal\n                open={open}\n                onClose={onClose}\n                center={center}\n                showCloseIcon={showCloseIcon}\n                classNames={modalClass}\n            >\n                <div className=\"ModalIndex\">\n                    {(header && footer) ?\n                        <div>\n                            <div className=\"Header\">\n                                <div>{header}</div>\n                            </div>\n                            <div className=\"Content\">\n                                {content}\n                            </div>\n                            <div className=\"Footer\">\n                                <div>{footer}</div>\n                            </div>\n                        </div>\n                        : <div>{content}</div>\n                    }\n                </div>\n            </Modal>\n        );\n    }\n}\n\n\nexport default ModalIndex;","import React, {Component} from \"react\";\nimport \"./style.css\";\n\nclass Dropdown extends Component {\n    static defaultProps = {\n        list: []\n    };\n\n    container = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            labelItem: null,\n            typeDropdown: null\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.list.length > 0) {\n            const {label} = this.props.list[0];\n            let firstItem = null;\n            if (typeof label !== 'undefined') {\n                this.checkType(false);\n                firstItem = label;\n            } else {\n                this.checkType(true);\n                firstItem = this.props.list[0];\n            }\n            this.setState({\n                labelItem: firstItem\n            });\n        }\n\n        document.addEventListener(\"mousedown\", this.hideDropdown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"mousedown\", this.hideDropdown);\n    }\n\n    checkType = (value) => {\n        this.setState({\n            typeDropdown: value\n        });\n    };\n\n    showDropdown = (event) => {\n        this.setState({isOpen: true});\n    };\n\n    hideDropdown = (event) => {\n        if (this.container.current && !this.container.current.contains(event.target)) {\n            this.setState({isOpen: false});\n        }\n    };\n\n    chooseItem = (value) => {\n        if (this.state.labelItem !== value) {\n            this.setState({\n                labelItem: value\n            })\n        }\n    };\n\n    renderDataDropDown = (item, index) => {\n        const {onSelectOption} = this.props;\n        const {value, label} = {value: index, label: item};\n        return (\n            <li\n                key={index}\n                value={value}\n                onClick={() => onSelectOption(label.value)}\n            >\n\n                <a className=\"dropdown-menu-li\">{label && label.value && label.value.toLocaleUpperCase()}</a>\n            </li>\n        )\n    };\n\n    render() {\n        const {list, icon} = this.props;\n        return (\n            <div ref={this.container}>\n                <div style={{cursor: \"pointer\"}} onClick={this.showDropdown}>\n                    <img style={{width: icon ? 34 :18}}\n                         src={icon ? icon : \"https://img.icons8.com/material-outlined/96/000000/menu-2.png\"}/>\n                </div>\n                <div className={`dropdown ${this.state.isOpen ? 'open' : ''}`}>\n                    <ul className=\"dropdown-menu\">\n                        {list.length > 0 ? list.map(this.renderDataDropDown) : <li><a>No Options</a></li>}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dropdown;","import React, {Component} from \"react\";\nimport \"./style.css\";\nimport Dropdown from \"../../../DropDown\";\n\nexport default class extends Component {\n    render() {\n        const {pageName} = this.props;\n        return (\n            <div className=\"page-header\" id=\"pageHeader\">\n                <div className=\"page-header-name\">{pageName}</div>\n                <div className=\"page-header-user-icon\">\n                    <Dropdown icon=\"https://img.icons8.com/fluent/344/user-male-circle.png\"\n                              list={userAccountList} onSelectOption={(val) => {\n                                  if(val === \"My Account\") {\n                                      this.props.history.push(\"/account\")\n                                  } else {\n                                      this.props.history.push(\"/logout\")\n                                  }\n                    }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst userAccountList = [{\n    value: \"My Account\"\n}, {\n    value: \"Logout\"\n}]","export const Pages = {\n    DASHBOARD: \"/dashboard\",\n    BRANCHES: \"/branches\",\n    ACCOUNT: \"/account\",\n    USERS: \"/users\",\n    ACTIVITIES: \"/activities\",\n    BRANCH_CUSTOMERS: \"/branch/:branchId/customers\",\n    BRANCH_CUSTOMER_BYID: \"/branch/:branchId/customer/:id\",\n    BRANCH_ITEMS: \"/branch/:branchId/items\",\n    BRANCH_PRODUCT_BYID: \"/branch/:branchId/product/:id\",\n    BRANCH_SERVICE_BYID: \"/branch/:branchId/service/:id\",\n    BRANCH_INVOICES: \"/branch/:branchId/invoices\",\n    BRANCH_INVOICE_BYID: \"/branch/:branchId/invoice/:id/\",\n    BRANCH_INVOICE_ADD: \"/branch/:branchId/new-invoice\",\n    BRANCH_SETTINGS: \"/branch/:branchId/settings\",\n    BRANCH_NEW_INVOICE: \"/branch/:branchId/new-invoice\"\n}\n\nconst pages = {\n    [Pages.DASHBOARD]: {\n        name: \"Dashboard\",\n        path: Pages.DASHBOARD\n    },\n    [Pages.BRANCHES]: {\n        name: \"Branches\",\n        path: Pages.BRANCHES\n    },\n    [Pages.ACCOUNT]: {\n        name: \"Account\",\n        path: Pages.ACCOUNT\n    },\n    [Pages.USERS]: {\n        name: \"Users\",\n        path: Pages.USERS\n    },\n    [Pages.ACTIVITIES]: {\n        name: \"Activities\",\n        path: Pages.ACTIVITIES\n    },\n    [Pages.BRANCH_CUSTOMERS]: {\n        name: \"Customers\",\n        path: Pages.BRANCH_CUSTOMERS\n    },\n    [Pages.BRANCH_ITEMS]: {\n        name: \"Items\",\n        path: Pages.BRANCH_ITEMS\n    },\n    [Pages.BRANCH_INVOICES]: {\n        name: \"Invoices\",\n        path: Pages.BRANCH_INVOICES\n    },\n    [Pages.BRANCH_SETTINGS]: {\n        name: \"Settings\",\n        path: Pages.BRANCH_SETTINGS\n    },\n    [Pages.BRANCH_NEW_INVOICE]: {\n        name: \"New Invoice\",\n        path: Pages.BRANCH_NEW_INVOICE\n    },\n    [Pages.BRANCH_PRODUCT_BYID]: {\n        name: \"Product\",\n        path: Pages.BRANCH_PRODUCT_BYID\n    },\n    [Pages.BRANCH_SERVICE_BYID]: {\n        name: \"Service\",\n        path: Pages.BRANCH_SERVICE_BYID\n    },\n}\n\nexport const getPage = (byLocation) => {\n    if (byLocation.includes(\"/customer\")) {\n        return pages[Pages.BRANCH_CUSTOMERS]\n    } else if (byLocation.includes(\"/items\")) {\n        return pages[Pages.BRANCH_ITEMS]\n    } else if (byLocation.includes(\"/product\")) {\n        return pages[Pages.BRANCH_PRODUCT_BYID]\n    } else if (byLocation.includes(\"/service\")) {\n        return pages[Pages.BRANCH_SERVICE_BYID]\n    } else if (byLocation.includes(\"/invoice\")) {\n        return pages[Pages.BRANCH_INVOICES]\n    } else if (byLocation.includes(\"/new-invoice\")) {\n        return pages[Pages.BRANCH_NEW_INVOICE]\n    } else if (byLocation.includes(\"/settings\")) {\n        return pages[Pages.BRANCH_SETTINGS]\n    }\n    return pages[byLocation.toLowerCase()] ? pages[byLocation.toLowerCase()] : {name: \"\"}\n};\n\nexport default pages","import React, {Component} from \"react\";\nimport \"./style.css\";\nimport PageHeader from \"./PageHeader\";\nimport {getPage} from \"../../../screens/Pages\";\n\nexport default class extends Component {\n    render() {\n        const {pageLocation} = this.props;\n        return (\n            <div className=\"app-page\">\n                <PageHeader history={this.props.history} pageName={getPage(pageLocation.pathname).name}/>\n                <div className=\"page-content\">\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {IoIosMenu, IoMdClose, IoIosAdd, IoMdLogOut} from \"react-icons/io\";\n\nimport './style.css';\nimport Modal from \"../Modal\";\nimport AppPage from \"./AppPage\";\n\nclass VerticalLayout extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const leftMenuWidth = 100;\n        this.state = {\n            leftMenuWidth: leftMenuWidth,\n            pageWidth: window.innerWidth,\n            pageHeight: window.innerHeight - 52,\n            onSelectBranch: {},\n            showLeftMenu: false,\n        };\n\n        this.handleWindowResize = this.handleWindowResize.bind(this);\n    }\n\n    handleWindowResize() {\n        this.setState({\n            pageWidth: window.innerWidth,\n            pageHeight: window.innerHeight - 52\n        });\n    }\n\n    componentWillMount() {\n        window.addEventListener(\"resize\", this.handleWindowResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.handleWindowResize);\n    }\n\n    render() {\n        const {props} = this;\n        console.log(props)\n        return (\n            <div className=\"app-view\">\n                <div className=\"app-menu\">\n                    <div className=\"app-name-container\">\n                        <div className=\"app-header-menu-icon\"\n                             onClick={() => this.setState({showLeftMenu: !this.state.showLeftMenu})}>\n                            {!this.state.showLeftMenu && <IoIosMenu size=\"32px\" color=\"white\"/>}\n                            {this.state.showLeftMenu && <IoMdClose size=\"32px\" color=\"white\"/>}\n                        </div>\n                        <div className=\"app-header-icon\" onClick={() => this.props.history.push(\"/dashboard\")}>\n                            {/*<img src={require('./icon.png')}/>*/}\n                        </div>\n                        <div className=\"app-header-name\" onClick={() => this.props.history.push(\"/dashboard\")}>\n                            {props.pageHeader.appName}\n                        </div>\n                    </div>\n                    <div\n                        className=\"app-left-menu-items view-active\"\n                        style={{display: (this.state.pageWidth > 800) ? 'block' : 'none'}}>\n                        <div className={props.pageHeader.isBranch ? \"app-left-menu-group\" : \"\"}>\n                            {props.pageHeader.leftMenu.map((menu, key) => {\n                                return (\n                                    <div\n                                        key={key}\n                                        className={`app-left-menu-list ${this.props.location.pathname.includes(menu.link) && \"app-left-menu-list-active\"}`}\n                                    >\n                                        <div className=\"app-left-menu-name\"\n                                             onClick={() => {\n                                                 this.setState({showLeftMenu: false})\n                                                 this.props.history.push(menu.link);\n                                             }}>\n                                            {menu.name}\n                                        </div>\n                                        {(menu.addLink || menu.addFunc) &&\n                                        <div className=\"app-left-menu-add-icon\"\n                                             onClick={() => {\n                                                 if (menu.addFunc) {\n                                                     menu.addFunc();\n                                                 } else if (menu.addLink) {\n                                                     this.props.history.push(menu.addLink)\n                                                 }\n                                             }}>\n                                            <IoIosAdd size=\"24px\"\n                                                      color={this.props.location.pathname.includes(menu.link) ? \"white\" : \"black\"}/>\n                                        </div>}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    {(this.state.pageWidth < 800) &&\n                    <Modal\n                        open={this.state.showLeftMenu}\n                        onClose={() => this.setState({showLeftMenu: false})}\n                        center={false}\n                        showCloseIcon={true}\n                        size=\"mini\"\n                        content={\n                            <div className=\"ModalIndex\">\n                                <div style={{padding: 10, marginTop: 50}}>\n                                    {props.pageHeader.leftMenu.map((menu, key) => {\n                                        return (\n                                            <div\n                                                key={key}\n                                                className={`app-left-menu-list ${this.props.location.pathname.includes(menu.link) && \"app-left-menu-list-active\"}`}\n                                                onClick={() => {\n                                                    this.setState({showLeftMenu: false})\n                                                    this.props.history.push(menu.link);\n                                                }}\n                                            >\n                                                <div className=\"app-left-menu-name\">\n                                                    {menu.name}\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                    <div className=\"app-actions\">\n                                        {props.pageHeader.actions && props.pageHeader.actions.map((actionItem, key) => {\n                                            return (\n                                                <div\n                                                    key={key}\n                                                    className={`app-action ${this.props.location.pathname.includes(actionItem.link) && \"app-action-active\"}`}\n                                                    onClick={() => {\n                                                        this.setState({showLeftMenu: false});\n                                                        this.props.history.push(actionItem.link);\n                                                    }}\n                                                >\n                                                    {actionItem.icon}\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                    />\n                    }\n                </div>\n                <AppPage history={this.props.history} pageLocation={this.props.history.location}>\n                    {props.children}\n                </AppPage>\n            </div>\n        );\n    }\n}\n\nexport default VerticalLayout;","import React, {Component} from 'react';\n\nimport './style.css';\n\nclass Tabs extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tabActive: 1\n        };\n\n        this._getMenuItems = this._getMenuItems.bind(this);\n        this._getSelectedPanel = this._getSelectedPanel.bind(this);\n\n    }\n\n    setActive(index, e) {\n        e.preventDefault();\n        this.setState({tabActive: index});\n        if (this.props.onTabClick) {\n            this.props.onTabClick(index);\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.activeTab) {\n            this.setState({tabActive: this.props.activeTab});\n        }\n    }\n\n    _getMenuItems() {\n        let {type} = this.props;\n        if (!type) {\n            type = \"type1\"\n        }\n        return (\n            <div className={`tabs-menu-${type}`} style={{display: 'flex'}}>\n                {\n                    this.props.panes.map((panel, index) => {\n                        return (\n                            <div key={index}\n                                 className={(this.state.tabActive - 1) === index ? \"tabs-menu-item-active\" : \"tabs-menu-item\"}\n                                 onClick={(e) => {\n                                     this.setActive(index + 1, e)\n                                 }}>\n                                {/*{panel.menuButton &&*/}\n                                {/*<div className={(this.state.tabActive - 1) === index ? \"tabs-menu-item-active tabs-icon\" : \"tabs-menu-item\"}*/}\n                                {/*    onClick={() => this.props.menuButtonClick()}>*/}\n                                {/*    {panel.menuButton}*/}\n                                {/*</div>*/}\n                                {/*}*/}\n                                <div>\n                                    {panel.menuItem}\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        );\n    }\n\n    _getSelectedPanel() {\n        var index = this.state.tabActive - 1;\n        var panel = this.props.panes[index];\n        let {type} = this.props;\n        if (!type) {\n            type = \"type1\"\n        }\n        return (\n            <div className={`tab-panel-${type}`}>\n                {panel.render}\n            </div>\n        );\n    }\n\n    render() {\n        //var className = classNames('tabs', this.props.className);\n        return (\n            <div className={'tabs-main'}>\n                {this._getMenuItems()}\n                {this._getSelectedPanel()}\n            </div>\n        );\n    }\n}\n\nexport default Tabs;","import React, {Component} from \"react\";\nimport \"./style.css\";\nimport {FormSearch} from 'grommet-icons';\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        let styles = {};\n        let styles2 = {};\n        if (this.props.style) {\n            styles = this.props.style;\n            styles2 = {width: \"90%\"};\n        }\n        return (\n            <div>\n                <div className=\"search-bar-input-div\" style={{...styles}}>\n                    <div className=\"search-bar-split search-bar-icon\">\n                        <FormSearch/>\n                    </div>\n                    <div className=\"search-bar-split\" style={{...styles2}}>\n                        <input className=\"search-bar-input\" placeholder={this.props.placeholder} onChange={this.props.onChange}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default SearchBar;","import React, {Component} from \"react\";\nimport \"./style.css\";\n\nclass Button extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        const {name, onClick, color, width, disabled, style, icon} = this.props;\n        if (icon) {\n            return icon;\n        }\n        return (\n            <button className=\"button-main\" disabled={disabled} style={{width, color, ...style}}\n                    onClick={() => onClick()}>{name.toUpperCase()}</button>\n        );\n    }\n}\n\n\nexport default Button;","import {getLocalStorage} from './';\nimport {host} from './bec';\n\nasync function bec({type = 'GET', uri: _uri, fullUrl = '', obj = {}, headers: _headers = {}}, seperate, resp) {\n    let method = type;\n    let uri = fullUrl ? fullUrl : `${host}/api/${_uri}`;\n    let headers = _headers;\n    let body = obj.toJS ? obj.toJS() : obj;\n\n    if (method === 'del') method = 'DELETE';\n\n    switch (method.toLowerCase()) {\n        case 'head':\n        case 'get':\n            body = undefined;\n            break;\n\n        case 'post':\n        case 'put':\n        case 'patch':\n        case 'delete':\n            body = JSON.stringify(body);\n            break;\n        default:\n            break;\n    }\n\n    method = method.toUpperCase();\n    headers = {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + getLocalStorage('t'),\n        // 'Active-Branch': getLocalStorage('activeBranch'),\n        ...headers,\n    };\n\n\n    const res = await fetch(uri, {\n        method,\n        headers,\n        body,\n    });\n\n    const resBody = await res.json()\n        .catch(() => res.text())\n        .catch(() => null);\n\n    if (!res.ok || res.status === 500) {\n        const error = new Error(resBody.data ? resBody.data : \"API Error happened\");\n        error.res = res;\n        error.body = resBody;\n        if (resBody.data === \"Invalid token\") {\n            window.location.href = '/';\n        } else if (resBody.data === \"jwt expired\") {\n            window.location.href = '/';\n        }\n        throw error;\n    }\n\n    if (resBody && resBody.status === 'error' && !seperate) {\n        const error = new Error(resBody.data);\n        error.res = res;\n        error.body = resBody;\n        if (resBody.data === \"Invalid token\") {\n            window.location.href = '/';\n        } else if (resBody.data === \"jwt expired\") {\n            window.location.href = '/';\n        }\n        throw error;\n    }\n\n    return {res, body: resBody.response};\n}\n\nexport default bec;","import React, {Component} from \"react\";\nimport \"./style.css\";\n\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\n\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\n\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n\nclass Input extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        const {name, value, onValChange, type, maxLength, minLength, options, disabled, required, isMulti, loadOptions} = this.props;\n\n        let params = {};\n        if (type && type === \"mobile_number\") {\n            params.pattern = \"\\d*\";\n            params.maxLength = \"10\";\n        } if (type && type === \"user_id\") {\n            params.pattern = \"[0-9.]+\";\n            params.maxLength = \"4\";\n        } else if (type && type === \"number\") {\n            // params.pattern = \"[0-9.]+\";\n            if (maxLength) {\n                params.maxLength = maxLength;\n            }\n        }\n\n        if (type && type === \"textarea\") {\n            return (\n                <div className=\"input-main\">\n                    <div className=\"input-label\">\n                        {name}\n                    </div>\n                    <div className=\"input-content\">\n                        <textarea className=\"input-content-textarea\" disabled={disabled}\n                                  value={value ? value : \"\"} onChange={(e) => onValChange(e.target)} {...params}/>\n                    </div>\n                </div>\n            );\n        } else if (type && type === \"select\") {\n            const isNotValue = (required && (!value || (!isMulti && !value.value) || (isMulti && value.length === 0)));\n            return (\n                <div className=\"input-main\">\n                    <div className=\"input-label\">\n                        {name}\n                    </div>\n                    <div\n                        className={isNotValue ? \"input-content-error\" : \"input-content\"}>\n                        <div\n                            className={isNotValue ? \"input-content-box input-content-box-error\" : \"input-content-box\"}>\n                            <Select\n                                closeMenuOnSelect={true}\n                                isMulti={isMulti}\n                                disabled={disabled}\n                                value={value}\n                                onChange={(selectedOption) => onValChange(selectedOption)}\n                                options={options}\n                                styles={{backgroundColor: (required && !value) ? \"red\" : \"blue\"}}\n                                getOptionLabel={option => option.text ? option.text : option.value}\n                                getOptionValue={option => option.value}\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        } else if (type && type === \"asyncSelect\") {\n            return (\n                <div className=\"input-main\">\n                    <div className=\"input-label\">\n                        {name}\n                    </div>\n                    <div\n                        className={(required && (!value || !value[0])) ? \"input-content-error\" : \"input-content\"}>\n                        <div\n                            className={(required && (!value || !value[0])) ? \"input-content-box input-content-box-multi input-content-box-error\" : \"input-content-box input-content-box-multi\"}>\n                            <AsyncSelect\n                                closeMenuOnSelect={false}\n                                isMulti={isMulti}\n                                cacheOptions\n                                defaultOptions\n                                loadOptions={loadOptions}\n                                disabled={disabled}\n                                value={value}\n                                onChange={(selectedOption) => onValChange(selectedOption)}\n                                options={options}\n                                styles={{backgroundColor: (required && !value) ? \"red\" : \"blue\"}}\n                                getOptionLabel={option => option.text ? option.text : option.value}\n                                getOptionValue={option => option.value}\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        let isInputVal = true;\n        switch (type) {\n            case \"number\":\n                isInputVal = !value || !value.toString();\n                break;\n            case \"mobile_number\":\n                isInputVal = !value || !value.toString() || value.toString().length !== Number(params.maxLength);\n                break;\n\n            case \"password\":\n                isInputVal = !value || !value.toString() || value.toString().length < Number(minLength);\n                break;\n\n            default:\n                isInputVal = !value;\n        }\n\n        return (\n            <div className=\"input-main\">\n                <div className=\"input-label\">\n                    {name}\n                </div>\n                <div\n                    className={(required && isInputVal) ? \"input-content-error\" : \"input-content\"}>\n                    <input\n                        disabled={disabled}\n                        className={(required && isInputVal) ? \"input-content-box input-content-box-error\" : \"input-content-box\"}\n                        value={value} type={type === \"number\" ? \"number\" : type}\n                        onChange={(e) => {\n                            if (type === \"number\" || type === \"mobile_number\") {\n                                const re = /^[0-9]+$/;\n                                if ((name.toLowerCase() === \"age\" && new RegExp(re).test(e.target.value))) {\n                                    onValChange(e.target)\n                                } else if (e.target.value && typeof Number(e.target.value) === \"number\") {\n                                    onValChange(e.target)\n                                }\n                            } else {\n                                onValChange(e.target)\n                            }\n                        }} {...params}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Input;","import React, {Component} from \"react\";\nimport Checkbox from \"react-simple-checkbox\";\n\nimport \"./style.css\";\nimport Dropdown from \"../DropDown\";\nimport Modal from '../Modal';\nimport Button from \"../Button\";\nimport api from \"../../utils/api\";\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\nimport {FcBusinessman, FcBusinesswoman} from \"react-icons/fc\";\nimport Input from \"../Input\";\n\nexport const options = [\n    {value: 'male', label: 'Male'},\n    {value: 'female', label: 'Female'}\n];\n\nconst roleOptions = [\n    {key: 'employee', text: 'Employee', value: 'employee'},\n    {key: 'admin', text: 'Admin', value: 'admin'},\n];\n\nclass UserLi extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDetailModal: false,\n            showEditModal: false,\n            editCustomerData: {},\n            editLoading: false,\n            showDeleteModal: false,\n            deleteCustomerData: {},\n            editUserModal: false,\n            editUserData: {},\n            editUserPasswordModal: false,\n            editUserPasswordData: {},\n            isSuccessIndicator: false,\n            message: {\n                type: \"\",\n                text: \"\"\n            },\n        };\n\n        this.isAllInputOkay = this.isAllInputOkay.bind(this);\n        this.onSubmitEditUser = this.onSubmitEditUser.bind(this);\n        this.onSubmitDeleteUser = this.onSubmitDeleteUser.bind(this);\n    }\n\n    async onSubmitEditUser(user) {\n        this.setState({editLoading: true});\n        let obj = {};\n        let uri = \"user/employee/\"\n        if (user.newPassword) {\n            obj = {\n                'new-password': user.newPassword,\n                'repeat-password': user.repeatPassword\n            }\n            uri = uri + \"password/\" + this.props.user._id\n        } else {\n            obj = {\n                'full-name': user.full_name,\n                email: user.email,\n                gender: user.gender.value,\n                address: user.address,\n                age: user.age,\n                mobileNo: user.mobile_number.toString(),\n                role: user.role.value,\n            }\n            uri = uri + user._id\n        }\n        try {\n            const {body} = await api({type: \"PUT\", uri, obj});\n            if (!body || body.status === 'error') {\n                if (body.data) {\n                    this.props.addNotification({message: body.data, level: \"error\"});\n                }\n            } else {\n                this.props.getAllEmployees();\n                if (body.message) {\n                    this.props.addNotification({message: body.message, level: \"success\"});\n                }\n            }\n        } catch (e) {\n            this.props.addNotification({message: e.toString(), level: \"error\"});\n        }\n        this.setState({editLoading: false});\n    }\n\n    async onSubmitDeleteUser(user) {\n        this.setState({editLoading: true});\n        try {\n            const {body} = await api({type: \"DELETE\", uri: \"user/employee/\" + user._id});\n            this.setState({\n                editLoading: false,\n                isSuccessIndicator: true,\n                message: {type: \"success\", text: body.message}\n            });\n\n            this.props.getAllEmployees();\n            this.setState({showDeleteModal: false, editLoading: false});\n        } catch (e) {\n            this.setState({editLoading: false, showDeleteModal: false,});\n        }\n    }\n\n    isAllInputOkay() {\n        const {editUserData} = this.state;\n        return !editUserData.full_name || !editUserData.mobile_number || !editUserData.gender || !editUserData.age\n    }\n\n    render() {\n        const {user, type, onClickAction} = this.props;\n        const {myUserAccess} = this.props.appModuleData.toJS();\n\n        const customerOptions = [];\n\n        if (!user.deleted) {\n            switch (type) {\n                case \"branch\":\n                    customerOptions.push(\n                        {\n                            icon: \"view-detail\",\n                            value: \"view-detail\"\n                        }, {\n                            icon: \"edit permission\",\n                            value: \"edit permission\"\n                        }, {\n                            icon: \"remove from branch\",\n                            value: \"remove from branch\"\n                        }\n                    );\n                    break;\n                default:\n                    customerOptions.push(\n                        {\n                            icon: \"view-detail\",\n                            value: \"view-detail\"\n                        }, {\n                            icon: \"edit\",\n                            value: \"edit\"\n                        }, {\n                            icon: \"delete\",\n                            value: \"delete\"\n                        }\n                    );\n                    if (myUserAccess.emp_id !== user._id) {\n                        customerOptions.push({\n                            icon: \"reset password\",\n                            value: \"reset password\"\n                        });\n                    }\n                    break;\n            }\n        }\n\n        return (\n            <div className=\"grid-customer-container\">\n                <div className=\"grid-customer-detail-container\" onClick={() => this.setState({showDetailModal: true})}>\n                    <div className=\"grid-icon\">\n                        {(user.gender === \"male\" ?\n                            <FcBusinessman className=\"list-user-icon\" size=\"32px\" color=\"black\"/> :\n                            <FcBusinesswoman className=\"list-user-icon\" size=\"32px\" color=\"black\"/>)}\n                    </div>\n                    <div className=\"list-name\">\n                        {user.full_name}\n                        <div>\n                            {user._id &&\n                            <div className=\"list-split list-label\">\n                                {user._id}\n                            </div>}\n                            {user.added_date_time && <div className=\"list-split list-label\">\n                                {getDesiredDateTimeNow(user.added_date_time)}\n                            </div>}\n                            {user.deleted &&\n                            <div className=\"list-split list-deleted\">\n                                Deleted\n                            </div>}\n                        </div>\n                    </div>\n                    <div className=\"customer-list-address\">\n                        {user.mobile_number &&\n                        <div>\n                            <img style={{width: 15}} src=\"https://img.icons8.com/carbon-copy/100/000000/phone.png\"/>\n                            <div>\n                                {user.mobile_number}\n                            </div>\n                        </div>}\n                    </div>\n                </div>\n                <div className=\"grid-end\">\n                    <Dropdown\n                        list={customerOptions}\n                        onSelectOption={(val) => {\n                            if (val === \"view-detail\") {\n                                this.setState({showDetailModal: true});\n                            } else if (val === \"delete\") {\n                                this.setState({showDeleteModal: true});\n                            } else if (val === \"edit\") {\n                                this.setState({\n                                    editUserModal: true,\n                                    editUserData: {\n                                        ...user,\n                                        gender: options.filter((ge) => ge.value === user.gender)[0],\n                                        role: roleOptions.filter((ge) => ge.value === user.role)[0],\n                                    }\n                                });\n                            } else if (val === \"reset password\") {\n                                this.setState({editUserPasswordModal: true});\n                            } else {\n                                if (!!onClickAction) onClickAction(val, user);\n                            }\n                        }}\n                    />\n                </div>\n\n                <Modal\n                    open={this.state.showDetailModal}\n                    center={false}\n                    onClose={() => this.setState({showDetailModal: false})}\n                    showCloseIcon={false}\n                    size=\"big\"\n                    header={\n                        <div>\n                            Employee Detail - {user.full_name}\n                        </div>\n                    }\n                    content={\n                        <div style={{padding: 10}}>\n                            <div className=\"Detail-View\">\n                                <div className=\"Detail-View-Main-Content\">\n                                    <div className=\"Detail-View-Main-Content-Column1\">\n                                        <div className=\"Detail-View-Main-Content-Name\">\n                                            {user.full_name}\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-Id\">\n                                            <img className=\"image\"\n                                                 src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\n                                            {user._id}\n                                        </div>\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-Column2\">\n                                        <div className=\"container\">\n                                            <div className=\"information\">User Information:</div>\n                                            <div className=\"stat no-border\">\n                                                <div className=\"Detail-View-Main-Content-split\">\n                                                    <div className=\"information-heading\">Created On</div>\n                                                    <div className=\"information-val\">\n                                                        {getDesiredDateTimeNow(user.added_date_time)}\n                                                    </div>\n                                                </div>\n                                                <div className=\"Detail-View-Main-Content-split\">\n                                                    <div className=\"information-heading\">Mobile Number</div>\n                                                    <div className=\"information-val\">{user.mobile_number}</div>\n                                                </div>\n                                                {user.added_by &&\n                                                <div className=\"Detail-View-Main-Content-split\">\n                                                    <div className=\"information-heading\">Created by</div>\n                                                    <div\n                                                        className=\"information-val\">{user.added_by}\n                                                    </div>\n                                                </div>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {type === \"branch\" &&\n                            <div className=\"employee-permission\">\n                                <div className=\"employee-permission-header-name\"> User Permissions</div>\n                                <div className=\"employee-permission-box\">\n                                    {user.perm &&\n                                    <table className=\"content-header-table\">\n                                        <tbody>\n                                        <tr>\n                                            <td className=\"content-header-name\">Invoice</td>\n                                            <td className=\"content-header-name\">Customer</td>\n                                            <td className=\"content-header-name\">Items</td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"content-header-name\">\n                                                <Checkbox disabled checked={user.perm.bill.add}/> Add\n                                                <br/>\n                                                <Checkbox disabled checked={user.perm.bill.view}/> View\n                                                <br/>\n                                                <Checkbox disabled checked={user.perm.bill.edit}/> Edit\n                                                <br/>\n                                                <Checkbox disabled checked={user.perm.bill.delete}/> Delete\n                                                <br/>\n                                            </td>\n                                            <td className=\"content-header-name\">\n                                                <Checkbox disabled checked={user.perm.customer.add}/> Add <br/>\n                                                <Checkbox disabled checked={user.perm.customer.view}/> View <br/>\n                                                <Checkbox disabled checked={user.perm.customer.edit}/> Edit <br/>\n                                                <Checkbox disabled\n                                                          checked={user.perm.customer.delete}/> Delete <br/>\n                                            </td>\n                                            <td className=\"content-header-name\">\n                                                <Checkbox disabled checked={user.perm.items.add}/> Add <br/>\n                                                <Checkbox disabled checked={user.perm.items.view}/> View <br/>\n                                                <Checkbox disabled checked={user.perm.items.edit}/> Edit <br/>\n                                                <Checkbox disabled\n                                                          checked={user.perm.items.delete}/> Delete <br/>\n                                            </td>\n                                        </tr>\n                                        </tbody>\n                                    </table>}\n                                </div>\n                            </div>\n                            }\n                        </div>\n                    }\n                    footer={\n                        <div>\n                            <Button name=\"Close\" onClick={() => this.setState({showDetailModal: false})}/>\n                        </div>\n                    }\n\n                />\n\n                {\n                    this.state.editUserModal &&\n                    <Modal\n                        open={true}\n                        center={false}\n                        onClose={() => this.setState({editUserModal: false, editUserData: {}})}\n                        showCloseIcon={false}\n                        size=\"big\"\n                        header={\n                            <div>\n                                Edit User: <span className=\"Modal-Header-name\">{user.full_name}</span>\n                            </div>\n                        }\n                        content={\n                            <div>\n                                <Input name={\"Name\"}\n                                       value={this.state.editUserData.full_name}\n                                       required={true}\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editUserData: {\n                                                   ...this.state.editUserData,\n                                                   full_name: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Mobile Number\"}\n                                       value={this.state.editUserData.mobile_number}\n                                       type=\"mobile_number\"\n                                       maxLength=\"10\"\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editUserData: {\n                                                   ...this.state.editUserData,\n                                                   mobile_number: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Address\"}\n                                       value={this.state.editUserData.address}\n                                       type=\"textarea\"\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editUserData: {\n                                                   ...this.state.editUserData,\n                                                   address: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Email\"}\n                                       value={this.state.editUserData.email}\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editUserData: {\n                                                   ...this.state.editUserData,\n                                                   email: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Gender\"}\n                                       value={this.state.editUserData.gender}\n                                       type=\"select\"\n                                       required={true}\n                                       options={options}\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editUserData: {\n                                                   ...this.state.editUserData,\n                                                   gender: data\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Age\"}\n                                       value={this.state.editUserData.age}\n                                       type=\"number\"\n                                       maxLength=\"2\"\n                                       required={true}\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editUserData: {\n                                                   ...this.state.editUserData,\n                                                   age: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Role\"}\n                                       value={this.state.editUserData.role}\n                                       type=\"select\"\n                                       required={true}\n                                       options={roleOptions}\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editUserData: {\n                                                   ...this.state.editUserData,\n                                                   role: data\n                                               }\n                                           })\n                                       }}\n                                />\n\n                            </div>\n                        }\n                        footer={\n                            <div>\n                                <Button name=\"Submit\"\n                                        disabled={this.isAllInputOkay()}\n                                        onClick={async () => {\n                                            await this.onSubmitEditUser(this.state.editUserData);\n                                            this.setState({editUserModal: false, editUserData: {}})\n                                        }}/>\n                                <Button name=\"Close\" onClick={() => {\n                                    this.setState({editUserModal: false, editUserData: {}})\n                                }}/>\n                            </div>\n                        }\n                    />\n                }\n\n                {\n                    this.state.editUserPasswordModal &&\n                    <Modal\n                        open={true}\n                        center={false}\n                        onClose={() => this.setState({editUserPasswordModal: false, editUserPasswordData: {}})}\n                        showCloseIcon={false}\n                        size=\"big\"\n                        header={\n                            <div>\n                                Edit User Password: <span className=\"Modal-Header-name\">{user.full_name}</span>\n                            </div>\n                        }\n                        content={\n                            <div>\n                                <Input name={\"New Password\"}\n                                       value={this.state.editUserPasswordData.newPassword}\n                                       required={true}\n                                       type=\"password\"\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editUserPasswordData: {\n                                                   ...this.state.editUserPasswordData,\n                                                   newPassword: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Repeat Password\"}\n                                       value={this.state.editUserPasswordData.repeatPassword}\n                                       required={true}\n                                       type=\"password\"\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editUserPasswordData: {\n                                                   ...this.state.editUserPasswordData,\n                                                   repeatPassword: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n                            </div>\n                        }\n                        footer={\n                            <div>\n                                <Button name=\"Submit\"\n                                        disabled={!this.state.editUserPasswordData.newPassword || !this.state.editUserPasswordData.repeatPassword ||\n                                        (this.state.editUserPasswordData.newPassword !== this.state.editUserPasswordData.repeatPassword)}\n                                        onClick={async () => {\n                                            await this.onSubmitEditUser(this.state.editUserPasswordData);\n                                            this.setState({editUserPasswordModal: false, editUserPasswordData: {}})\n                                        }}/>\n                                <Button name=\"Close\" onClick={() => {\n                                    this.setState({editUserPasswordModal: false, editUserPasswordData: {}})\n                                }}/>\n                            </div>\n                        }\n                    />\n                }\n\n                <Modal\n                    open={this.state.showDeleteModal}\n                    center={false}\n                    onClose={() => this.setState({showDeleteModal: false})}\n                    showCloseIcon={false}\n                    size=\"mini\"\n                    header={\n                        <div>\n                            DELETE USER:<span>{user.full_name}</span>\n                        </div>\n                    }\n                    content={\n                        <div style={{padding: 10}}>\n                            User will be shown in the inventory as deleted.\n                            You cannot revert the deletion at any point.\n                        </div>\n                    }\n                    footer={\n                        <div>\n                            <Button name=\"Delete\"\n                                    onClick={async () => {\n                                        await this.onSubmitDeleteUser(user);\n                                    }}/>\n                            <Button name=\"Close\" onClick={() => this.setState({showDeleteModal: false})}/>\n                        </div>\n                    }\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default UserLi;","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nimport {appModuleActions as actions, CUSTOMER_ADD_MODAL, EMPLOYEE_ADD_MODAL} from \"../../AppModule\";\nimport bec from \"../../utils/bec\";\nimport SearchBar from \"../../components/SearchBar\";\nimport Tabs from \"../../components/Tabs\";\nimport UserLi from \"../../components/ListView/UserLi\";\n\nimport \"./style.css\";\nimport Button from \"../../components/Button\";\nimport {IoMdAdd} from \"react-icons/io\";\n\nclass Employees extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteModal: {},\n            filterField: '',\n            deleteEmployeeLoading: false,\n        };\n\n        this.deleteEmployee = this.deleteEmployee.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n    }\n\n    componentWillMount() {\n        this.props.getAllEmployees();\n    }\n\n    onChangeState(data) {\n        this.setState({...data});\n    }\n\n    deleteEmployee(empData) {\n        const {onChangeState} = this;\n        const {history, getAllEmployees, addNotification} = this.props;\n        onChangeState({deleteEmployeeLoading: true});\n        bec({\n            type: 'DELETE',\n            uri: '/user/employee/' + empData._id\n        }, true, (error, {body}) => {\n            if (!body || body.status === 'error') {\n                addNotification({\n                    message: body.data,\n                    level: \"error\"\n                });\n            } else {\n                onChangeState({deleteEmployeeLoading: false});\n                getAllEmployees();\n                if (body.response.message) {\n                    addNotification({\n                        message: body.response.message,\n                        level: \"success\"\n                    });\n                }\n            }\n        });\n    }\n\n    render() {\n\n        const {loading, allEmployeesData, myUserAccess} = this.props.appModuleData.toJS();\n\n        const employeesData = allEmployeesData.employees;\n        const allAdminData = allEmployeesData.admins;\n\n        const panes = [\n            {\n                menuItem: 'Employees',\n                render:\n                    <div style={{overflow: \"hidden\", width: \"100%\", padding: 10}}>\n                        {employeesData.map((user, key) => {\n                            return (\n                                <UserLi key={key} user={user} {...this.props}/>\n                            )\n                        })}\n                    </div>\n            },\n            {\n                menuItem: 'Admins',\n                render:\n                    <div style={{overflow: \"hidden\", width: \"100%\", padding: 10}}>\n                        {allAdminData.map((user, key) => {\n                            return (\n                                <UserLi key={key} user={user} {...this.props}/>\n                            )\n                        })}\n                    </div>\n            },\n        ];\n\n        return (\n            <div>\n                {/*<div style={{display: \"flex\", borderBottom: \"1px solid #eaeaea\"}}>*/}\n                {/*    <IoMdAdd size=\"24px\" style={{margin: 10}} className=\"button-icon\" alt={\"Add Employee\"}*/}\n                {/*             onClick={() => this.props.modalToggle({*/}\n                {/*                 modal: EMPLOYEE_ADD_MODAL,*/}\n                {/*                 view: true*/}\n                {/*             })}/>*/}\n                {/*</div>*/}\n                <div className=\"actual-content\">\n                    <Tabs panes={panes} activeTab={this.state.activeTab} onTabClick={(i) => {\n                        this.setState({activeTab: i});\n                    }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Employees));","import React, {Component} from \"react\";\nimport \"./style.css\";\n\nimport Modal from 'react-modal';\n\nclass Loading extends Component {\n    render() {\n        const {loading, type, style} = this.props;\n        if (!loading) {\n            return null;\n        }\n\n        const Loader = (<div\n            className={`Loading-Modal-Content ${style === \"native\" ? \"circle-loader-native\" : \"circle-loader2\"} Loading-Modal-pane`}/>);\n\n        if (type && type === \"simple\") {\n            return Loader;\n        }\n        return (\n            <Modal\n                isOpen={loading}\n                onRequestClose={() => {\n                    // this.setState({showEditModal: false});\n                }}\n                className=\"Loading-Modal\"\n                overlayClassName=\"Loading-Overlay\"\n            >\n                {Loader}\n            </Modal>\n        );\n    }\n}\n\n\nexport default Loading;","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nimport {appModuleActions as actions, BRANCH_ADD_MODAL, CUSTOMER_ADD_MODAL, EMPLOYEE_ADD_MODAL} from \"../../AppModule\";\nimport bec from \"../../utils/bec\";\nimport Loading from \"../../components/Loading\";\nimport Modal from \"../../components/Modal\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport api from \"../../utils/api\";\n\nclass AddOrEditEmployees extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            _id: \"\",\n            gender: {},\n            mobileNo: '',\n            'full-name': '',\n            email: '',\n            address: '',\n            age: '',\n            role: {},\n            postCustomerLoading: false\n        };\n\n        // this.onChangePermission = this.onChangePermission.bind(this);\n        this.postEmployee = this.postEmployee.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.putEmployee = this.putEmployee.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.isAllInputOkay = this.isAllInputOkay.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            const empId = Number(this.props.match.params.id);\n            const empRole = this.props.match.params.role;\n            const {allEmployeesData} = this.props.appModuleData.toJS();\n\n            const emp = allEmployeesData[`${empRole}s`].filter((empl) => empl._id === empId);\n\n            if (emp.length > 0) {\n                this.setState({\n                    _id: emp[0]._id,\n                    gender: emp[0].gender,\n                    mobileNo: String(emp[0].mobile_number),\n                    'full-name': emp[0].full_name,\n                    email: emp[0].email,\n                    address: emp[0].address,\n                    role: emp[0].role,\n                    age: Number(emp[0].age),\n                    perm: emp[0].perm,\n                })\n            }\n        }\n    }\n\n    onChangeState(data) {\n        this.setState({...data});\n    }\n\n    async postEmployee() {\n        const {onChangeState} = this;\n        const {addNotification} = this.props;\n        onChangeState({postCustomerLoading: true});\n\n        const obj = {\n            gender: this.state.gender.key,\n            mobileNo: this.state.mobileNo,\n            'full-name': this.state['full-name'],\n            email: this.state.email,\n            address: this.state.address,\n            age: this.state.age,\n            role: this.state.role.key\n        }\n\n        try {\n            const {body} = await api({type: \"POST\", uri: \"user/employee\", obj});\n\n            if (!body || body.status === 'error') {\n                if (body.data) {\n                    addNotification({\n                        message: body.data,\n                        level: \"error\"\n                    });\n                }\n                this.closeModal()\n            } else {\n                this.closeModal();\n                this.props.getAllEmployees();\n                if (body.message) {\n                    addNotification({\n                        message: body.message,\n                        level: \"success\"\n                    });\n                }\n            }\n\n        } catch (e) {\n            addNotification({\n                message: e.toString(),\n                level: \"error\"\n            });\n            onChangeState({postCustomerLoading: false});\n        }\n    }\n\n    putEmployee() {\n        const {onChangeState} = this;\n        const {history, addNotification} = this.props;\n        onChangeState({postCustomerLoading: true});\n        bec({type: 'PUT', uri: 'user/employee/' + this.state._id, obj: {...this.state}}, true, (error, {body}) => {\n            if (!body || body.status === 'error') {\n                if (body.data) {\n                    addNotification({\n                        message: body.data,\n                        level: \"error\"\n                    });\n                }\n                onChangeState({postCustomerLoading: false});\n            } else {\n                onChangeState({postCustomerLoading: false});\n                history.push('/employees');\n                if (body.response.message) {\n                    addNotification({\n                        message: body.response.message,\n                        level: \"success\"\n                    });\n                }\n            }\n        });\n    }\n\n    closeModal() {\n        this.setState({\n            _id: \"\",\n            gender: 'female',\n            mobileNo: '',\n            'full-name': '',\n            email: '',\n            address: '',\n            age: '',\n            role: {},\n            postCustomerLoading: false\n        });\n        this.props.modalToggle({modal: EMPLOYEE_ADD_MODAL, view: false});\n    }\n\n    isAllInputOkay() {\n        return !this.state['full-name']\n            || !this.state.gender || !this.state.gender.key\n            || (this.state.age && !this.state.age.toString())\n            || (this.state.mobileNo && this.state.mobileNo.length !== 10)\n            || !this.state.email\n            || !this.state.role || !this.state.role.key\n    }\n\n    render() {\n        const genderOptions = [\n            {key: 'female', text: 'Female', value: 'female'},\n            {key: 'male', text: 'Male', value: 'male'},\n        ];\n\n        const roleOptions = [\n            {key: 'employee', text: 'Employee', value: 'employee'},\n            {key: 'admin', text: 'Admin', value: 'admin'},\n        ];\n\n        return (\n            <Modal\n                open={true}\n                center={false}\n                onClose={() => this.closeModal()}\n                showCloseIcon={false}\n                size=\"big\"\n                header={\n                    <div>\n                        ADD EMPLOYEE\n                    </div>\n                }\n                content={\n                    <div>\n                        <div>\n                            <Input name={\"Name\"}\n                                   value={this.state['full-name']}\n                                   required={true}\n                                   onValChange={(data) => this.setState({'full-name': data.value})}\n                            />\n                            <Input name={\"Mobile Number\"}\n                                   value={this.state['mobileNo']}\n                                   type=\"mobile_number\"\n                                   maxLength=\"10\"\n                                   required={true}\n                                   onValChange={(data) => this.setState({mobileNo: data.value})}\n                            />\n                            <Input name={\"Email\"}\n                                   value={this.state.email}\n                                   required={true}\n                                   onValChange={(data) => this.setState({email: data.value})}\n                            />\n                            <Input name={\"Gender\"}\n                                   value={this.state.gender}\n                                   type=\"select\"\n                                   required={true}\n                                   options={genderOptions}\n                                   onValChange={(gender) => this.setState({gender})}\n                            />\n                            <Input name={\"Address\"}\n                                   value={this.state.address}\n                                   required={false}\n                                   onValChange={(data) => this.setState({address: data.value})}\n                            />\n                            <Input name={\"Age\"}\n                                   value={this.state.age}\n                                   type=\"number\"\n                                   maxLength=\"2\"\n                                   required={true}\n                                   onValChange={(data) => this.setState({age: Number(data.value)})}\n                            />\n                            <Input name={\"Role\"}\n                                   value={this.state.role}\n                                   type=\"select\"\n                                   required={true}\n                                   options={roleOptions}\n                                   onValChange={(role) => this.setState({role})}\n                            />\n                        </div>\n                        <Loading loading={this.state.postCustomerLoading}/>\n                    </div>\n                }\n                footer={\n                    <div>\n                        <Button name=\"Submit\"\n                                disabled={this.isAllInputOkay()}\n                                onClick={async () => {\n                                    await this.postEmployee()\n                                }}/>\n                        <Button name=\"Close\" onClick={() => this.closeModal()}/>\n                    </div>\n                }\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddOrEditEmployees));","import React, {Component} from \"react\";\n\nimport \"./style.css\";\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\n\nclass ViewActivity extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.props.getAllActivities();\n    }\n\n    render() {\n        const {loading, allActivitiesData, myUserAccess} = this.props.appModuleData.toJS();\n\n        return (\n            <div className=\"actual-content\" style={{padding: 20}}>\n                <table structured id=\"activity_table\">\n                    <tr>\n                        <th>Date</th>\n                        <th>Added By</th>\n                        <th>Branch</th>\n                        <th>Description</th>\n                    </tr>\n\n                    <tbody>\n                    {allActivitiesData.map((activity, key) => {\n                        return (\n                            <tr key={key}>\n                                <td>{getDesiredDateTimeNow(activity.added_date_time)}</td>\n                                <td>{activity.added_by.full_name}</td>\n                                <td>{activity.branch && activity.branch.name ? activity.branch.name : \"Null\"}</td>\n                                <td>{activity.description}</td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ViewActivity));","import React, {Component} from \"react\";\nimport \"./style.css\";\nimport {CaretNext, CaretDown} from 'grommet-icons';\n\nclass SegmentExpandable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {show: false, expandAtStart: false};\n    }\n\n    componentDidMount() {\n        if (this.props.expandAtStart) {\n            this.setState({show: this.props.expandAtStart, expandAtStart: this.props.expandAtStart})\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if ((nextProps.expandAtStart !== this.state.expandAtStart)) {\n            this.setState({show: nextProps.expandAtStart, expandAtStart: nextProps.expandAtStart})\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"invoice-expandable\">\n                <span className=\"invoice-expandable-header\" onClick={() => this.setState({show: !this.state.show})}>\n                    {this.state.show ? <CaretDown size='small'/> :\n                        <CaretNext size='small'/>}\n                    <span style={{paddingLeft: 10}}>{this.props.header}</span>\n                </span>\n                <span>\n                    {this.props.action}\n                </span>\n                {this.props.detail && this.props.detail}\n                {this.state.show &&\n                <div className=\"invoice-expandable-content\">\n                    {this.props.children}\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\n\nexport default SegmentExpandable;","import React, {Component} from \"react\";\nimport './Dashboard.css';\n\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\nimport SegmentExpandable from \"../../components/SegmentExpandable\";\nimport {FiChevronsRight} from \"react-icons/fi\";\nimport AppPage from \"../../components/AppLayout/AppPage\";\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeStat: [0, 1]\n        }\n    }\n\n    componentWillMount() {\n        this.props.getStats();\n    }\n\n    render() {\n        const {allBranchData, stats, loading} = this.props.appModuleData.toJS();\n        return (\n            <div className=\"actual-content dashboard-branch\">\n                {allBranchData.filter(branch => !branch.deleted).map((branch, key) => {\n                    let statData = stats.filter((stat) => stat.branch === branch._id);\n                    if (statData.length === 0) {\n                        return null;\n                    }\n                    statData = statData[0];\n                    return (\n                        <div key={key} className=\"dashboard-segment\">\n                            <SegmentExpandable expandAtStart={this.state.activeStat.includes(key)}\n                                               header={branch.name}>\n                                <div className=\"dashboard-stat-grid\">\n                                    <div className=\"dashboard-stat-card\">\n                                        <div className=\"dashboard-stat-inner\">\n                                            <div className=\"dashboard-stat-heading\">Today's Invoice</div>\n                                            <div className=\"dashboard-stat-value\">{statData.invoice.added}</div>\n                                        </div>\n                                    </div>\n                                    <div className=\"dashboard-stat-card\">\n                                        <div className=\"dashboard-stat-inner\">\n                                            <div className=\"dashboard-stat-heading\">Total Billed in Rs.</div>\n                                            <div\n                                                className=\"dashboard-stat-value\">{statData.invoice.totalInvoiceAmount}</div>\n                                        </div>\n                                    </div>\n                                    <div className=\"dashboard-stat-card\">\n                                        <div className=\"dashboard-stat-inner\">\n                                            <div className=\"dashboard-stat-heading\">Total Paid in Rs.</div>\n                                            <div\n                                                className=\"dashboard-stat-value\">{statData.invoice.totalPaidAmount}</div>\n                                        </div>\n                                    </div>\n                                    <div className=\"dashboard-stat-card\">\n                                        <div className=\"dashboard-stat-inner\">\n                                            <div className=\"dashboard-stat-heading\">Un Paid in Rs</div>\n                                            <div\n                                                className=\"dashboard-stat-value\">{statData.invoice.totalUnPaidAmount}</div>\n                                        </div>\n                                    </div>\n                                    <div className=\"dashboard-stat-card dashboard-stat-clickable\"\n                                         onClick={() => this.props.history.push(`/branch/${branch._id}/customers`)}>\n                                        <div className=\"dashboard-stat-inner\">\n                                            <div className=\"dashboard-stat-heading\">Go To</div>\n                                            <div\n                                                className=\"dashboard-stat-value\">\n                                                <FiChevronsRight size=\"28px\"/>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </SegmentExpandable>\n                        </div>\n                    )\n                })}\n                {stats.length === 0 &&\n                <div style={{color: \"#8c8c8c\"}} align=\"center\">\n                    Nothing to show\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Dashboard));","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nimport {\n    appModuleActions as actions,\n    BRANCH_ADD_MODAL,\n    BRANCH_EDIT_MODAL,\n    CUSTOMER_ADD_MODAL,\n    EMPLOYEE_ADD_MODAL\n} from \"../../AppModule\";\nimport bec from \"../../utils/bec\";\nimport Loading from \"../../components/Loading\";\nimport Modal from \"../../components/Modal\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport api from \"../../utils/api\";\nimport Checkbox from \"react-simple-checkbox\";\n\nconst defaultPerm = {\n    bill: {\n        add: true,\n        edit: false,\n        delete: false,\n        view: true\n    },\n    customer: {\n        add: true,\n        edit: true,\n        delete: false,\n        view: true\n    },\n    items: {\n        add: false,\n        edit: false,\n        delete: false,\n        view: true\n    }\n};\n\nclass AddOrEditBranch extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            location: '',\n            employees: [],\n            mobile_number: '',\n            addBranchLoading: false,\n        };\n\n        this.checkOkayToAdd = this.checkOkayToAdd.bind(this);\n        this.onClickAddBranch = this.onClickAddBranch.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.onChangePermission = this.onChangePermission.bind(this);\n        this.renderEmployeesOptions = this.renderEmployeesOptions.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getAllEmployees();\n        const {myUserAccess} = this.props.appModuleData.toJS();\n        const {branchData, type} = this.props;\n\n        if (type === \"edit-branch\") {\n            let employees = [];\n            branchData.employees.filter((emp) => emp.employee_id._id !== myUserAccess.emp_id).forEach((emp) => {\n                employees.push({\n                    key: emp.employee_id._id,\n                    value: emp.employee_id._id,\n                    text: `${emp.employee_id['full_name']} (${emp.employee_id.role})`,\n                    perm: emp.perm\n                });\n            });\n            this.setState({\n                name: branchData.name,\n                location: branchData.location,\n                mobile_number: branchData.mobile_number,\n                employees\n            })\n        }\n    }\n\n    renderEmployeesOptions(employees) {\n        const {myUserAccess} = this.props.appModuleData.toJS();\n        const {branchData, type} = this.props;\n\n        let empsRet = [];\n        employees.filter((emp) => emp._id !== myUserAccess.emp_id).forEach((emp) => {\n            empsRet.push({\n                key: emp._id,\n                value: emp._id,\n                text: `${emp.deleted ? \"[Deleted] \" : \"\"}${emp['full_name']} (${emp.role})`,\n                perm: defaultPerm\n            });\n        });\n        return empsRet;\n    }\n\n    onChangePermission(emp, type, action, permFlag) {\n        let {employees} = this.state;\n        const updatedEmp = employees.map((empl) => {\n            if (empl.key === emp.key) {\n                empl.perm[type][action] = permFlag;\n                return empl;\n            }\n            return empl;\n        })\n        this.setState({employees: updatedEmp});\n    }\n\n    onChangeState(data) {\n        this.setState({...data});\n    }\n\n    checkOkayToAdd() {\n        const {state} = this;\n        return !state.name || !state.location || !state.employees || (state.employees.length === 0) || !state.mobile_number\n    }\n\n    async onClickAddBranch() {\n        const {onChangeState} = this;\n        const {myUserAccess} = this.props.appModuleData.toJS();\n        onChangeState({addBranchLoading: true});\n\n        const obj = {\n            name: this.state.name,\n            location: this.state.location,\n            employees: this.state.employees.map((empl) => {\n                return {\n                    'employee_id': empl.key,\n                    perm: empl.perm,\n                }\n            }),\n            mobile_number: this.state.mobile_number,\n        }\n\n        // Adding admin employee\n        obj.employees.push({\n            employee_id: myUserAccess.emp_id,\n            perm: {\n                bill: {add: true, edit: true, delete: true, view: true},\n                customer: {add: true, edit: true, delete: true, view: true},\n                items: {add: true, edit: true, delete: true, view: true}\n            }\n        })\n\n        try {\n            const {body} = await api({\n                type: this.props.type === \"add-branch\" ? \"POST\" : \"PUT\",\n                uri: `branch/${this.props.type === \"add-branch\" ? \"\" : this.props.branchData._id}`,\n                obj\n            });\n            this.props.modalToggle({modal: BRANCH_ADD_MODAL, view: false});\n            this.props.checkAuth();\n            if (this.props.type === \"edit-branch\") {\n                this.props.getById({type: \"branch\", branchId: this.props.branchData._id});\n            } else {\n                this.props.getAllBranch();\n            }\n            this.closeModal();\n            this.props.addNotification({\n                message: body.message,\n                level: \"success\"\n            });\n        } catch (e) {\n            this.props.addNotification({\n                message: e.toString(),\n                level: \"error\"\n            });\n        }\n    }\n\n    closeModal() {\n        this.setState({\n            name: '',\n            location: '',\n            employees: [],\n            mobile_number: '',\n            addBranchLoading: false,\n        });\n        if (this.props.type === \"edit-branch\") {\n            this.props.modalToggle({modal: BRANCH_EDIT_MODAL, view: false});\n        } else {\n            this.props.modalToggle({modal: BRANCH_ADD_MODAL, view: false});\n        }\n    }\n\n    render() {\n        const {allEmployeesData} = this.props.appModuleData.toJS();\n\n        const allEmployeesCombined = allEmployeesData.employees.concat(allEmployeesData.admins);\n\n        return (\n            <Modal\n                open={true}\n                center={false}\n                onClose={() => this.closeModal()}\n                showCloseIcon={false}\n                size=\"big\"\n                header={\n                    <div>\n                        {this.props.type === \"add-branch\" ? \"ADD BRANCH\" : \"EDIT BRANCH\"}\n                    </div>\n                }\n                content={\n                    <div>\n                        <div>\n                            <Input name={\"Branch Name\"}\n                                   value={this.state['name']}\n                                   required={true}\n                                   onValChange={(data) => this.setState({name: data.value})}\n                            />\n                            <Input name={\"Branch Location\"}\n                                   value={this.state['location']}\n                                   required={true}\n                                   onValChange={(data) => this.setState({location: data.value})}\n                            />\n                            <Input name={\"Branch Mobile Number\"}\n                                   value={this.state.mobile_number}\n                                   type=\"mobile_number\"\n                                   maxLength=\"10\"\n                                   required={true}\n                                   onValChange={(data) => this.setState({mobile_number: Number(data.value)})}\n                            />\n                            <Input name={\"Select Employees\"}\n                                   value={this.state.employees}\n                                   type=\"select\"\n                                   isMulti={true}\n                                   required={true}\n                                   options={this.renderEmployeesOptions(allEmployeesCombined)}\n                                   onValChange={(employees) => this.setState({employees})}\n                            />\n                            {(this.props.type === \"add-branch\" && this.state.employees && this.state.employees.length > 0) &&\n                            <div className=\"employee-permission-box\">\n                                <div className=\"employee-permission-header-name\"> User Permissions</div>\n                                <div className=\"employee-permission-box\">\n                                    <table className=\"content-header-table add-employee-permission-table\">\n                                        <tbody>\n                                        <tr className=\"add-employee-permission-tr\">\n                                            <td className=\"content-header-name\">User</td>\n                                            <td className=\"content-header-name\">Invoice</td>\n                                            <td className=\"content-header-name\">Customer</td>\n                                            <td className=\"content-header-name\">Items</td>\n                                        </tr>\n                                        {this.state.employees.map((empl, key) => {\n                                            return (\n                                                <tr key={empl.key} className=\"add-employee-permission-tr\">\n                                                    <td className=\"content-header-name\">\n                                                        [{empl.key}] {empl.text}\n                                                    </td>\n                                                    <td className=\"content-header-name\">\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.bill.add}\n                                                            onChange={(data) => this.onChangePermission(empl, 'bill', 'add', data)}/> Add <br/>\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.bill.view}\n                                                            onChange={(data) => this.onChangePermission(empl, 'bill', 'view', data)}/> View <br/>\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.bill.edit}\n                                                            onChange={(data) => this.onChangePermission(empl, 'bill', 'edit', data)}/> Edit <br/>\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.bill.delete}\n                                                            onChange={(data) => this.onChangePermission(empl, 'bill', 'delete', data)}/> Delete <br/>\n                                                    </td>\n                                                    <td className=\"content-header-name\">\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.customer.add}\n                                                            onChange={(data) => this.onChangePermission(empl, 'customer', 'add', data)}/> Add <br/>\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.customer.view}\n                                                            onChange={(data) => this.onChangePermission(empl, 'customer', 'view', data)}/> View <br/>\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.customer.edit}\n                                                            onChange={(data) => this.onChangePermission(empl, 'customer', 'edit', data)}/> Edit <br/>\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.customer.delete}\n                                                            onChange={(data) => this.onChangePermission(empl, 'customer', 'delete', data)}/> Delete <br/>\n                                                    </td>\n                                                    <td className=\"content-header-name\">\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.items.add}\n                                                            onChange={(data) => this.onChangePermission(empl, 'items', 'add', data)}/> Add <br/>\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.items.view}\n                                                            onChange={(data) => this.onChangePermission(empl, 'items', 'view', data)}/> View <br/>\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.items.edit}\n                                                            onChange={(data) => this.onChangePermission(empl, 'items', 'edit', data)}/> Edit <br/>\n                                                        <Checkbox\n                                                            checked={empl.perm && empl.perm.items.delete}\n                                                            onChange={(data) => this.onChangePermission(empl, 'items', 'delete', data)}/> Delete <br/>\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                            }\n                        </div>\n                        {this.props.type !== \"add-branch\" &&\n                        <div style={{padding: 10}} align=\"center\">\n                            Note: Update the employee permission using Edit-Permission\n                        </div>}\n                        <Loading loading={this.state.addBranchLoading}/>\n                    </div>\n                }\n                footer={\n                    <div>\n                        <Button name=\"Submit\"\n                                disabled={this.checkOkayToAdd()}\n                                onClick={async () => {\n                                    await this.onClickAddBranch();\n                                }}/>\n                        <Button name=\"Close\" onClick={() => this.closeModal()}/>\n                    </div>\n                }\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddOrEditBranch));","import React, {Component} from \"react\";\nimport {GoPlus} from 'react-icons/go';\nimport \"../ListView/style.css\";\n\nclass BranchGrid extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {allBranchData, onClickFn, onClickAdd} = this.props;\n        return (\n            <div className=\"grid-container\">\n                {\n                    allBranchData.map((branchData, bKye) => {\n                        return (\n                            <div className={`grid-main`} key={bKye} onClick={() => onClickFn(branchData)}>\n                                <div className=\"branch-grid-name\">{branchData.name} {branchData.deleted && <span className=\"branch-grid-deleted\">Deleted</span>}</div>\n                                <div className=\"branch-grid-location\">{branchData.location}</div>\n                                <div className=\"branch-grid-mobile\">Mobile Number: <span\n                                    style={{color: \"black\"}}>{branchData.mobile_number}</span></div>\n                            </div>\n                        )\n                    })\n                }\n                {onClickAdd &&\n                <div className=\"grid-main grid-align-center\" onClick={() => onClickAdd()}>\n                    <GoPlus size={50}/>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\n\nexport default BranchGrid;","import React, {Component} from \"react\";\nimport './style.css';\n\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions, BRANCH_ADD_MODAL} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\nimport BranchGrid from \"../../components/GridView/BranchGrid\";\nimport Button from \"../../components/Button\";\n\nclass Branches extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.props.getAllBranch();\n    }\n\n    render() {\n        const {allBranchData, myUserAccess} = this.props.appModuleData.toJS();\n        return (\n            <div className=\"actual-content\">\n                {/*{myUserAccess.role === \"admin\" &&*/}\n                {/*<Button name={`ADD NEW BRANCH`} onClick={() => this.props.modalToggle({*/}\n                {/*    modal: BRANCH_ADD_MODAL,*/}\n                {/*    view: true*/}\n                {/*})}/>*/}\n                {/*}*/}\n                <div className=\"dashboard-branch\">\n                    <div className=\"dashboard-branch-heading\">\n                        Branches\n                    </div>\n                    <div>\n                        <BranchGrid\n                            allBranchData={allBranchData.filter(branch => !branch.deleted)}\n                            onClickFn={(branchData) => {\n                                this.props.setCurrentBranch(branchData);\n                                this.props.history.push(`/branch/${branchData._id}/customers`);\n                            }}\n                        />\n                        {allBranchData.length === 0 &&\n                        <div style={{color: \"#8c8c8c\"}} align=\"center\">Nothing to show</div>}\n                    </div>\n                </div>\n                <div className=\"dashboard-branch\">\n                    <div className=\"dashboard-branch-heading\">\n                        Archived Branches\n                    </div>\n                    <div>\n                        <BranchGrid\n                            allBranchData={allBranchData.filter(branch => branch.deleted)}\n                            onClickFn={(branchData) => {\n                                this.props.setCurrentBranch(branchData);\n                                this.props.history.push(`/branch/${branchData._id}/customers`);\n                            }}\n                        />\n                        {allBranchData.length === 0 &&\n                        <div style={{color: \"#8c8c8c\"}} align=\"center\">Nothing to show</div>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Branches));","import React, {Component} from \"react\";\n\nimport \"./style.css\";\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\nimport bec from \"../../utils/bec\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport Modal from \"../../components/Modal\";\nimport api from \"../../utils/api\";\n\nclass ChangePassword extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newPassword: '',\n            repeatPassword: '',\n            updatePassLoading: false\n        };\n\n        this.onClickUpdatePass = this.onClickUpdatePass.bind(this);\n        this.setStateChangeValues = this.setStateChangeValues.bind(this);\n    }\n\n    setStateChangeValues({key, value}) {\n        this.setState({[key]: value});\n    }\n\n    async onClickUpdatePass() {\n        const {myUserAccess} = this.props.appModuleData.toJS();\n        this.setStateChangeValues({key: \"updatePassLoading\", value: true});\n        try {\n            const {body} = await api({\n                type: 'PUT',\n                uri: `/user/employee/password/${myUserAccess[\"emp_id\"]}`,\n                obj: {'new-password': this.state.newPassword, 'repeat-password': this.state.repeatPassword}\n            });\n            if (!body || body.status === 'error') {\n                this.props.addNotification({\n                    message: \"Error while updating password: \" + body.data,\n                    level: \"error\"\n                })\n            } else {\n                window.location.href = '/';\n                this.props.addNotification({\n                    message: `Password successfully changed for ${window.location.search.substring(1)}`,\n                    level: \"success\"\n                })\n            }\n            this.setStateChangeValues({key: \"updatePassLoading\", value: false});\n        } catch (e) {\n            this.props.addNotification({\n                message: \"Error while updating password: \" + e.toString(),\n                level: \"error\"\n            })\n        }\n    }\n\n    render() {\n\n        const {myUserAccess} = this.props.appModuleData.toJS();\n\n        return (\n            <Modal\n                open={true}\n                center={true}\n                onClose={() => this.props.onChangeState({updatePasswordModal: false})}\n                showCloseIcon={false}\n                size=\"mini\"\n                header={\n                    <div>\n                        CHANGE PASSWORD (min 8 character)\n                    </div>\n                }\n                content={\n                    <div>\n                        <Input name={\"New Password\"}\n                               value={this.state.newPassword}\n                               required={true}\n                               minLength={8}\n                               type=\"password\"\n                               onValChange={(data) => this.setStateChangeValues({\n                                   key: 'newPassword',\n                                   value: data.value\n                               })}\n                        />\n                        <Input name={\"Repeat Password\"}\n                               value={this.state.repeatPassword}\n                               minLength={8}\n                               required={true}\n                               type=\"password\"\n                               onValChange={(data) => this.setStateChangeValues({\n                                   key: 'repeatPassword',\n                                   value: data.value\n                               })}\n                        />\n\n                    </div>\n                }\n                footer={\n                    <div>\n                        <Button name=\"Update Password\"\n                                disabled={!this.state.newPassword ||\n                                !this.state.repeatPassword ||\n                                (this.state.newPassword.length < 8) ||\n                                (this.state.repeatPassword.length < 8) ||\n                                (this.state.newPassword !== this.state.repeatPassword)}\n                                onClick={() => this.onClickUpdatePass()}/>\n                        <Button name=\"Close\" onClick={() => this.props.onChangeState({updatePasswordModal: false})}/>\n                    </div>\n                }\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ChangePassword));","import React, {Component} from \"react\";\nimport \"./style.css\";\nimport Dropdown from \"../DropDown\";\nimport Input from \"../Input\";\n\nimport Modal from '../Modal';\nimport Button from \"../Button\";\nimport api from \"../../utils/api\";\nimport Loading from \"../Loading\";\nimport {FcBusinessman, FcBusinesswoman, FcCellPhone, FcAddressBook} from \"react-icons/fc\";\n\nexport const options = [\n    {value: 'male', label: 'Male'},\n    {value: 'female', label: 'Female'}\n];\n\nclass CustomerLi extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showEditModal: false,\n            editCustomerData: {},\n            editLoading: false,\n            showDeleteModal: false,\n            deleteCustomerData: {},\n            isSuccessIndicator: false,\n            message: {\n                type: \"\",\n                text: \"\"\n            },\n        };\n    }\n\n    render() {\n        const {customer, branchId} = this.props;\n\n        const customerOptions = customer.deleted ? [] : [{icon: \"delete\", value: \"delete\"}];\n\n        return (\n            <div\n                className={this.state.editLoading || this.state.isSuccessIndicator ? \"grid-customer-container gradient\" : \"grid-customer-container\"}\n            >\n                <div className=\"grid-customer-detail-container\"\n                     onClick={() => this.props.minimal ? this.props.onClick(customer) : this.props.history.push(`/branch/${branchId}/customer/${customer._id}`)}>\n                    <div className=\"grid-icon\">\n                        {(customer.gender === \"male\" ?\n                            <FcBusinessman className=\"list-user-icon\" size=\"32px\" color=\"black\"/> :\n                            <FcBusinesswoman className=\"list-user-icon\" size=\"32px\" color=\"black\"/>)}\n                    </div>\n                    <div className=\"list-name\">\n                        {customer.deleted &&\n                        <div className=\"customer-list-split customer-list-deleted\">\n                            Deleted\n                        </div>}\n                        {customer.full_name}\n                        <div className=\"mobile-number customer-list-mobile-number\">\n                            <div className=\"customer-list-split\">\n                                <FcCellPhone size=\"15px\" color=\"black\"/>\n                            </div>\n                            <div className=\"customer-list-split\">\n                                {customer.mobile_number}\n                            </div>\n                        </div>\n                    </div>\n                    {!this.props.minimal &&\n                    <div className=\"customer-list-age\">\n                        <div className=\"customer-list-age-header\">\n                            Age\n                        </div>\n                        <div className=\"customer-list-age-value\">\n                            {customer.age}\n                        </div>\n                    </div>}\n                    {!this.props.minimal && customer.address &&\n                    <div className=\"customer-list-address\">\n                        <FcAddressBook size=\"15px\" color=\"black\"/>\n                        <div className=\"customer-list-address-value\">{customer.address}</div>\n                    </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default CustomerLi;","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nimport {appModuleActions as actions, EMPLOYEE_ADD_MODAL} from \"../../AppModule\";\nimport bec from \"../../utils/bec\";\nimport SearchBar from \"../../components/SearchBar\";\nimport Tabs from \"../../components/Tabs\";\nimport UserLi from \"../../components/ListView/UserLi\";\n\nimport \"./style.css\";\nimport Button from \"../../components/Button\";\nimport ChangePassword from \"../ActionModals/ChangePassword\";\nimport Dropdown from \"../../components/DropDown\";\nimport {options} from \"../../components/ListView/CustomerLi\";\n\nclass Account extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            updatePasswordModal: false,\n            filterField: '',\n            deleteEmployeeLoading: false,\n        };\n\n        this.onChangeState = this.onChangeState.bind(this);\n    }\n\n    componentWillMount() {\n        this.props.getAllEmployees();\n    }\n\n    onChangeState(data) {\n        this.setState({...data});\n    }\n\n    render() {\n\n        const {myUserAccess} = this.props.appModuleData.toJS();\n\n        const panes = [\n            {\n                menuItem: 'Update Password',\n                render:\n                    <div style={{overflow: \"hidden\", padding: 10}}>\n\n                    </div>\n            }\n        ];\n\n        const accountOptions = [{\n            icon: \"Change Password\",\n            value: \"Change Password\"\n        }];\n\n        return (\n            <div className=\"actual-content\">\n                <div style={{display: \"flex\", justifyContent: \"flex-end\", padding: 10}}>\n                    <Dropdown\n                        list={accountOptions}\n                        onSelectOption={(val) => {\n                            if (val === \"Change Password\") {\n                                this.setState({updatePasswordModal: true})\n                            }\n                        }}\n                    />\n                </div>\n                <div className=\"Detail-View\">\n                    {myUserAccess.emp_id &&\n                    <div className=\"Detail-View-Main-Content\">\n                        <div className=\"Detail-View-Main-Content-Column1\">\n                            <div className=\"Detail-View-Main-Content-Name\">\n                                {myUserAccess.full_name} {myUserAccess.deleted &&\n                            <span>DELETED</span>}\n                            </div>\n                            <div className=\"Detail-View-Main-Content-Id\">\n                                <img className=\"image\"\n                                     src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\n                                {myUserAccess.emp_id}\n                            </div>\n                        </div>\n                        <div className=\"Detail-View-Main-Content-Column2\">\n                            <div className=\"container\">\n                                <div className=\"information\">Your Information:</div>\n                                <div className=\"stat no-border\">\n                                    <div className=\"Detail-View-Main-Content-split\">\n                                        <div className=\"information-heading\">Name</div>\n                                        <div className=\"information-val\">\n                                            {myUserAccess.full_name}\n                                        </div>\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-split\">\n                                        <div className=\"information-heading\">Gender</div>\n                                        <div className=\"information-val\">\n                                            {myUserAccess.gender}\n                                        </div>\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-split\">\n                                        <div className=\"information-heading\">Mobile Number</div>\n                                        <div className=\"information-val\">\n                                            {myUserAccess.mobile_number}\n                                        </div>\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-split\">\n                                        <div className=\"information-heading\">Age</div>\n                                        <div className=\"information-val\">\n                                            {myUserAccess.age}\n                                        </div>\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-split\">\n                                        <div className=\"information-heading\">Role</div>\n                                        <div className=\"information-val\">\n                                            {myUserAccess.role}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    }\n                </div>\n\n                {this.state.updatePasswordModal && <ChangePassword onChangeState={this.onChangeState}/>}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Account));","import React, {Component} from \"react\";\nimport {removeToken} from \"../../utils/index\";\n\n\nclass Logout extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        removeToken();\n        window.location.href = '/';\n    }\n\n    render() {\n        return (\n            <div>\n                logging out...\n            </div>\n        );\n    }\n}\n\nexport default Logout;","import React, {Component} from \"react\";\nimport {IoMdLogOut} from \"react-icons/io\";\nimport {RiAccountCircleLine, RiHome7Line, RiSettings3Line} from \"react-icons/ri\";\nimport {connect} from \"react-redux\";\nimport {Route, withRouter} from \"react-router-dom\";\n\nimport './Dashboard.css';\n\nimport {appModuleActions as actions, EMPLOYEE_ADD_MODAL} from \"../../AppModule\";\nimport NotificationSystem from \"../../components/Notification\";\nimport AppLayout from \"../../components/AppLayout\";\nimport ViewEmployees from \"../Users/Employees\";\nimport AddOrEditEmployees from \"../Users/AddOrEditEmployees\";\nimport ActivityView from \"../ActionModals/ActivityView\";\nimport Dashboard from \"./Dashboard\";\nimport AddOrEditBranch from \"../Branch/AddOrEditBranch\";\nimport Branches from \"../Branch\";\nimport Account from \"../Users/Account\";\nimport Logout from \"../Auth/Logout\";\nimport {Pages} from \"../Pages\";\n\nclass DashboardAll extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.props.getAllBranch();\n    }\n\n    render() {\n        const {myUserAccess, modal} = this.props.appModuleData.toJS();\n        const leftMenu = [\n            {\n                name: \"Branches\",\n                id: \"branches\",\n                link: \"/branches\"\n            }\n        ];\n\n        if (myUserAccess.role === \"admin\") {\n            leftMenu.push({\n                name: \"Users\",\n                id: \"Users\",\n                link: \"/Users\",\n                addFunc: () => this.props.modalToggle({\n                    modal: EMPLOYEE_ADD_MODAL,\n                    view: true\n                })\n            });\n            leftMenu.push({\n                name: \"Activities\",\n                id: \"Activities\",\n                link: \"/Activities\",\n                addLink: null\n            });\n        }\n\n        let actions = [{\n            link: \"/dashboard\",\n            icon: <RiHome7Line size=\"24px\"/>\n        }, {\n            link: \"/account\",\n            icon: <RiAccountCircleLine size=\"24px\"/>\n        }, {\n            link: \"/settings\",\n            icon: <RiSettings3Line size=\"24px\"/>\n        }, {\n            link: \"/logout\",\n            icon: <IoMdLogOut size=\"24px\"/>\n        }];\n        return (\n            <AppLayout history={this.props.history} location={this.props.location} pageHeader={{\n                appName: `Bill1ne`,\n                routeLinks: [],\n                rightUserDetail: myUserAccess,\n                leftMenu,\n                actions,\n                changePasswordFn: () => this.props.history.push(\"/change-password\"),\n                checkAuth: this.props.checkAuth\n            }}>\n                <NotificationSystem props/>\n                {modal.employeeAddModal && <AddOrEditEmployees type={\"add-employee\"}/>}\n                {modal.branchAddModal && <AddOrEditBranch type={\"add-branch\"}/>}\n\n                <Route exact path={Pages.DASHBOARD} component={Dashboard}/>\n                <Route path={Pages.BRANCHES} component={Branches}/>\n                <Route path={Pages.ACCOUNT} component={Account}/>\n                <Route path=\"/logout\" component={Logout}/>\n                {myUserAccess.role === \"admin\" && <Route path={Pages.USERS} component={ViewEmployees}/>}\n                {myUserAccess.role === \"admin\" && <Route path={Pages.ACTIVITIES} component={ActivityView}/>}\n            </AppLayout>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardAll));","import React, {Component} from \"react\";\nimport \"./style.css\";\n\nimport Loading from \"../Loading\";\n\nclass Page extends Component {\n    render() {\n        const {totalPages, currentPage, nextPage, prevPage, loading, shownContent, totalContent} = this.props;\n        return (\n            <div className=\"page-next\">\n                {loading &&\n                <div className=\"page-next-split page-next-loading\">\n                    <Loading type=\"simple\" style=\"native\" loading={loading}/>\n                </div>}\n                <div className=\"page-next-split page-next-arrows\" onClick={() => {\n                    if (currentPage > 0) {\n                        prevPage(currentPage - 1)\n                    }\n                }}>\n                    <img style={{width: 15}}\n                         src=\"https://img.icons8.com/material-outlined/96/000000/left.png\"/>\n                </div>\n                <div className=\"page-next-split page-next-numbers\">\n                    {currentPage} / {totalPages} Page\n                    <div className=\"page-next-numbers-subline\">\n                        {shownContent} / {totalContent}\n                    </div>\n                </div>\n                <div className=\"page-next-split page-next-arrows\" onClick={() => {\n                    if (currentPage < totalPages) {\n                        const searchParams = new URLSearchParams(this.props.location.search);\n                        searchParams.set(\"page\", currentPage + 1);\n                        this.props.history.push(`${this.props.location.pathname}?${searchParams.toString()}`);\n                        nextPage(currentPage + 1)\n                    }\n                }}>\n                    <img style={{width: 15}}\n                         src=\"https://img.icons8.com/material-outlined/96/000000/right.png\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Page;","import React, {Component} from \"react\";\nimport \"./style.css\";\n\nclass StatCount extends Component {\n    render() {\n        const {heading, count, size, noBorder, borderColor} = this.props;\n        let styles = {\n            main: \"content-stat-count\",\n            heading: \"heading\",\n            count: \"count\",\n        };\n\n        switch (size) {\n            case \"small\":\n                styles = {\n                    main: \"content-stat-small-count\",\n                    heading: \"heading\",\n                    count: \"count\"\n                };\n                break;\n            default:\n                break;\n\n        }\n\n        if (noBorder) {\n            styles.main = styles.main + \" no-border\"\n        }\n\n        return (\n            <div className={styles.main} style={{borderColor}}>\n                {heading &&\n                <div className={styles.heading}>\n                    {heading}\n                </div>}\n                <div className={styles.count}>\n                    {count}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default StatCount;","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport './CustomerList.css';\n\nimport {appModuleActions as actions, CUSTOMER_ADD_MODAL} from \"../../AppModule\";\nimport CustomerLi, {options} from \"../../components/ListView/CustomerLi\";\nimport Paging from \"../../components/Pagination\";\nimport Button from \"../../components/Button\";\nimport {getBranchActionPerm} from \"../../utils/index\";\nimport StatList from \"../../components/Stats/StatList\";\nimport {IoMdAdd} from \"react-icons/io\";\n\nclass ViewCustomers extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteCustomerModal: false,\n            whichCustomer: {},\n            filterField: '',\n            showEditModal: false,\n        };\n    }\n\n    componentWillMount() {\n        const urlParams = new URLSearchParams(this.props.location.search);\n        this.props.getAllCustomer(urlParams.get(\"page\") ? urlParams.get(\"page\") : 0);\n        const {myUserAccess} = this.props.appModuleData.toJS();\n        if (myUserAccess.role === \"admin\") {\n            this.props.getAllBranch();\n        }\n    }\n\n    componentDidMount() {\n        if (window.location.search.substring(1) === \"delete-customer\" && !this.state.whichCustomer.full_name) {\n            this.props.history.push('/customers');\n        }\n\n        const {myUserAccess} = this.props.appModuleData.toJS();\n        if (myUserAccess.role === \"admin\" && myUserAccess.branch) {\n            this.setState({branch_id: {value: myUserAccess.branch._id, label: myUserAccess.branch.name}});\n        }\n    }\n\n    render() {\n\n        const {allCustomerData, loading, currentBranch, myUserAccess} = this.props.appModuleData.toJS();\n\n        const filteredCustomerData = allCustomerData.customers.filter((cuData) => {\n            return cuData.full_name.toLowerCase().includes(this.state.filterField.toLowerCase())\n        });\n\n        return (\n            <div className=\"actual-content\">\n                {getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"customer\", \"add\") &&\n                <div style={{display: \"flex\", borderBottom: \"1px solid #eaeaea\"}}>\n                    <IoMdAdd size=\"24px\" style={{margin: 10}} className=\"button-icon\" alt={\"Add Customer\"}\n                             onClick={() => this.props.modalToggle({\n                                 modal: CUSTOMER_ADD_MODAL,\n                                 view: true\n                             })}/>\n                </div>}\n                {/*<StatList statData={[{heading: \"Total Customer Count\", count: allCustomerData.count.total}]}/>*/}\n                <div>\n                    {filteredCustomerData && filteredCustomerData.map((custData, key) => {\n                        return (\n                            <CustomerLi key={key} customer={custData}\n                                        page={allCustomerData.count.page}\n                                        history={this.props.history}\n                                        branchId={this.props.match.params.branchId}\n                                        getAllCustomer={this.props.getAllCustomer}/>\n                        )\n                    })}\n                    {filteredCustomerData.length === 0 &&\n                    <div style={{color: \"#8c8c8c\"}} align=\"center\">Nothing to show</div>}\n                </div>\n                <div className=\"float-right\">\n                    <Paging\n                        loading={loading.getAllCustomerLoading}\n                        currentPage={allCustomerData.count.page}\n                        totalPages={allCustomerData.count.totalPages}\n                        shownContent={allCustomerData.customers.length}\n                        totalContent={allCustomerData.count.total}\n                        nextPage={(pg) => this.props.getAllCustomer(pg)}\n                        prevPage={(pg) => this.props.getAllCustomer(pg)}\n                        history={this.props.history}\n                        location={this.props.location}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ViewCustomers));","import React, {Component} from \"react\";\nimport \"./style.css\";\n\nimport StatCount from \"./StatCount\";\n\nclass StatList extends Component {\n    render() {\n        const {statData} = this.props;\n        return (\n            <div className=\"content-stats\">\n                {statData.map((stat, key) => <StatCount key={key} {...stat}/>)}\n            </div>\n        );\n    }\n}\n\n\nexport default StatList;","import React, {Component} from \"react\";\nimport \"./style.css\";\n\nimport StatCount from \"../Stats/StatCount\";\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\nimport {FcInspection} from \"react-icons/fc\";\n\nclass InvoiceLi extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {invoice, branchId} = this.props;\n\n        return (\n            <div className=\"grid-list-container grid-invoice\"\n                 onClick={() => this.props.history.push(`/branch/${branchId}/invoice/${invoice._id}`)}>\n                <div className=\"grid-icon\" id=\"icon\">\n                    <FcInspection className=\"list-user-icon\" size=\"28px\"/>\n                </div>\n                <div className=\"list-name\" id=\"name\">\n                    {invoice.customer.mobile_number && <span>{invoice.customer.mobile_number}</span>} {invoice.customer.full_name || invoice._id}\n                    <div>\n                        <div className=\"list-split list-label\">\n                            {invoice._id}\n                        </div>\n                        <div className=\"list-split list-label\">\n                            {getDesiredDateTimeNow(invoice.added_date_time)}\n                        </div>\n                        <div className=\"list-split list-label\">\n                            {invoice.added_by.full_name}\n                        </div>\n                        {invoice.deleted &&\n                        <div className=\"list-split list-deleted\">\n                            Deleted\n                        </div>}\n                    </div>\n                </div>\n\n                <div className=\"grid-stat-container\" id=\"stat\">\n                    <StatCount heading={`${invoice.products.length}`}\n                               count={`Product`}\n                               size=\"small\"/>\n                    <StatCount heading={`${invoice.services.length}`}\n                               count={`Service`}\n                               size=\"small\"/>\n                    {invoice.state === \"pending\" &&\n                    <StatCount heading={`Rs.${invoice.final_bill_amount.toFixed(2) - invoice.paid_amount.toFixed(2)} `}\n                               count={`Pending`}\n                               size=\"small\" borderColor=\"#e35656\"/>\n                    }\n                    <StatCount heading={`Rs.${invoice.final_bill_amount.toFixed(2)}`}\n                               count={`Bill Amount`}\n                               size=\"small\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default InvoiceLi;","import React, {Component} from \"react\";\nimport './CustomerList.css';\n\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\nimport {RiDeleteBinLine} from \"react-icons/ri\";\nimport {FiEdit} from \"react-icons/fi\";\n\nimport Loading from \"../../components/Loading\";\nimport Tabs from \"../../components/Tabs\";\nimport InvoiceLi from \"../../components/ListView/InvoiceLi\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport {options} from \"../../components/ListView/CustomerLi\";\nimport Modal from \"../../components/Modal\";\nimport api from \"../../utils/api\";\nimport {getBranchActionPerm} from \"../../utils/index\";\n\nclass CustomerDetail extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editCustomerModal: false,\n            showDeleteModal: false,\n        };\n\n        this.isAllInputOkay = this.isAllInputOkay.bind(this);\n        this.onSubmitDeleteCustomer = this.onSubmitDeleteCustomer.bind(this);\n    }\n\n    componentWillMount() {\n        let {id} = this.props.match.params;\n        this.props.getById({type: \"customer\", id});\n    }\n\n    isAllInputOkay() {\n        const {editCustomerData} = this.state;\n        return !editCustomerData.full_name\n            || Object.keys(editCustomerData.gender).length === 0 || !(Number(editCustomerData.age) > 0)\n            || editCustomerData.mobile_number.toString().length !== 10\n    }\n\n    async onSubmitDeleteCustomer(customer) {\n        this.setState({showDeleteModal: false, deleteLoading: true});\n        try {\n            const {body} = await api({type: \"DELETE\", uri: \"customer/\" + customer._id});\n            this.setState({\n                editLoading: false,\n                isSuccessIndicator: true,\n                message: {type: \"success\", text: body.message}\n            });\n\n            if (!body || body.status === 'error') {\n                if (body.data) {\n                    this.props.addNotification({message: body.data, level: \"error\"});\n                }\n            } else {\n                let {id} = this.props.match.params;\n                this.props.getById({type: \"customer\", id});\n                if (body.message) {\n                    this.props.addNotification({message: body.message, level: \"success\"});\n                }\n            }\n            this.setState({deleteLoading: false});\n        } catch (e) {\n            this.setState({deleteLoading: false});\n            this.props.addNotification({message: e.toString(), level: \"error\"});\n        }\n    }\n\n    render() {\n\n        const {detailData, currentBranch, loading, myUserAccess} = this.props.appModuleData.toJS();\n        const {detail, invoicesAdded, queryId} = detailData;\n\n        const panes = [\n            {\n                menuItem: `Invoices (${invoicesAdded && invoicesAdded.length})`,\n                render:\n                    <div className=\"Detail-View-Main-Content-Body\">\n                        {invoicesAdded && invoicesAdded.map((invoice, key) => {\n                            return <InvoiceLi invoice={invoice}\n                                              history={this.props.history}\n                                              key={key} branchId={invoice.branch}/>\n                        })}\n                    </div>\n            }\n        ];\n\n        return (\n            <div>\n                <div className=\"actual-content\">\n                    <div style={{width: \"100%\"}}>\n                        <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                            <Loading type=\"simple\" style=\"native\"\n                                     loading={loading.getByIdLoading || loading.putCustomerLoading}/>\n                        </div>\n                        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                            {(!loading.getByIdLoading && !loading.putCustomerLoading) && !detail.deleted &&\n                            getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"customer\", \"edit\") &&\n                            <FiEdit size=\"20px\" style={{margin: 10}} className=\"button-icon\"\n                                    onClick={() => this.setState({\n                                        editCustomerModal: true,\n                                        editCustomerData: {\n                                            ...detail,\n                                            gender: options.filter((ge) => ge.value === detail.gender)[0]\n                                        }\n                                    })}/>}\n                            {(!loading.getByIdLoading && !loading.putCustomerLoading) && !detail.deleted &&\n                            getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"customer\", \"delete\") &&\n                            <RiDeleteBinLine size=\"20px\" style={{margin: 10}} className=\"button-icon\"\n                                             onClick={() => this.setState({showDeleteModal: true})}/>}\n                        </div>\n                    </div>\n                    <div className=\"Detail-View\">\n                        {detailData.type === \"customer\" && detail._id &&\n                        <div>\n                            <div className=\"Detail-View-Main-Content\">\n                                <div className=\"Detail-View-Main-Content-Column1\">\n                                    <div className=\"Detail-View-Main-Content-Name\">\n                                        {detail.full_name} {detail.deleted &&\n                                    <span>DELETED</span>}\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-Id\">\n                                        <img className=\"image\"\n                                             src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\n                                        {detail._id}\n                                    </div>\n                                </div>\n                                <div className=\"Detail-View-Main-Content-Column2\">\n                                    <div className=\"container\">\n                                        <div className=\"information\">Customer Information:</div>\n                                        <div className=\"stat\">\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Name</div>\n                                                <div className=\"information-val\">\n                                                    {detail.full_name}\n                                                </div>\n                                            </div>\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Mobile Number</div>\n                                                <div className=\"information-val\">\n                                                    {detail.mobile_number}\n                                                </div>\n                                            </div>\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Age</div>\n                                                <div className=\"information-val\">\n                                                    {detail.age}\n                                                </div>\n                                            </div>\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Address</div>\n                                                <div className=\"information-val\">\n                                                    {detail.address}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"container\">\n                                        <div className=\"information\">Invoice Information:</div>\n                                        <div className=\"stat no-border\">\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Invoice Count</div>\n                                                <div className=\"information-val\">\n                                                    {invoicesAdded.length}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div style={{paddingTop: 10}}>\n                                <Tabs panes={panes} type=\"default\"/>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                </div>\n\n                {\n                    this.state.editCustomerModal &&\n                    <Modal\n                        open={true}\n                        center={false}\n                        onClose={() => {\n                            this.setState({editCustomerModal: false, editCustomerData: {}});\n                        }}\n                        showCloseIcon={false}\n                        size=\"big\"\n                        header={\n                            <div>\n                                EDIT CUSTOMER: <span className=\"Modal-Header-name\">{detail.full_name}</span>\n                            </div>\n                        }\n                        content={\n                            <div>\n                                <Input name={\"Name\"}\n                                       value={this.state.editCustomerData.full_name}\n                                       required={true}\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editCustomerData: {\n                                                   ...this.state.editCustomerData,\n                                                   full_name: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Mobile Number\"}\n                                       value={this.state.editCustomerData.mobile_number}\n                                       type=\"mobile_number\"\n                                       disabled={true}\n                                       maxLength=\"10\"\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editCustomerData: {\n                                                   ...this.state.editCustomerData,\n                                                   mobile_number: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Home Address\"}\n                                       value={this.state.editCustomerData.address}\n                                       type=\"textarea\"\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editCustomerData: {\n                                                   ...this.state.editCustomerData,\n                                                   address: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Email\"}\n                                       value={this.state.editCustomerData.email}\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editCustomerData: {\n                                                   ...this.state.editCustomerData,\n                                                   email: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Age\"}\n                                       value={this.state.editCustomerData.age}\n                                       type=\"number\"\n                                       maxLength=\"2\"\n                                       required={true}\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editCustomerData: {\n                                                   ...this.state.editCustomerData,\n                                                   age: data.value\n                                               }\n                                           })\n                                       }}\n                                />\n\n                                <Input name={\"Gender\"}\n                                       value={this.state.editCustomerData.gender}\n                                       type=\"select\"\n                                       required={true}\n                                       options={options}\n                                       onValChange={(data) => {\n                                           this.setState({\n                                               editCustomerData: {\n                                                   ...this.state.editCustomerData,\n                                                   gender: data\n                                               }\n                                           })\n                                       }}\n                                />\n                            </div>\n                        }\n                        footer={\n                            <div>\n                                <Button name=\"Submit\"\n                                        disabled={this.isAllInputOkay()}\n                                        onClick={() => {\n                                            const {editCustomerData} = this.state;\n                                            this.props.putCustomer({\n                                                name: editCustomerData.full_name,\n                                                email: editCustomerData.email,\n                                                gender: editCustomerData.gender.value,\n                                                address: editCustomerData.address,\n                                                age: Number(editCustomerData.age),\n                                                mobileNo: Number(editCustomerData.mobile_number),\n                                                branch_id: Number(currentBranch._id)\n                                            });\n                                            this.setState({editCustomerData: {}, editCustomerModal: false});\n                                        }}/>\n                                <Button name=\"Close\" onClick={() => {\n                                    this.setState({editCustomerData: {}, editCustomerModal: false});\n                                }}/>\n                            </div>\n                        }\n                    />\n                }\n\n                {\n                    this.state.showDeleteModal &&\n                    <Modal\n                        open={this.state.showDeleteModal}\n                        center={false}\n                        onClose={() => this.setState({showDeleteModal: false})}\n                        showCloseIcon={false}\n                        size=\"mini\"\n                        header={\n                            <div>\n                                DELETE CUSTOMER:<span>{detail.full_name}</span>\n                            </div>\n                        }\n                        content={\n                            <div style={{padding: 10}}>\n                                Deleting customer will not delete the customer from the inventory. Customer will be\n                                shown in the inventory as deleted.\n                                You cannot revert the deletion at any point.\n                            </div>\n                        }\n                        footer={\n                            <div>\n                                <Button name=\"Delete\"\n                                        onClick={async () => {\n                                            await this.onSubmitDeleteCustomer(detail);\n                                        }}/>\n                                <Button name=\"Close\" onClick={() => this.setState({showDeleteModal: false})}/>\n                            </div>\n                        }\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CustomerDetail));","import React, {Component} from \"react\";\nimport {FcPackage} from \"react-icons/fc\";\nimport \"./style.css\";\n\nimport StatCount from \"../Stats/StatCount\";\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\n\nclass ProductLi extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {product, showAvgUsage, isInvoiceView} = this.props;\n\n        return (\n            <div className=\"grid-list-container grid-product\"\n                 onClick={() => this.props.history.push(`/branch/${this.props.branchId}/product/${product._id}`)}>\n                <div className=\"grid-icon\" id=\"icon\">\n                    <FcPackage className=\"list-user-icon\" size=\"28px\"/>\n                </div>\n                <div className=\"list-name\" id=\"name\">\n                    {product.name}\n                    <div>\n                        {product._id &&\n                        <div className=\"list-split list-label\">\n                            {product._id}\n                        </div>}\n                        {product.added_date_time && <div className=\"list-split list-label\">\n                            {getDesiredDateTimeNow(product.added_date_time)}\n                        </div>}\n                        {product.deleted &&\n                        <div className=\"list-split list-deleted\">\n                            Deleted\n                        </div>}\n                    </div>\n                </div>\n                {!isInvoiceView &&\n                <div className=\"grid-stat-container\" id=\"stat\">\n                    {showAvgUsage &&\n                    <StatCount heading={`${showAvgUsage} ${product.product_unit}`}\n                               count={`Avg.used`}\n                               size=\"small\"/>}\n                    <StatCount heading={`${product.available_stocks.toFixed(2)} ${product.product_unit}`}\n                               count={`Available`}\n                               size=\"small\"/>\n                    <StatCount heading=\"cost\" count={product.product_cost} size=\"small\"/>\n                </div>}\n\n                {isInvoiceView &&\n                <div className=\"grid-stat-container\" id=\"stat\">\n                    <StatCount heading={`${product.quantity_used}`} count={`${product.product_unit}`} size=\"small\"/>\n                    <StatCount heading=\"cost\" count={product.product_cost} size=\"small\"/>\n                </div>}\n\n            </div>\n        );\n    }\n}\n\n\nexport default ProductLi;","import React, {Component} from \"react\";\nimport {FcServices} from \"react-icons/fc\";\n\nimport \"./style.css\";\n\nimport StatCount from \"../Stats/StatCount\";\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\n\nclass ServiceLi extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {service, showSubStatDetail, isInvoiceView} = this.props;\n\n        return (\n            <div className=\"grid-list-container grid-service\"\n                 onClick={() => this.props.history.push(`/branch/${this.props.branchId}/service/${service._id}`)}>\n                <div className=\"grid-icon\" id=\"icon\">\n                    <FcServices className=\"list-user-icon\" size=\"28px\"/>\n                </div>\n                <div className=\"list-name\" id=\"name\">\n                    {service.name}\n                    <div>\n                        {service._id &&\n                        <div className=\"list-split list-label\">\n                            {service._id}\n                        </div>}\n                        {isInvoiceView && service._id &&\n                        <div className=\"list-split list-label\">\n                            {service._id}\n                        </div>}\n                        {service.added_date_time && <div className=\"list-split list-label\">\n                            {getDesiredDateTimeNow(service.added_date_time)}\n                        </div>}\n                        {service.added_by &&\n                        <div className=\"list-split list-label\">\n                            {service.added_by.full_name}\n                        </div>}\n                        {service.deleted &&\n                        <div className=\"list-split list-deleted\">\n                            Deleted\n                        </div>}\n                    </div>\n                </div>\n                <div className=\"grid-stat-container\" id=\"stat\">\n                    {!showSubStatDetail &&\n                    <StatCount heading={`${service.average_stock_usage.length}`}\n                               count={\"Products Used\"}\n                               size=\"small\"/>\n                    }\n                    {(!showSubStatDetail && !isInvoiceView) &&\n                    <StatCount heading={`${service.product_used.length}`}\n                               count={\"Products Used\"}\n                               size=\"small\"/>\n                    }\n                    {(showSubStatDetail && !isInvoiceView) && service.average_stock_usage.map((serviceAvg, key) => {\n                        const productUsed = service.product_used.filter((pu) => pu._id === serviceAvg._id)[0];\n                        if (productUsed) {\n                            return (\n                                <StatCount heading={`${productUsed.name}`} key={key}\n                                           count={`${serviceAvg.quantity_used} ${productUsed.product_unit}`}\n                                           size=\"small\"/>\n                            )\n                        }\n                        return null;\n                    })}\n                    {(showSubStatDetail && isInvoiceView) && service.product_used.map((serviceAvg, key) => {\n                        return (\n                            <StatCount heading={`${serviceAvg.name}`} key={key}\n                                       count={`${serviceAvg.quantity_used} ${serviceAvg.product_unit}`}\n                                       size=\"small\"/>\n                        )\n                    })}\n\n                    {isInvoiceView &&\n                    <StatCount heading={`Rs.${service.service_cost}`}\n                               count={`Cost`}\n                               size=\"small\"/>\n                    }\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nexport default ServiceLi;","import React, {Component} from \"react\";\nimport './Product.css';\n\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions, CUSTOMER_ADD_MODAL, PRODUCT_ADD_MODAL, SERVICE_ADD_MODAL} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\n\nimport Paging from \"../../components/Pagination\";\nimport Tabs from \"../../components/Tabs\";\nimport ProductLi from \"../../components/ListView/ProductLi\";\nimport ServiceLi from \"../../components/ListView/ServiceLi\";\nimport Button from \"../../components/Button\";\nimport {getBranchActionPerm} from \"../../utils/index\";\nimport {IoMdAdd} from \"react-icons/io\";\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeTab: 1\n        };\n    }\n\n    componentWillMount() {\n        const urlParams = new URLSearchParams(this.props.location.search);\n        switch (urlParams.get(\"tab\")) {\n            case \"2\":\n                this.setState({activeTab: Number(urlParams.get(\"tab\"))});\n                this.props.getAllService(urlParams.get(\"page\") ? urlParams.get(\"page\") : 0);\n                break;\n\n            default:\n                this.props.getAllProduct(urlParams.get(\"page\") ? urlParams.get(\"page\") : 0);\n                break;\n\n        }\n    }\n\n    render() {\n\n        const {allProductsData, allServiceData, myUserAccess, updateHistoryFn, currentBranch, loading} = this.props.appModuleData.toJS();\n\n        const panes = [\n            {\n                menuItem: 'Products',\n                render:\n                    <div style={{overflow: \"hidden\"}}>\n                        {getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"add\") &&\n                        <div style={{display: \"flex\", borderBottom: \"1px solid #eaeaea\"}}>\n                            <IoMdAdd size=\"24px\" style={{margin: 10}} className=\"button-icon\" alt={\"Add Product\"}\n                                     onClick={() => addIconFunc()}/>\n                        </div>\n                        }\n                        {allProductsData.products.map((data, key) => {\n                            return (\n                                <ProductLi product={data} history={updateHistoryFn} key={key}\n                                           branchId={this.props.match.params.branchId}/>\n                            )\n                        })}\n                        {allProductsData.products.length === 0 &&\n                        <div style={{color: \"#8c8c8c\", padding: 10}} align=\"center\">Nothing to show</div>}\n                    </div>\n            },\n            {\n                menuItem: 'Services',\n                render:\n                    <div style={{overflow: \"hidden\"}}>\n                        {getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"add\") &&\n                        <div style={{display: \"flex\", borderBottom: \"1px solid #eaeaea\"}}>\n                            <IoMdAdd size=\"24px\" style={{margin: 10}} className=\"button-icon\" alt={\"Add Service\"}\n                                     onClick={() => addIconFunc()}/>\n                        </div>\n                        }\n                        {allServiceData.services.map((data, key) => {\n                            return (\n                                <ServiceLi service={data} history={this.props.history} key={key}\n                                           branchId={this.props.match.params.branchId}/>\n                            )\n                        })}\n                        {allServiceData.services.length === 0 &&\n                        <div style={{color: \"#8c8c8c\", padding: 10}} align=\"center\">Nothing to show</div>}\n                    </div>\n            },\n        ];\n\n        let pagination = {};\n        switch (this.state.activeTab) {\n            case 1:\n                pagination = {\n                    loading: loading.getProductLoading,\n                    currentPage: allProductsData.count.page,\n                    totalPages: allProductsData.count.totalPages,\n                    shownContent: allProductsData.products.length,\n                    totalContent: allProductsData.count.total,\n                    nextPage: (pg) => this.props.getAllProduct(pg),\n                    prevPage: (pg) => this.props.getAllProduct(pg)\n                };\n                break;\n\n            case 2:\n                pagination = {\n                    loading: loading.getServiceLoading,\n                    currentPage: allServiceData.count.page,\n                    totalPages: allServiceData.count.totalPages,\n                    shownContent: allServiceData.services.length,\n                    totalContent: allServiceData.count.total,\n                    nextPage: (pg) => this.props.getAllService(pg),\n                    prevPage: (pg) => this.props.getAllService(pg)\n                }\n        }\n\n        let addIcon = \"PRODUCT/SERVICE\";\n        let addIconFunc;\n        switch (this.state.activeTab) {\n            case 1:\n                addIcon = \"PRODUCT\";\n                addIconFunc = () => this.props.modalToggle({modal: PRODUCT_ADD_MODAL, view: true});\n                break;\n            case 2:\n                addIcon = \"SERVICE\";\n                addIconFunc = () => this.props.modalToggle({modal: SERVICE_ADD_MODAL, view: true});\n                break;\n\n            default:\n                break;\n\n        }\n\n        return (\n            <div className=\"actual-content\" id=\"pageContent\">\n                <Tabs panes={panes} activeTab={this.state.activeTab} onTabClick={(i) => {\n                    this.setState({activeTab: i});\n                    const searchParams = new URLSearchParams(this.props.location.search);\n                    searchParams.set(\"tab\", i);\n                    let page = 0;\n                    switch (i) {\n                        case 2:\n                            page = allServiceData.count.page;\n                            if (allServiceData.services.length === 0) {\n                                this.props.getAllService(page);\n                            }\n                            break;\n\n                        default:\n                            page = allProductsData.count.page;\n                            if (allProductsData.products.length === 0) {\n                                this.props.getAllProduct(page);\n                            }\n                            break;\n\n                    }\n                    searchParams.set(\"page\", page.toString());\n                    this.props.history.push(`/branch/${this.props.match.params.branchId}/items/?${searchParams.toString()}`);\n                }}/>\n                <div className=\"float-right\">\n                    <Paging {...pagination}\n                            history={this.props.history}\n                            location={this.props.location}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nimport Modal from \"../../components/Modal\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport api from \"../../utils/api\";\nimport {\n    appModuleActions as actions,\n    PRODUCT_ADD_MODAL,\n    PRODUCT_EDIT_MODAL,\n    SERVICE_ADD_MODAL,\n    SERVICE_EDIT_MODAL\n} from \"../../AppModule\";\n\nimport \"./Product.css\";\n\nconst unitOptions = [\n    {key: 'kg', text: 'kg', value: 'kg'},\n    {key: 'gram', text: 'gram', value: 'gram'},\n    {key: 'piece', text: 'piece', value: 'piece'},\n    {key: 'litre', text: 'litre', value: 'litre'},\n    {key: 'box', text: 'box', value: 'box'},\n    {key: 'pack', text: 'pack', value: 'pack'},\n    {key: 'ml', text: 'ml', value: 'ml'},\n    {key: 'kit', text: 'kit', value: 'kit'},\n    {key: 'full_kit', text: 'full_kit', value: 'full_kit'},\n    {key: 'half_kit', text: 'half_kit', value: 'half_kit'},\n];\n\nlet productOptions = [];\n\nclass AddOrEditItems extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            type: '',\n            _id: '',\n            productName: '',\n            productUnit: {},\n            productCost: 0,\n            quantityInMl: 0,\n            totalQuantity: 0,\n            quantityInBox: 0,\n            serviceName: '',\n            costOfService: 0,\n            productUsed: [],\n            branch: {}\n        };\n\n        this.onClickSubmit = this.onClickSubmit.bind(this);\n        this.setStockUsageQuantity = this.setStockUsageQuantity.bind(this);\n        this.setStateValues = this.setStateValues.bind(this);\n        this.onCloseModal = this.onCloseModal.bind(this);\n        this.checkAllInputOkay = this.checkAllInputOkay.bind(this);\n        this.onLoadProductSelectOption = this.onLoadProductSelectOption.bind(this);\n    }\n\n    componentDidMount() {\n        const {productsData, serviceData, type} = this.props;\n\n        if (type === \"add-product\") {\n            this.setState({type: \"add-product\"});\n        } else if (type === \"add-service\") {\n            this.setState({type: \"add-service\"});\n        } else if (type === \"edit-product\") {\n            if (Object.keys(productsData).length > 0) {\n                let data = {\n                    type: \"edit-product\",\n                    _id: productsData._id,\n                    productName: productsData.name,\n                    productUnit: unitOptions.filter((uO) => uO.value === productsData.product_unit)[0],\n                    productCost: productsData.product_cost,\n                };\n                this.setState(data);\n            }\n        } else if (type === \"edit-service\") {\n            if (Object.keys(serviceData).length > 0) {\n                let data = {\n                    type: \"edit-service\",\n                    _id: serviceData._id,\n                    serviceName: serviceData.name,\n                    costOfService: String(serviceData.service_cost),\n                    productUsed: serviceData.product_used.filter((pr) => !pr.deleted).map((pr) => {\n                        const avgUsedLi = serviceData.average_stock_usage.filter((avgStk) => pr._id === avgStk._id);\n                        const avgUsedData = avgUsedLi.length > 0 ? avgUsedLi[0].quantity_used : 0;\n                        return {\n                            ...renderProductOptions([pr])[0], averageQuantityOfStockUsed: avgUsedData, fullObj: pr\n                        }\n                    })\n                };\n                this.setState(data);\n            }\n        }\n    }\n\n    onClickSubmit() {\n        const {type, _id, productName, productUnit, productCost, serviceName} = this.state;\n        this.props.updateHistoryFun(this.props.history);\n\n        let branchId = {branch_id: this.props.match.params.branchId};\n        if (type === 'add-product') {\n            this.props.postNewProduct({\n                name: productName,\n                unit: productUnit.value,\n                cost: Number(productCost),\n                ...branchId\n            });\n        } else if (type === 'edit-product') {\n            this.props.updateProduct({\n                _id,\n                name: productName,\n                unit: productUnit.value,\n                cost: Number(productCost),\n                ...branchId\n            });\n        } else if (type === 'edit-service') {\n            let dataToPost = {\n                _id,\n                name: serviceName, costOfService: this.state.costOfService.toString(), ...branchId\n            };\n            dataToPost.productUsed = this.state.productUsed.map((productUsed) => productUsed.key);\n            const addToPostData = this.state.productUsed.filter((prUsed) => prUsed.averageQuantityOfStockUsed && Number(prUsed.averageQuantityOfStockUsed) && (Number(prUsed.averageQuantityOfStockUsed) > 0));\n            if (addToPostData.length > 0) {\n                dataToPost.averageStockUsage = this.state.productUsed.map((prUsed) => {\n                    return {_id: prUsed.fullObj._id, quantity_used: Number(prUsed.averageQuantityOfStockUsed)};\n                })\n            }\n            this.props.updateService(dataToPost)\n        } else {\n            let dataToPost = {\n                name: serviceName, costOfService: this.state.costOfService.toString(), ...branchId\n            };\n            dataToPost.productUsed = this.state.productUsed.map((productUsed) => productUsed.key);\n            const addToPostData = this.state.productUsed.filter((prUsed) => prUsed.averageQuantityOfStockUsed && Number(prUsed.averageQuantityOfStockUsed) && (Number(prUsed.averageQuantityOfStockUsed) > 0));\n            if (addToPostData.length > 0) {\n                dataToPost.averageStockUsage = this.state.productUsed.map((prUsed) => {\n                    return {_id: prUsed.fullObj._id, quantity_used: Number(prUsed.averageQuantityOfStockUsed)};\n                })\n            }\n            this.props.postNewService(dataToPost)\n        }\n        this.onCloseModal();\n    }\n\n    setStateValues(data) {\n        this.setState(data)\n    }\n\n    setStockUsageQuantity(key, value) {\n        const {productUsed} = this.state;\n        productUsed[key].averageQuantityOfStockUsed = value;\n        this.setStateValues({productUsed})\n    }\n\n    checkAllInputOkay() {\n        if (this.state.type === \"add-product\") {\n            return !this.state.productName\n                || Object.keys(this.state.productUnit).length === 0\n                || !this.state.productCost.toString()\n        } else if (this.state.type === \"add-service\") {\n            return !this.state.serviceName || !this.state.costOfService.toString()\n        } else if (this.state.type === \"edit-product\") {\n            return !this.state.productName\n                || Object.keys(this.state.productUnit).length === 0\n                || !this.state.productCost.toString()\n        } else if (this.state.type === \"edit-service\") {\n            return !this.state.serviceName || !this.state.costOfService.toString()\n        }\n    }\n\n    onCloseModal() {\n        const {loading} = this.props.appModuleData.toJS();\n        if (this.state.type === \"add-product\") {\n            !loading.postNewProductLoading && !loading.postNewServiceLoading && this.props.modalToggle({\n                modal: PRODUCT_ADD_MODAL,\n                view: false\n            });\n        } else if (this.state.type === \"add-service\") {\n            !loading.postNewProductLoading && !loading.postNewServiceLoading && this.props.modalToggle({\n                modal: SERVICE_ADD_MODAL,\n                view: false\n            });\n        } else if (this.state.type === \"edit-product\") {\n            this.props.modalToggle({modal: PRODUCT_EDIT_MODAL, view: false});\n        } else if (this.state.type === \"edit-service\") {\n            this.props.modalToggle({modal: SERVICE_EDIT_MODAL, view: false});\n        }\n    }\n\n    async onLoadProductSelectOption(inputVal) {\n        const {currentBranch} = this.props.appModuleData.toJS();\n        if (inputVal) {\n            try {\n                const {body} = await api({type: \"GET\", uri: `products/${currentBranch._id}?name=${inputVal}`});\n                return renderProductOptions(body.products)\n            } catch (e) {\n                // Do nothing\n                console.log(e)\n            }\n        }\n        return [];\n    }\n\n    render() {\n        return (\n            <Modal\n                open={true}\n                center={false}\n                onClose={() => this.onCloseModal()}\n                showCloseIcon={false}\n                size=\"big\"\n                header={\n                    <div>\n                        {this.state.type.toUpperCase()}\n                    </div>\n                }\n                content={\n                    <div>\n                        {(this.state.type === 'add-product' || this.state.type === 'edit-product') &&\n                        <div>\n                            <Input name=\"Product Name\"\n                                   value={this.state.productName}\n                                   required={true}\n                                   onValChange={(data) => {\n                                       this.setState({productName: data.value});\n                                   }}\n                            />\n                            <Input name={\"Select Product Unit\"}\n                                   value={this.state.productUnit}\n                                   type=\"select\"\n                                   required={true}\n                                   options={unitOptions}\n                                   onValChange={(productUnit) => this.setState({productUnit})}\n                            />\n                            <Input name=\"Product Cost\"\n                                   value={this.state.productCost}\n                                   required={true}\n                                   type=\"number\"\n                                   onValChange={(data) => this.setState({productCost: data.value})}\n                            />\n                        </div>\n                        }\n\n                        {(this.state.type === 'add-service' || this.state.type === 'edit-service') &&\n                        <div>\n                            <Input name=\"Service Name\"\n                                   value={this.state.serviceName}\n                                   required={true}\n                                   onValChange={(data) => {\n                                       this.setState({serviceName: data.value});\n                                   }}\n                            />\n                            <Input name=\"Service Cost\"\n                                   value={this.state.costOfService}\n                                   required={true}\n                                   type=\"number\"\n                                   onValChange={(data) => this.setState({costOfService: data.value})}\n                            />\n                            <Input name={\"Select Product Used\"}\n                                   value={this.state.productUsed}\n                                   type=\"asyncSelect\"\n                                   required={true}\n                                   isMulti={true}\n                                   loadOptions={async (inputVal) => await this.onLoadProductSelectOption(inputVal)}\n                                   options={unitOptions}\n                                   onValChange={(productUsed) => {\n                                       this.setState({productUsed: productUsed ? productUsed : []})\n                                   }}\n                            />\n\n                            {this.state.productUsed.length > 0 &&\n                            <div className=\"product-avg-usage-box\">\n                                {\n                                    this.state.productUsed.map((prUdObj, key) => {\n                                        return (\n                                            <div key={key}>\n                                                <Input type=\"number\"\n                                                       name={`Average quantity of ${prUdObj.fullObj.name} used in ${prUdObj.fullObj.product_unit}`}\n                                                       value={prUdObj.averageQuantityOfStockUsed}\n                                                       onValChange={(data) => {\n                                                           this.setStockUsageQuantity(key, data.value);\n                                                       }}/>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                            }\n                        </div>\n                        }\n                    </div>\n                }\n                footer={\n                    <div>\n                        <Button name=\"Submit\" disabled={this.checkAllInputOkay()} onClick={() => this.onClickSubmit()}/>\n                        <Button name=\"Close\" onClick={() => this.onCloseModal()}/>\n                    </div>\n                }\n\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddOrEditItems));\n\nfunction renderBranchOptions(branches) {\n    let branchesRet = [];\n    branches.filter((o) => !o.deleted).forEach((branch) => {\n        branchesRet.push({\n            key: branch._id,\n            value: branch._id,\n            text: branch['name'].toUpperCase() + ' - ' + branch['location']\n        });\n    });\n    return branchesRet;\n}\n\nconst renderProductOptions = function (data) {\n    productOptions = data.length === 0 ? productOptions : [];\n    data.filter((o) => !o.deleted).forEach((pD) => {\n        // const alreadyExist = productOptions.filter((exist) => pD._id === exist.key);\n        // if (alreadyExist.length === 0) {\n        //     productOptions.push({key: pD._id, value: pD._id, text: pD.name, fullObj: pD})\n        // }\n        productOptions.push({key: pD._id, value: pD._id, text: pD.name, fullObj: pD})\n    });\n    return productOptions;\n};","import React, {Component} from \"react\";\nimport './Product.css';\n\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions, PRODUCT_EDIT_MODAL} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\nimport {FiEdit, FiPlus} from \"react-icons/fi\";\n\nimport SearchBar from \"../../components/SearchBar\";\nimport Loading from \"../../components/Loading\";\nimport Tabs from \"../../components/Tabs\";\nimport {getBranchActionPerm, getDesiredDateTimeNow} from \"../../utils/index\";\nimport ServiceLi from \"../../components/ListView/ServiceLi\";\nimport InvoiceLi from \"../../components/ListView/InvoiceLi\";\nimport Button from \"../../components/Button\";\nimport Modal from \"../../components/Modal\";\nimport Input from \"../../components/Input\";\nimport AddOrEditItems from \"./AddOrEditItems\";\nimport {RiDeleteBinLine} from \"react-icons/ri\";\nimport api from \"../../utils/api\";\n\nconst ActionOptions = [{\n    icon: \"Add\",\n    value: \"Add\"\n}, {icon: \"Remove\", value: \"Remove\"}];\n\nclass ProductDetail extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addStockModal: false,\n            addStockData: {type: ActionOptions[0], number: ''},\n            showDeleteModal: false,\n            deleteLoading: false\n        };\n\n        this.addStockModal = this.addStockModal.bind(this);\n        this.isAllStockInputOkay = this.isAllStockInputOkay.bind(this);\n        this.onSubmitDeleteProduct = this.onSubmitDeleteProduct.bind(this);\n    }\n\n    componentWillMount() {\n        let {id} = this.props.match.params;\n        this.props.getById({type: \"product\", id});\n    }\n\n    isAllStockInputOkay() {\n        return !(this.state.addStockData.number > 0)\n    }\n\n    addStockModal() {\n        const {detailData, currentBranch, myUserAccess} = this.props.appModuleData.toJS();\n        const {detail} = detailData;\n\n        let ModalActionOptions = [{\n            icon: \"Add\",\n            value: \"Add\"\n        }];\n\n        if (getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"edit\")) {\n            ModalActionOptions.push({icon: \"Remove\", value: \"Remove\"});\n        }\n        return (\n            <Modal\n                open={this.state.addStockModal}\n                center={false}\n                onClose={() => this.setState({addStockModal: false})}\n                showCloseIcon={false}\n                size=\"mini\"\n                header={\n                    <div>\n                        ADD/REMOVE STOCK\n                        | <span>(Available Stocks: {detail.available_stocks.toFixed(2)} {detail.product_unit})</span>\n                    </div>\n                }\n                content={\n                    <div>\n                        <Input name={\"Action Type\"}\n                               value={this.state.addStockData.type}\n                               type=\"select\"\n                               required={true}\n                               options={ModalActionOptions}\n                               onValChange={(data) => {\n                                   this.setState({\n                                       addStockData: {\n                                           ...this.state.addStockData,\n                                           type: data\n                                       }\n                                   })\n                               }}\n                        />\n                        <Input name={`No.of Stocks (in ${detail.product_unit})`}\n                               value={this.state.addStockData.number}\n                               required={true}\n                               type=\"number\"\n                               onValChange={(data) => {\n                                   this.setState({\n                                       addStockData: {\n                                           ...this.state.addStockData,\n                                           number: data.value\n                                       }\n                                   })\n                               }}\n                        />\n                        <Loading loading={this.state.addCustomerLoading}/>\n                    </div>\n                }\n                footer={\n                    <div>\n                        <Button name=\"Submit\" disabled={this.isAllStockInputOkay()} onClick={() => {\n                            this.props.addStockToProduct({\n                                type: this.state.addStockData.type.value.toLowerCase(),\n                                productId: detail._id,\n                                quantityToAdd: Number(this.state.addStockData.number),\n                                branch_id: detail.branch._id\n                            });\n                            this.setState({addStockModal: false, addStockData: {type: ActionOptions[0], number: 0}});\n                        }}/>\n                        <Button name=\"Close\" onClick={() => {\n                            this.setState({addStockModal: false, addStockData: {type: ActionOptions[0], number: 0}});\n                        }}/>\n                    </div>\n                }\n\n            />\n        )\n    }\n\n    async onSubmitDeleteProduct(product) {\n        this.setState({showDeleteModal: false, deleteLoading: true});\n        try {\n            const {currentBranch} = this.props.appModuleData.toJS();\n            const {body} = await api({type: \"DELETE\", uri: `product/${currentBranch._id}/${product._id}`});\n\n            if (!body || body.status === 'error') {\n                if (body.data) {\n                    this.props.addNotification({message: body.data, level: \"error\"});\n                }\n            } else {\n                let {id} = this.props.match.params;\n                this.props.getById({type: \"product\", id});\n                if (body.message) {\n                    this.props.addNotification({message: body.message, level: \"success\"});\n                }\n            }\n            this.setState({deleteLoading: false});\n        } catch (e) {\n            this.setState({deleteLoading: false});\n            this.props.addNotification({message: e.toString(), level: \"error\"});\n        }\n    }\n\n\n    render() {\n\n        const {detailData, loading, modal, currentBranch, myUserAccess} = this.props.appModuleData.toJS();\n        const {detail, servicesUsed, invoicesAdded} = detailData;\n\n        const branchId = this.props.match.params.branchId;\n\n        const panes = [\n            {\n                menuItem: \"Stock Details\",\n                render:\n                    <div style={{overflow: \"hidden\", padding: 10}}>\n                        <div className=\"Detail-View-Main-Content-Body\">\n                            <div className=\"stock-list\">\n                                {(!loading.getByIdLoading && !loading.addStockToProductLoading && !loading.postNewProductLoading && !this.state.deleteLoading) &&\n                                !detail.deleted && getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"add\") &&\n                                <div style={{alignSelf: \"center\", justifySelf: \"center\"}}>\n                                    <FiPlus size=\"40px\" style={{float: \"right\"}}\n                                            className=\"button-icon button-icon-bordered\"\n                                            onClick={() => this.setState({addStockModal: true})}/>\n                                    {this.state.addStockModal && this.addStockModal()}\n                                </div>\n                                }\n                                {detail.stocks && detail.stocks.reverse().map((stock) => {\n                                    return (\n                                        <div className={`stock-list-item ${stock.type}`}>\n                                            <div className=\"stock-list-item-id\">{stock._id}</div>\n                                            <div\n                                                className=\"stock-list-item-stock\">{`${stock.quantity.toFixed(3)} ${detail.product_unit}`}</div>\n                                            {stock.type === \"add\" &&\n                                            <div className=\"stock-list-item-type\">Added</div>}\n                                            {stock.type === \"remove\" &&\n                                            <div className=\"stock-list-item-type\">Removed</div>}\n                                            {stock.type === \"used\" &&\n                                            <div\n                                                className=\"stock-list-item-type\">Used <span\n                                                onClick={() => this.props.history.push(\"/branch/\" + branchId + \"/invoice/\" + stock.bill_ref)}>\n                                                ({stock.bill_ref})</span>\n                                            </div>}\n                                            <div className=\"stock-list-item-added-by\">\n                                                <span>By:</span> {stock.added_by}\n                                            </div>\n                                            <div className=\"stock-list-item-added-by\">\n                                                <span>Date:</span> {getDesiredDateTimeNow(stock.added_date_time)}\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </div>\n            },\n            {\n                menuItem: `Services Used (${servicesUsed && servicesUsed.length})`,\n                render:\n                    <div style={{overflow: \"hidden\", padding: 10}}>\n                        <div className=\"Detail-View-Main-Content-Body\">\n                            {servicesUsed && servicesUsed.map((service) => {\n                                return <ServiceLi service={service} history={this.props.history}\n                                                  showSubStatDetail={true} branchId={branchId}/>\n                            })}\n                        </div>\n                    </div>\n            },\n            {\n                menuItem: `Invoices (${invoicesAdded && invoicesAdded.length})`,\n                render:\n                    <div className=\"Detail-View-Main-Content-Body\">\n                        {invoicesAdded && invoicesAdded.map((invoice, key) => {\n                            return <InvoiceLi invoice={invoice}\n                                              history={this.props.history}\n                                              key={key} branchId={branchId}/>\n                        })}\n                    </div>\n            },\n        ];\n\n        return (\n            <div>\n                <div className=\"actual-content\" id=\"pageContent\">\n                    <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                        <Loading type=\"simple\" style=\"native\"\n                                 loading={loading.getByIdLoading || loading.addStockToProductLoading || loading.postNewProductLoading || this.state.deleteLoading}/>\n                        {(!loading.getByIdLoading && !loading.addStockToProductLoading && !loading.postNewProductLoading && !this.state.deleteLoading) &&\n                        !detail.deleted && getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"edit\") &&\n                        <FiEdit size=\"20px\" style={{margin: 10}} className=\"button-icon\"\n                                onClick={() => this.props.modalToggle({\n                                    modal: PRODUCT_EDIT_MODAL,\n                                    view: true\n                                })}/>\n                        }\n                        {(!loading.getByIdLoading && !loading.addStockToProductLoading && !loading.postNewProductLoading && !this.state.deleteLoading) &&\n                        !detail.deleted && getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"delete\") &&\n                        <RiDeleteBinLine size=\"20px\" style={{margin: 10}} className=\"button-icon\"\n                                         onClick={() => this.setState({showDeleteModal: true})}/>}\n                    </div>\n                    <div className=\"Detail-View\">\n                        {detailData.type === \"product\" && detail._id &&\n                        <div>\n                            <div className=\"Detail-View-Main-Content\">\n                                <div className=\"Detail-View-Main-Content-Column1\">\n                                    <div className=\"Detail-View-Main-Content-Name\">\n                                        PRODUCT / {detail.name} {detail.deleted && <span>DELETED</span>}\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-Id\">\n                                        <img className=\"image\"\n                                             src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\n                                        {detail._id}\n                                    </div>\n                                </div>\n                                <div className=\"Detail-View-Main-Content-Column2\">\n                                    <div className=\"container\">\n                                        <div className=\"information\">Product Information:</div>\n                                        <div className=\"stat\">\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Branch</div>\n                                                <div className=\"information-val\">\n                                                    {detail.branch ? detail.branch.name : \"NIL\"}\n                                                </div>\n                                            </div>\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Created On</div>\n                                                <div className=\"information-val\">\n                                                    {getDesiredDateTimeNow(detail.added_date_time)}\n                                                </div>\n                                            </div>\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Cost</div>\n                                                <div className=\"information-val\">{detail.product_cost}</div>\n                                            </div>\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Created by</div>\n                                                <div className=\"information-val\">{detail.added_by.full_name}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"container\">\n                                        <div className=\"information\">Stock Information:</div>\n                                        <div className=\"stat no-border\">\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Available Stocks</div>\n                                                <div className=\"information-val\">\n                                                    {detail.available_stocks.toFixed(2)} {detail.product_unit}\n                                                </div>\n                                            </div>\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Stock Action Count</div>\n                                                <div className=\"information-val\">\n                                                    {detail.stocks.length}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div style={{paddingTop: 10}}>\n                                <Tabs panes={panes} type=\"default\"/>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                </div>\n\n                {modal.productEditModal &&\n                <AddOrEditItems type=\"edit-product\" {...this.props} productsData={detail}/>}\n\n                {\n                    this.state.showDeleteModal &&\n                    <Modal\n                        open={this.state.showDeleteModal}\n                        center={false}\n                        onClose={() => this.setState({showDeleteModal: false})}\n                        showCloseIcon={false}\n                        size=\"mini\"\n                        header={\n                            <div>\n                                DELETE PRODUCT: <span>{detail.name}</span>\n                            </div>\n                        }\n                        content={\n                            <div style={{padding: 10}}>\n                                Are you sure you want to delete this product?\n                            </div>\n                        }\n                        footer={\n                            <div>\n                                <Button name=\"Delete\"\n                                        onClick={async () => {\n                                            await this.onSubmitDeleteProduct(detail);\n                                        }}/>\n                                <Button name=\"Close\" onClick={() => this.setState({showDeleteModal: false})}/>\n                            </div>\n                        }\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProductDetail));","import React, {Component} from \"react\";\nimport './Product.css';\n\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions, PRODUCT_EDIT_MODAL, SERVICE_EDIT_MODAL} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\nimport {FiEdit, FiPlus} from \"react-icons/fi\";\n\nimport SearchBar from \"../../components/SearchBar\";\nimport Loading from \"../../components/Loading\";\nimport Tabs from \"../../components/Tabs\";\nimport {getBranchActionPerm, getDesiredDateTimeNow} from \"../../utils/index\";\nimport ProductLi from \"../../components/ListView/ProductLi\";\nimport InvoiceLi from \"../../components/ListView/InvoiceLi\";\nimport AddOrEditItems from \"./AddOrEditItems\";\nimport {RiDeleteBinLine} from \"react-icons/ri\";\nimport Modal from \"../../components/Modal\";\nimport Button from \"../../components/Button\";\nimport api from \"../../utils/api\";\n\nclass ServiceDetail extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDeleteModal: false,\n            deleteLoading: false\n        };\n\n        this.onSubmitDeleteService = this.onSubmitDeleteService.bind(this);\n    }\n\n    componentWillMount() {\n        let {id} = this.props.match.params;\n        this.props.getById({type: \"service\", id});\n    }\n\n    async onSubmitDeleteService(service) {\n        this.setState({showDeleteModal: false, deleteLoading: true});\n        try {\n            const {currentBranch} = this.props.appModuleData.toJS();\n            const {body} = await api({type: \"DELETE\", uri: `service/${currentBranch._id}/${service._id}`});\n\n            if (!body || body.status === 'error') {\n                if (body.data) {\n                    this.props.addNotification({message: body.data, level: \"error\"});\n                }\n            } else {\n                let {id} = this.props.match.params;\n                this.props.getById({type: \"service\", id});\n                if (body.message) {\n                    this.props.addNotification({message: body.message, level: \"success\"});\n                }\n            }\n            this.setState({deleteLoading: false});\n        } catch (e) {\n            this.setState({deleteLoading: false});\n            this.props.addNotification({message: e.toString(), level: \"error\"});\n        }\n    }\n\n    render() {\n\n        const {detailData, modal, loading, myUserAccess, currentBranch} = this.props.appModuleData.toJS();\n        const {detail, invoicesAdded} = detailData;\n\n        const branchId = this.props.match.params.branchId;\n\n        const panes = [\n            {\n                menuItem: `Products Used (${detail.product_used && detail.product_used.length})`,\n                render:\n                    <div style={{overflow: \"hidden\", padding: 10}}>\n                        <div className=\"Detail-View-Main-Content-Body\">\n                            {detail.product_used && detail.product_used.map((product, key) => {\n                                return <ProductLi product={product}\n                                                  showAvgUsage={detail.average_stock_usage.filter((asu) => asu._id === product._id)[0]\n                                                      ? detail.average_stock_usage.filter((asu) => asu._id === product._id)[0].quantity_used\n                                                      : \"0\"}\n                                                  history={this.props.history}\n                                                  key={key} branchId={branchId}/>\n                            })}\n                        </div>\n                    </div>\n            },\n            {\n                menuItem: `Invoices (${invoicesAdded && invoicesAdded.length})`,\n                render:\n                    <div className=\"Detail-View-Main-Content-Body\">\n                        {invoicesAdded && invoicesAdded.map((invoice, key) => {\n                            return <InvoiceLi invoice={invoice}\n                                              history={this.props.history}\n                                              key={key} branchId={branchId}/>\n                        })}\n                    </div>\n            },\n        ];\n\n        return (\n            <div>\n                <div className=\"actual-content\" id=\"pageContent\">\n                    <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                        <Loading type=\"simple\" style=\"native\"\n                                 loading={loading.getByIdLoading || loading.updateServiceLoading}/>\n                        {((!loading.getByIdLoading && !loading.updateServiceLoading && !this.state.deleteLoading) &&\n                            !detail.deleted && getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"edit\")) &&\n                        <FiEdit size=\"20px\" style={{margin: 10}} className=\"button-icon\"\n                                onClick={() => this.props.modalToggle({modal: SERVICE_EDIT_MODAL, view: true})}/>\n                        }\n                        {(!loading.getByIdLoading && !loading.updateServiceLoading && !this.state.deleteLoading) &&\n                        !detail.deleted && getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"items\", \"delete\") &&\n                        <RiDeleteBinLine size=\"20px\" style={{margin: 10}} className=\"button-icon\"\n                                         onClick={() => this.setState({showDeleteModal: true})}/>}\n                    </div>\n                    <div className=\"Detail-View\">\n                        {detailData.type === \"service\" && detail._id &&\n                        <div>\n                            <div className=\"Detail-View-Main-Content\">\n                                <div className=\"Detail-View-Main-Content-Column1\">\n                                    <div className=\"Detail-View-Main-Content-Name\">\n                                        {detail.name} {detail.deleted && <span>DELETED</span>}\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-Id\">\n                                        <img className=\"image\"\n                                             src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\n                                        {detail._id}\n                                    </div>\n                                </div>\n                                <div className=\"Detail-View-Main-Content-Column2\">\n                                    <div className=\"container\">\n                                        <div className=\"information\">Service Information:</div>\n                                        <div className=\"stat\">\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Branch</div>\n                                                <div className=\"information-val\">\n                                                    {detail.branch ? detail.branch.name : \"NIL\"}\n                                                </div>\n                                            </div>\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Created On</div>\n                                                <div className=\"information-val\">\n                                                    {getDesiredDateTimeNow(detail.added_date_time)}\n                                                </div>\n                                            </div>\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Cost</div>\n                                                <div className=\"information-val\">{detail.service_cost}</div>\n                                            </div>\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">Created by</div>\n                                                <div className=\"information-val\">{detail.added_by.full_name}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"container\">\n                                        <div className=\"information\">Product Information:</div>\n                                        <div className=\"stat no-border\">\n                                            <div className=\"Detail-View-Main-Content-split\">\n                                                <div className=\"information-heading\">No of Products Used</div>\n                                                <div className=\"information-val\">\n                                                    {detail.product_used.length}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div style={{paddingTop: 10}}>\n                                <Tabs panes={panes} type=\"default\"/>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                </div>\n\n                {modal.serviceEditModal &&\n                <AddOrEditItems type=\"edit-service\" {...this.props} serviceData={detail}/>}\n\n                {\n                    this.state.showDeleteModal &&\n                    <Modal\n                        open={this.state.showDeleteModal}\n                        center={false}\n                        onClose={() => this.setState({showDeleteModal: false})}\n                        showCloseIcon={false}\n                        size=\"mini\"\n                        header={\n                            <div>\n                                DELETE Service: <span>{detail.name}</span>\n                            </div>\n                        }\n                        content={\n                            <div style={{padding: 10}}>\n                                Are you sure you want to delete this service?\n                            </div>\n                        }\n                        footer={\n                            <div>\n                                <Button name=\"Delete\"\n                                        onClick={async () => {\n                                            await this.onSubmitDeleteService(detail);\n                                        }}/>\n                                <Button name=\"Close\" onClick={() => this.setState({showDeleteModal: false})}/>\n                            </div>\n                        }\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ServiceDetail));","import React, {Component} from \"react\";\nimport './invoice.css';\n\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions, CUSTOMER_ADD_MODAL} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\n\nimport SearchBar from \"../../components/SearchBar\";\nimport Paging from \"../../components/Pagination\";\nimport InvoiceLi from \"../../components/ListView/InvoiceLi\";\nimport Button from \"../../components/Button\";\nimport {getBranchActionPerm} from \"../../utils/index\";\nimport {IoMdAdd} from \"react-icons/io\";\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeTab: 1\n        };\n    }\n\n    componentWillMount() {\n        const urlParams = new URLSearchParams(this.props.location.search);\n        this.props.getAllBills(urlParams.get(\"page\") ? urlParams.get(\"page\") : 0);\n    }\n\n\n    render() {\n\n        const {allBillData, updateHistoryFn, loading, myUserAccess, currentBranch} = this.props.appModuleData.toJS();\n        const branchId = this.props.match.params.branchId;\n\n        return (\n            <div className=\"actual-content\">\n                {getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"bill\", \"add\") &&\n                <div style={{display: \"flex\", borderBottom: \"1px solid #eaeaea\"}}>\n                    <IoMdAdd size=\"24px\" style={{margin: 10}} className=\"button-icon\" alt={\"Add Customer\"}\n                             onClick={() => this.props.history.push(`/branch/${branchId}/new-invoice`)}/>\n                </div>}\n                {allBillData.invoices.map((data, key) => {\n                    return (\n                        <InvoiceLi invoice={data} history={updateHistoryFn} key={key}\n                                   branchId={this.props.match.params.branchId}/>\n                    )\n                })}\n                {allBillData.invoices.length === 0 &&\n                <div style={{color: \"#8c8c8c\", padding: 10}} align=\"center\">\n                    Nothing to show\n                </div>\n                }\n                <div className=\"float-right\">\n                    <Paging\n                        loading={loading.getBillLoading}\n                        currentPage={allBillData.count.page}\n                        totalPages={allBillData.count.totalPages}\n                        shownContent={allBillData.invoices.length}\n                        totalContent={allBillData.count.total}\n                        nextPage={(pg) => this.props.getAllBills(pg)}\n                        prevPage={(pg) => this.props.getAllBills(pg)}\n                        history={this.props.history}\n                        location={this.props.location}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));","import React, {Component} from \"react\";\nimport './invoice.css';\n\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\n\nimport SearchBar from \"../../components/SearchBar\";\nimport Loading from \"../../components/Loading\";\nimport Tabs from \"../../components/Tabs\";\nimport Button from \"../../components/Button\";\nimport Modal from \"../../components/Modal\";\nimport Input from \"../../components/Input\";\nimport {getBranchActionPerm, getDesiredDateTimeNow} from \"../../utils/index\";\nimport ServiceLi from \"../../components/ListView/ServiceLi\";\nimport ProductLi from \"../../components/ListView/ProductLi\";\nimport bec from \"../../utils/bec\";\n\nclass InvoiceDetail extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            balancePaidModal: false,\n            completeBillLoading: false,\n            paidby: \"\",\n            amountPaid: null,\n            nowPaying: 0\n        };\n\n        this.completeBill = this.completeBill.bind(this);\n        this.setCompState = this.setCompState.bind(this);\n    }\n\n    componentDidMount() {\n        let {id} = this.props.match.params;\n        this.props.getById({type: \"invoice\", id});\n\n    }\n\n    setCompState(data) {\n        this.setState({...data});\n    }\n\n    async completeBill(billData, action) {\n        const {getById} = this.props;\n        const {setCompState} = this;\n        const {currentBranch} = this.props.appModuleData.toJS();\n        setCompState({completeBillLoading: true, balancePaidModal: false});\n\n        try {\n            const {body} = await bec({\n                type: 'PUT',\n                uri: `invoice/${currentBranch._id}/${billData._id}/${action}`,\n                obj: {\n                    balance_paid: this.state.nowPaying\n                }\n            })\n\n            if (!body || body.status === 'error') {\n                // window.alert(\"Error while updating password: \" + body.message);\n            } else {\n                getById({type: \"invoice\", id: billData._id});\n            }\n        } catch (e) {\n\n        }\n\n        setCompState({completeBillLoading: false});\n    }\n\n    render() {\n\n        const {detailData, myUserAccess, loading, currentBranch} = this.props.appModuleData.toJS();\n        const {detail} = detailData;\n\n        const branchId = this.props.match.params.branchId;\n\n        const panes = [\n            {\n                menuItem: `Products (${detail.products && detail.products.length})`,\n                render:\n                    <div style={{overflow: \"hidden\", padding: 10}}>\n                        <div className=\"Detail-View-Main-Content-Body\">\n                            {detail.products && detail.products.map((product, key) => {\n                                return <ProductLi key={key} product={product} history={this.props.history}\n                                                  isInvoiceView={true} branchId={branchId}/>\n                            })}\n                        </div>\n                    </div>\n            },\n            {\n                menuItem: `Services (${detail.services && detail.services.length})`,\n                render:\n                    <div style={{overflow: \"hidden\", padding: 10}}>\n                        <div className=\"Detail-View-Main-Content-Body\">\n                            {detail.services && detail.services.map((service, key) => {\n                                return <ServiceLi key={key} service={service} history={this.props.history}\n                                                  isInvoiceView={true}\n                                                  showSubStatDetail={true} branchId={branchId}/>\n                            })}\n                        </div>\n                    </div>\n            }\n        ];\n\n        return (\n            <div className=\"actual-content\">\n                <div className=\"page-header-add-btn\">\n                    <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                        <Loading type=\"simple\" style=\"native\"\n                                 loading={loading.getByIdLoading || this.state.completeBillLoading}/>\n                        {(!loading.getByIdLoading && !this.state.completeBillLoading) &&\n                        getBranchActionPerm(currentBranch, myUserAccess.emp_id, \"bill\", \"edit\") && detail.state === \"pending\" &&\n                        <Button name=\"Balance Paid\"\n                                onClick={() => this.setState({\n                                    balancePaidModal: !this.state.balancePaidModal,\n                                    paidby: myUserAccess.emp_id\n                                })}/>\n                        }\n                    </div>\n\n                    {this.state.balancePaidModal &&\n                    <Modal\n                        open={true}\n                        center={false}\n                        onClose={() => this.setState({balancePaidModal: false})}\n                        showCloseIcon={false}\n                        size=\"big\"\n                        header={<div>INVOICE - {detail._id}</div>}\n                        content={\n                            <div>\n                                <Input type=\"text\"\n                                       name=\"Paid by\"\n                                       value={this.state.paidby}\n                                       onValChange={(data) => this.setState({paidby: data.value})}/>\n                                <Input type=\"text\"\n                                       name=\"Total Invoice Amount\"\n                                       value={detail.actual_bill_amount}\n                                       disabled={true}\n                                       onValChange={(data) => {\n                                       }}/>\n                                <Input type=\"text\"\n                                       name=\"Balance Amount\"\n                                       value={detail.actual_bill_amount - detail.paid_amount}\n                                       disabled={true}\n                                       onValChange={(data) => {\n                                       }}/>\n                                <Input type=\"number\"\n                                       name=\"Amount Paid\"\n                                       disabled={true}\n                                       value={detail.paid_amount}\n                                       onValChange={(data) => {\n                                       }}/>\n                                <Input type=\"number\"\n                                       name=\"Now paying\"\n                                       value={this.state.nowPaying}\n                                       onValChange={(data) => this.setState({nowPaying: data.value})}/>\n                            </div>\n                        }\n                        footer={\n                            <div>\n                                <Button name=\"Close\" onClick={() => this.setState({balancePaidModal: false})}/>\n                                <Button name=\"Submit\" onClick={() => this.completeBill(detail, \"paid\")}/>\n                            </div>\n                        }\n\n                    />}\n                </div>\n                <div className=\"Detail-View\">\n                    {detailData.type === \"invoice\" && detail._id &&\n                    <div>\n                        <div className=\"Detail-View-Main-Content\">\n                            <div className=\"Detail-View-Main-Content-Column1\">\n                                <div\n                                    className=\"Detail-View-Main-Content-Name Detail-View-Main-Content-Name-underline\"\n                                    onClick={() => this.props.history.push(`/branch/${branchId}/customer/${detail.customer._id ? detail.customer._id : detail.customer}`)}>\n                                    {detail.customer.full_name || detail.customer} {detail.deleted &&\n                                <span>DELETED</span>}\n                                </div>\n                                <div className=\"Detail-View-Main-Content-Id\">\n                                    <img className=\"image\"\n                                         src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\n                                    {detail._id}\n                                </div>\n                            </div>\n                            <div className=\"Detail-View-Main-Content-Column2\">\n                                <div className=\"container\">\n                                    <div className=\"information\">Invoice Information:</div>\n                                    <div className=\"stat\">\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Branch</div>\n                                            <div className=\"information-val\">\n                                                {detail.branch ? detail.branch.name : \"NIL\"}\n                                            </div>\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Created On</div>\n                                            <div className=\"information-val\">\n                                                {getDesiredDateTimeNow(detail.added_date_time)}\n                                            </div>\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Created by</div>\n                                            <div className=\"information-val\">{detail.added_by.full_name}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"container\">\n                                    <div className=\"information\">Customer Information:</div>\n                                    <div className=\"stat\">\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Name</div>\n                                            <div className=\"information-val\">\n                                                {detail.customer.full_name}\n                                            </div>\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Mobile Number</div>\n                                            <div className=\"information-val\">\n                                                {detail.customer.mobile_number}\n                                            </div>\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Age</div>\n                                            <div className=\"information-val\">\n                                                {detail.customer.age}\n                                            </div>\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Address</div>\n                                            <div className=\"information-val\">\n                                                {detail.customer.address}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"container\">\n                                    <div className=\"information\">Payment Information:</div>\n                                    <div className=\"stat no-border\">\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Final Bill Amount</div>\n                                            <div className=\"information-val\">{detail.final_bill_amount}</div>\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Actual Bill Amount</div>\n                                            <div className=\"information-val\">{detail.actual_bill_amount}</div>\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Discount Amount</div>\n                                            <div className=\"information-val\">{detail.discount_amount}</div>\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Paid Amount</div>\n                                            <div className=\"information-val\">{detail.paid_amount}</div>\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-split\">\n                                            <div className=\"information-heading\">Balance Amount</div>\n                                            <div className=\"information-val\">\n                                                {detail.final_bill_amount - detail.paid_amount}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{paddingTop: 10}}>\n                            <Tabs panes={panes} type=\"default\"/>\n                        </div>\n                    </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(InvoiceDetail));","import React, {Component} from \"react\";\nimport './invoice.css';\n\nimport {withRouter} from \"react-router-dom\";\nimport {appModuleActions as actions} from \"../../AppModule\";\nimport {connect} from \"react-redux\";\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\nimport {FormClose as GrommetFormClose, Edit as GrommetEdit} from 'grommet-icons';\n\nimport api from \"../../utils/api\";\nimport SegmentExpandable from \"../../components/SegmentExpandable\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport Modal from \"../../components/Modal\"\nimport {getDesiredDateTimeNow, getLocalStorage} from \"../../utils/index\";\nimport Loading from \"../../components/Loading\";\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            branchData: {},\n            customerData: {},\n            customerQueryList: [],\n            items: [],\n            discountAmount: 0,\n            srcTag: {product: true, service: true},\n            showAddRow: true,\n            editProductUsed: false,\n            editProductUsedIndex: null,\n            createInvoice: false,\n            billedby: \"\",\n            paidby: \"\",\n            amountPaid: null\n        };\n\n        this.onLoadCustomers = this.onLoadCustomers.bind(this);\n        this.onLoadProductOrService = this.onLoadProductOrService.bind(this);\n        this.checkAllInputOkay = this.checkAllInputOkay.bind(this);\n        this.onRemoveItem = this.onRemoveItem.bind(this);\n        this.onClickSubmit = this.onClickSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        const activeBr = this.props.match.params.branchId;\n        const {myUserAccess} = this.props.appModuleData.toJS();\n        const activeBranchDetail = myUserAccess.access_branches.filter((br) => br._id === Number(activeBr));\n        let toUpdate = {};\n        if (activeBranchDetail.length > 0) {\n            toUpdate.branchData = {\n                text: activeBranchDetail[0].name.toUpperCase(),\n                value: activeBranchDetail[0]._id\n            };\n        }\n\n        if (myUserAccess && myUserAccess.full_name) {\n            toUpdate.billedby = myUserAccess.full_name\n        }\n\n        this.setState(toUpdate);\n    }\n\n    async onLoadCustomers(inputVal) {\n        if (inputVal) {\n            try {\n                const {body} = await api({type: \"GET\", uri: `customers?full_name=${inputVal}`});\n                return renderCustomerOptions(body.customers);\n            } catch (e) {\n                // Do nothing\n                return [];\n            }\n        }\n    }\n\n    async onLoadProductOrService(inputVal) {\n        if (inputVal) {\n            const {currentBranch} = this.props.appModuleData.toJS();\n            try {\n                const qry = [];\n                if (this.state.srcTag.product) {\n                    qry.push(`product=${inputVal}`);\n                }\n                if (this.state.srcTag.service) {\n                    qry.push(`service=${inputVal}`);\n                }\n                const {body} = await api({type: \"GET\", uri: `query/${currentBranch._id}?${qry.join('&')}`});\n                return renderProductOrServiceOptions(body)\n            } catch (e) {\n                // Do nothing\n                return [];\n            }\n        }\n    }\n\n    checkAllInputOkay() {\n        return Object.keys(this.state.customerData).length === 0 || this.state.items.length === 0;\n    }\n\n    onRemoveItem(itemKey) {\n        const items = this.state.items;\n        items.splice(itemKey, 1);\n        this.setState({items});\n    }\n\n    onClickSubmit() {\n        const {myUserAccess} = this.props.appModuleData.toJS();\n        if (!this.state.paidby) {\n            return;\n        }\n        this.props.updateHistoryFun(this.props.history);\n        const services = this.state.items.filter((itm) => itm.type === \"service\").map((itm) => {\n            return {...itm.fullObj}\n        });\n        const products = this.state.items.filter((itm) => itm.type === \"product\").map((itm) => {\n            return {...itm.fullObj, quantity_used: itm.quantity_used.value}\n        });\n        this.props.postNewBill({\n            customer: this.state.customerData.fullObj,\n            services,\n            products,\n            paid_amount: Number(this.state.amountPaid ? this.state.amountPaid : 0),\n            discount_amount: Number(this.state.discountAmount),\n            paid_by: this.state.paidby,\n            billed_by: myUserAccess.emp_id,\n            branch_id: this.state.branchData.branch_id,\n            totalBillAmount: totalBillAmountFn(this.state, true),\n        });\n    }\n\n    render() {\n        const {myUserAccess, loading} = this.props.appModuleData.toJS();\n        const branchId = this.props.match.params.branchId;\n\n        return (\n            <div className=\"actual-content\" id=\"pageContent\">\n                <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                    <Button\n                        name=\"Create Invoice\"\n                        disabled={this.checkAllInputOkay()}\n                        onClick={() => this.setState({createInvoice: !this.state.createInvoice})}/>\n                </div>\n                <div className=\"invoice-detail\">\n                    <div className=\"invoice-detail-customer\">\n                        <div className=\"content-invoice-customer-grid\">\n                            <div className=\"content-invoice-customer-label\">\n                                Bill From\n                            </div>\n                            <div className=\"content-invoice-customer-content\">\n                                <Select\n                                    axis=\"y\"\n                                    closeMenuOnSelect={true}\n                                    value={this.state.branchData}\n                                    onChange={(branchData) => this.setState({branchData})}\n                                    options={renderBranchOptions(myUserAccess.access_branches)}\n                                    getOptionLabel={option => option.text ? option.text : option.value}\n                                    getOptionValue={option => option.value}\n                                    isDisabled={true}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"content-invoice-customer-grid\">\n                            <div className=\"content-invoice-customer-label\">\n                                Bill To\n                            </div>\n                            <div className=\"content-invoice-customer-content\">\n                                <div>\n                                    <AsyncSelect\n                                        closeMenuOnSelect={true}\n                                        defaultOptions\n                                        loadOptions={async (val) => this.onLoadCustomers(val)}\n                                        value={this.state.customerData}\n                                        onChange={(customerData) => this.setState({\n                                            customerData,\n                                            paidby: customerData.text\n                                        })}\n                                        getOptionLabel={option => option.text ? option.text : option.value}\n                                        getOptionValue={option => option.value}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"invoice-detail-date\">\n                        <div className=\"content-invoice-customer-split content-invoice-customer-label\">\n                            Date\n                        </div>\n                        <div className=\"content-invoice-customer-split\">\n                            <div\n                                className=\"content-invoice-customer-content-text content-invoice-customer-content-text-box\">\n                                {getDesiredDateTimeNow(new Date())}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"content-invoice-total\">\n                    <div>\n                        <div className=\"total-name\">Total</div>\n                        <div className=\"amount\">Rs: {totalBillAmountFn(this.state, true)}</div>\n                    </div>\n                    <div>\n                        <div className=\"total-name\">Discount</div>\n                        <div className=\"amount\"> - Rs: {Number(this.state.discountAmount).toFixed(2)}</div>\n                        <div style={{paddingTop: 10, paddingBottom: 10}}>\n                            <SegmentExpandable header=\"Add Discount\">\n                                <Input type=\"number\"\n                                       name=\"Discount Amount\"\n                                       value={this.state.discountAmount}\n                                       onValChange={(data) => this.setState({discountAmount: data.value})}/>\n                            </SegmentExpandable>\n                        </div>\n                    </div>\n                    <div className=\"border-top\">\n                        <div className=\"total-name\">Bill Amount</div>\n                        <div className=\"amount\">Rs: {totalBillAmountFn(this.state)}</div>\n                    </div>\n                </div>\n                {this.state.showAddRow &&\n                <div className=\"content-invoice-search-box\">\n                    <div className=\"invoice-src-type invoice-src-type-drop\">\n                        <AsyncSelect\n                            closeMenuOnSelect={true}\n                            defaultOptions\n                            loadOptions={async (val) => this.onLoadProductOrService(val)}\n                            value={{}}\n                            onChange={(productOrService) => {\n                                const items = this.state.items;\n                                productOrService.quantity_used = {key: 1, value: 1};\n                                items.push(productOrService);\n                                this.setState({items})\n                            }}\n                            menuPlacement=\"top\"\n                            menuContainerStyle={{top: 'auto', bottom: '100%'}}\n                            placeholder=\"Search Product/Service...\"\n                            getOptionLabel={option => option.text ? option.text : option.value}\n                            getOptionValue={option => option.value}\n                        />\n                    </div>\n                    <div style={{paddingTop: 10}}>\n                                <span className=\"invoice-src-type-checkbox\">\n                                    <Checkbox\n                                        checked={this.state.srcTag.product}\n                                        onChange={() => this.setState({\n                                            srcTag: {\n                                                ...this.state.srcTag,\n                                                product: !this.state.srcTag.product\n                                            }\n                                        })}\n                                    />\n                                Product\n                            </span>\n                        <span className=\"invoice-src-type-checkbox\">\n                                    <Checkbox\n                                        checked={this.state.srcTag.service}\n                                        onChange={() => this.setState({\n                                            srcTag: {\n                                                ...this.state.srcTag,\n                                                service: !this.state.srcTag.service\n                                            }\n                                        })}\n                                    />\n                                Service\n                            </span>\n                    </div>\n                </div>\n                }\n                <div style={{marginBottom: 40}}>\n                    <div className=\"content-invoice-items\">\n                        <div className=\"content-invoice-item content-invoice-item-header\">\n                            <div className=\"ci-item-name justify-center\">Name</div>\n                            <div className=\"ci-item-quantity justify-center\">Quantity</div>\n                            <div className=\"ci-item-price justify-center\">Price (Rs)</div>\n                            <div className=\"ci-item-unit justify-center\">Unit</div>\n                            <div className=\"ci-item-total justify-center\">Total</div>\n                        </div>\n                        {this.state.items.map((item, itemKey) => {\n                            return (\n                                <div className=\"content-invoice-item\" key={itemKey}>\n                                    {/*<td className=\"ci-td\" style={{overflowY: \"auto\"}}>{item.key}</td>*/}\n                                    <div className=\"ci-item-name\">\n                                        <div\n                                            onClick={() => this.props.history.push(`/branch/${branchId}/${item.type}/${item.key}`)}>\n                                            <span>{item.heading}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"ci-item-quantity\">\n                                        {item.type === \"product\" &&\n                                        <Select\n                                            menuPlacement=\"top\"\n                                            closeMenuOnSelect={true}\n                                            value={item.quantity_used}\n                                            onChange={(qty) => {\n                                                const items = this.state.items;\n                                                items[itemKey].quantity_used = qty;\n                                                this.setState({items})\n                                            }}\n                                            options={renderNumberOptions(15)}\n                                            getOptionLabel={option => option.text ? option.text : option.value}\n                                            getOptionValue={option => option.value}\n                                        />\n                                        }\n                                        {/*{item.type === \"service\" && item.quantity_used.value}*/}\n                                        {item.type === \"service\" &&\n                                        <SegmentExpandable\n                                            header={\n                                                item.fullObj.product_used.map((prUsd, key) => {\n                                                    const avgUsd = item.fullObj.average_stock_usage\n                                                        .filter((p) => p._id === prUsd._id);\n                                                    return `${avgUsd[0] ? avgUsd[0].quantity_used : 0} ${prUsd.product_unit} of ${prUsd.name}`\n                                                }).join(\", \")\n                                            }\n                                            action={\n                                                <span className=\"content-invoice-table-avg-product-used-action\"\n                                                      style={{float: \"right\"}}\n                                                      onClick={() => this.setState({\n                                                          editProductUsed: true,\n                                                          editProductUsedIndex: itemKey\n                                                      })}>\n                                                                    <GrommetEdit size='small'/>\n                                                                </span>\n                                            }\n                                            expandAtStart={false}>\n                                            {item.fullObj.product_used.map((prUsd, key) => {\n                                                const avgUsd = item.fullObj.average_stock_usage\n                                                    .filter((p) => p._id === prUsd._id);\n                                                return (\n                                                    <div key={key}\n                                                         className=\"content-invoice-table-avg-product-used\"\n                                                         align=\"center\">\n                                                        {`${avgUsd[0] ? avgUsd[0].quantity_used : 0} ${prUsd.product_unit}`}\n                                                        <span style={{fontSize: 10}}>\n                                                                            {` of `}\n                                                                        </span>\n                                                        <span style={{fontWeight: \"bold\", fontStyle: \"italic\"}}>\n                                                                            {`${prUsd.name}`}\n                                                                        </span>\n                                                    </div>\n                                                )\n                                            })}\n                                        </SegmentExpandable>}\n                                    </div>\n                                    <div className=\"ci-item-price\">\n                                        {item.type === \"product\" && item.fullObj.product_cost.toFixed(2)}\n                                        {item.type === \"service\" && item.fullObj.service_cost.toFixed(2)}\n                                    </div>\n                                    <div className=\"ci-item-unit\">\n                                        {item.type === \"product\" && item.fullObj.product_unit}\n                                        {item.type === \"service\" && \"nil\"}\n                                    </div>\n                                    <div className=\"ci-item-total\">\n                                        Rs:\n                                        <span className=\"item-amount\">\n                                                        {item.type === \"product\" && (Number(item.quantity_used.key) * item.fullObj.product_cost).toFixed(2)}\n                                            {item.type === \"service\" && (Number(item.quantity_used.key) * item.fullObj.service_cost).toFixed(2)}\n                                                    </span>\n                                    </div>\n                                    <div className=\"ci-item-cancel\">\n                                        <GrommetFormClose onClick={() => this.onRemoveItem(itemKey)}/>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n\n                {this.state.editProductUsed &&\n                <Modal\n                    open={true}\n                    center={false}\n                    onClose={() => this.setState({editProductUsed: false})}\n                    showCloseIcon={false}\n                    size=\"big\"\n                    header={\n                        <div>\n                            Edit Product used quantity - {this.state.editProductUsedIndex !== null &&\n                        this.state.items[this.state.editProductUsedIndex] &&\n                        this.state.items[this.state.editProductUsedIndex].fullObj &&\n                        this.state.items[this.state.editProductUsedIndex].fullObj.name}\n                        </div>\n                    }\n                    content={\n                        <div>\n                            {this.state.editProductUsedIndex !== null &&\n                            this.state.items[this.state.editProductUsedIndex] &&\n                            this.state.items[this.state.editProductUsedIndex].fullObj &&\n                            this.state.items[this.state.editProductUsedIndex].fullObj.product_used.length > 0 &&\n                            <div className=\"product-avg-usage-box\">\n                                {\n                                    this.state.items[this.state.editProductUsedIndex].fullObj.product_used.map((prUdObj, key) => {\n                                        const avgUsd = this.state.items[this.state.editProductUsedIndex].fullObj.average_stock_usage.filter((p) => p._id === prUdObj._id);\n                                        return (\n                                            <div key={key}>\n                                                <Input type=\"number\"\n                                                       name={`Average quantity of ${prUdObj.name} used in ${prUdObj.product_unit} (${prUdObj.available_stocks} ${prUdObj.product_unit} available)`}\n                                                       value={avgUsd[0] ? avgUsd[0].quantity_used : 0}\n                                                       onValChange={(data) => {\n                                                           const items = this.state.items;\n                                                           items[this.state.editProductUsedIndex].fullObj.average_stock_usage = this.state.items[this.state.editProductUsedIndex].fullObj.average_stock_usage.map((avgStckUsd) => {\n                                                               if ((prUdObj._id === avgStckUsd._id) && (Number(data.value) <= prUdObj.available_stocks)) {\n                                                                   avgStckUsd.quantity_used = Number(data.value);\n                                                               }\n                                                               return avgStckUsd;\n                                                           });\n                                                           this.setState({items})\n                                                       }}/>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                            }\n                        </div>\n                    }\n                    footer={\n                        <div>\n                            <Button name=\"Close\" onClick={() => this.setState({editProductUsed: false})}/>\n                        </div>\n                    }\n\n                />}\n\n                {this.state.createInvoice &&\n                <Modal\n                    open={true}\n                    center={false}\n                    onClose={() => this.setState({editProductUsed: false})}\n                    showCloseIcon={false}\n                    size=\"big\"\n                    header={<div>INVOICE - {this.state.customerData.text}</div>}\n                    content={\n                        <div>\n                            {/* <Input type=\"text\"\n                                        name=\"Billed by\"\n                                        value={this.state.billedby}\n                                        onValChange={(data) => this.setState({ billedby: data.value })} /> */}\n                            <Input type=\"text\"\n                                   name=\"Paid by\"\n                                   disabled={true}\n                                   value={this.state.paidby}\n                                   onValChange={(data) => this.setState({paidby: data.value})}/>\n                            <Input type=\"text\"\n                                   name=\"Total Invoice Amount\"\n                                   value={totalBillAmountFn(this.state)}\n                                   disabled={true}\n                                   onValChange={(data) => {\n                                   }}/>\n                            <Input type=\"number\"\n                                   name=\"Amount Paid\"\n                                   value={this.state.amountPaid}\n                                   onValChange={(data) => this.setState({amountPaid: data.value})}/>\n                            <Loading loading={loading.postNewBillLoading}/>\n                        </div>\n                    }\n                    footer={\n                        <div>\n                            <Button name=\"Close\" onClick={() => this.setState({createInvoice: false})}/>\n                            <Button name=\"Submit\" disabled={!this.state.amountPaid}\n                                    onClick={() => this.onClickSubmit()}/>\n                        </div>\n                    }\n\n                />}\n\n                {/*<div className=\"content-invoice-add-product-service\"*/}\n                {/*onClick={() => this.setState({showAddRow: !this.state.showAddRow})}>*/}\n                {/*<span><FormAdd/></span> <span className=\"text\">Add Product/Service</span>*/}\n                {/*</div>*/}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));\n\nconst totalBillAmountFn = function (state, actual = false) {\n    let bill = 0;\n    state.items.forEach((itm) => {\n        if (itm.type === \"product\") {\n            bill += itm.quantity_used.value * itm.fullObj.product_cost;\n        } else if (itm.type === \"service\") {\n            bill += itm.quantity_used.value * itm.fullObj.service_cost;\n        }\n    });\n\n    return (actual ? bill : bill - state.discountAmount).toFixed(2);\n};\n\nconst renderCustomerOptions = function (data) {\n    let customerOptions = [];\n    data.filter((o) => !o.deleted).forEach((pD) => {\n        customerOptions.push({key: pD._id, value: pD._id, text: `${pD.full_name} (${pD.mobile_number})`, fullObj: pD})\n    });\n    return customerOptions;\n};\n\nconst renderBranchOptions = function (data) {\n    return data.filter((o) => !o.deleted).map((br) => {\n        return {text: br.name.toUpperCase(), value: br._id}\n    });\n};\n\nconst renderProductOrServiceOptions = function (data) {\n    let options = [];\n    data.products.filter((o) => !o.deleted).forEach((pD) => {\n        options.push({\n            key: pD._id,\n            value: pD._id,\n            text: <span>\n                <span className=\"typeLabel\">Product</span>\n                <span>{`${pD.name}`}</span>\n                <span style={{float: \"right\", fontWeight: \"bold\"}}>{`  Rs: ${pD.product_cost}`}</span>\n                <span style={{float: \"right\", paddingRight: 10}}>{`Stocks Available: ${pD.available_stocks}  `}</span>\n            </span>,\n            heading: <span>\n                <span className=\"typeLabel\">Product</span>\n                <span className=\"Detail-View-Main-Content-Name-underline\">{`${pD.name}`}</span>\n            </span>,\n            type: \"product\",\n            fullObj: pD\n        })\n    });\n    data.services.filter((o) => !o.deleted).forEach((pD) => {\n        options.push({\n            key: pD._id,\n            value: pD._id,\n            text: <span>\n                <span className=\"typeLabel\">Service</span>\n                <span>{`${pD.name}`}</span>\n                <span style={{float: \"right\"}}>{`Rs: ${pD.service_cost}`}</span>\n            </span>,\n            heading: <span>\n                <span className=\"typeLabel\">Service</span>\n                <span className=\"Detail-View-Main-Content-Name-underline\">{`${pD.name}`}</span>\n            </span>,\n            type: \"service\",\n            fullObj: pD\n        })\n    });\n    return options;\n};\n\nconst renderNumberOptions = (num) => {\n    const li = [];\n    for (let i = 1; i <= num; i++) {\n        li.push({key: i, text: i, value: i});\n    }\n    return li;\n};\n\nconst Checkbox = props => <input type=\"checkbox\" {...props} />;","import React, {Component} from \"react\";\n\nimport Modal from \"../../components/Modal\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport Loading from \"../../components/Loading\";\nimport {options as genderOptions} from \"../../components/ListView/CustomerLi\";\nimport api from \"../../utils/api\";\nimport {appModuleActions as actions, CUSTOMER_ADD_MODAL} from \"../../AppModule\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nclass AddCustomer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addCustomerData: {\n                name: \"\",\n                email: \"\",\n                address: \"\",\n                age: null,\n                mobileNo: null,\n                branch_id: null,\n                gender: genderOptions[1]\n            },\n            addCustomerLoading: false,\n            isSuccessIndicator: false\n\n        };\n\n        this.onSubmitAddCustomer = this.onSubmitAddCustomer.bind(this);\n        this.isAllInputOkay = this.isAllInputOkay.bind(this);\n    }\n\n    async onSubmitAddCustomer(custData) {\n        const {allCustomerData, currentBranch} = this.props.appModuleData.toJS();\n        const branchId = this.props.match.params.branchId;\n        this.setState({\n            addCustomerLoading: true,\n            isSuccessIndicator: false,\n            message: {}\n        });\n        const obj = {\n            name: custData.full_name,\n            email: custData.email,\n            gender: custData.gender.value,\n            address: custData.address,\n            age: Number(custData.age),\n            mobileNo: Number(custData.mobile_number),\n            branch_id: Number(branchId)\n        };\n\n        try {\n            const {body} = await api({type: \"POST\", uri: \"customer/\" + currentBranch._id, obj});\n            this.setState({\n                addCustomerLoading: false,\n                isSuccessIndicator: true,\n                message: {type: \"success\", text: body.message}\n            });\n\n            this.props.modalToggle({modal: CUSTOMER_ADD_MODAL, view: false});\n            this.props.getAllCustomer(allCustomerData.count.page);\n            setTimeout(async () => {\n                this.setState({isSuccessIndicator: false, successMessage: \"\"});\n            }, 4000);\n        } catch (e) {\n            this.setState({\n                addCustomerLoading: false,\n                isSuccessIndicator: true,\n                message: {type: \"error\", text: e.toString()}\n            });\n        }\n    }\n\n    isAllInputOkay() {\n        const {addCustomerData} = this.state;\n        return !addCustomerData.full_name\n            || (addCustomerData.mobile_number && !addCustomerData.mobile_number.toString())\n            || !addCustomerData.gender\n            || (addCustomerData.age && !addCustomerData.age.toString())\n            || (addCustomerData.mobile_number && addCustomerData.mobile_number.length !== 10)\n    }\n\n    render() {\n        return (\n            <Modal\n                open={true}\n                center={false}\n                onClose={() => {\n                    this.setState({\n                        addCustomerLoading: false,\n                        isSuccessIndicator: false,\n                        message: {},\n                        addCustomerData: {gender: genderOptions[1]},\n                    });\n                    this.props.modalToggle({modal: CUSTOMER_ADD_MODAL, view: false});\n                }}\n                showCloseIcon={false}\n                size=\"big\"\n                header={\n                    <div>\n                        ADD CUSTOMER\n                    </div>\n                }\n                content={\n                    <div>\n                        {this.state.isSuccessIndicator &&\n                        <div\n                            className={this.state.message.type === \"success\" ? \"customer-li-success-msg\" : \"customer-li-error-msg\"}>\n                            {this.state.message.text}\n                        </div>\n                        }\n\n                        {/*{myUserAccess.role === \"admin\" &&*/}\n                        {/*<Input name={\"Branch\"}*/}\n                        {/*       value={this.state.addCustomerData.branch}*/}\n                        {/*       type=\"select\"*/}\n                        {/*       required={true}*/}\n                        {/*       options={allBranchOptions}*/}\n                        {/*       onValChange={(data) => {*/}\n                        {/*           this.setState({*/}\n                        {/*               addCustomerData: {*/}\n                        {/*                   ...this.state.addCustomerData,*/}\n                        {/*                   branch: data*/}\n                        {/*               }*/}\n                        {/*           })*/}\n                        {/*       }}*/}\n                        {/*/>*/}\n                        {/*}*/}\n\n                        <Input name={\"Name\"}\n                               value={this.state.addCustomerData.full_name}\n                               required={true}\n                               onValChange={(data) => {\n                                   this.setState({\n                                       addCustomerData: {\n                                           ...this.state.addCustomerData,\n                                           full_name: data.value\n                                       }\n                                   })\n                               }}\n                        />\n\n                        <Input name={\"Mobile Number\"}\n                               value={this.state.addCustomerData.mobile_number}\n                               type=\"mobile_number\"\n                               maxLength=\"10\"\n                               required={true}\n                               onValChange={(data) => {\n                                   this.setState({\n                                       addCustomerData: {\n                                           ...this.state.addCustomerData,\n                                           mobile_number: data.value\n                                       }\n                                   })\n                               }}\n                        />\n\n                        <Input name={\"Home Address\"}\n                               value={this.state.addCustomerData.address}\n                               type=\"textarea\"\n                               onValChange={(data) => {\n                                   this.setState({\n                                       addCustomerData: {\n                                           ...this.state.addCustomerData,\n                                           address: data.value\n                                       }\n                                   })\n                               }}\n                        />\n\n                        <Input name={\"Email\"}\n                               value={this.state.addCustomerData.email}\n                               onValChange={(data) => {\n                                   this.setState({\n                                       addCustomerData: {\n                                           ...this.state.addCustomerData,\n                                           email: data.value\n                                       }\n                                   })\n                               }}\n                        />\n\n                        <Input name={\"Age\"}\n                               value={this.state.addCustomerData.age}\n                               type=\"number\"\n                               maxLength=\"2\"\n                               required={true}\n                               onValChange={(data) => {\n                                   this.setState({\n                                       addCustomerData: {\n                                           ...this.state.addCustomerData,\n                                           age: data.value\n                                       }\n                                   })\n                               }}\n                        />\n\n                        <Input name={\"Gender\"}\n                               value={this.state.addCustomerData.gender}\n                               type=\"select\"\n                               required={true}\n                               options={genderOptions}\n                               onValChange={(data) => {\n                                   this.setState({\n                                       addCustomerData: {\n                                           ...this.state.addCustomerData,\n                                           gender: data\n                                       }\n                                   })\n                               }}\n                        />\n                        <Loading loading={this.state.addCustomerLoading}/>\n                    </div>\n                }\n                footer={\n                    <div>\n                        <Button name=\"Submit\"\n                                disabled={this.isAllInputOkay()}\n                                onClick={async () => {\n                                    await this.onSubmitAddCustomer(this.state.addCustomerData)\n                                }}/>\n                        <Button name=\"Close\" onClick={() => {\n                            this.setState({\n                                addCustomerLoading: false,\n                                isSuccessIndicator: false,\n                                message: {},\n                                addCustomerData: {gender: genderOptions[1]},\n                            });\n                            this.props.modalToggle({modal: CUSTOMER_ADD_MODAL, view: false});\n                        }}/>\n                    </div>\n                }\n            />\n        )\n    }\n}\n\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddCustomer));","import React, {Component} from \"react\";\nimport Checkbox from \"react-simple-checkbox\";\n\nimport \"./style.css\";\nimport Dropdown from \"../DropDown\";\nimport Modal from '../Modal';\nimport Button from \"../Button\";\nimport api from \"../../utils/api\";\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\n\nexport const options = [\n    {value: 'male', label: 'Male'},\n    {value: 'female', label: 'Female'}\n];\n\nclass UserGrid extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDetailModal: false,\n            showEditModal: false,\n            editCustomerData: {},\n            editLoading: false,\n            showDeleteModal: false,\n            deleteCustomerData: {},\n            isSuccessIndicator: false,\n            message: {\n                type: \"\",\n                text: \"\"\n            },\n        };\n\n        this.isAllInputOkay = this.isAllInputOkay.bind(this);\n        this.onSubmitEditCustomer = this.onSubmitEditCustomer.bind(this);\n        this.onSubmitDeleteCustomer = this.onSubmitDeleteCustomer.bind(this);\n    }\n\n    async onSubmitEditCustomer(customer) {\n        this.setState({showEditModal: false, editLoading: true});\n        const obj = {\n            name: customer.full_name,\n            email: customer.email,\n            gender: customer.gender.value,\n            address: customer.address,\n            age: customer.age,\n            mobileNo: customer.mobile_number\n        };\n        try {\n            const {body} = await api({type: \"PUT\", uri: \"customer/\" + customer._id, obj});\n            this.setState({\n                editLoading: false,\n                isSuccessIndicator: true,\n                message: {type: \"success\", text: body.message}\n            });\n\n            this.props.getAllCustomer(this.props.page);\n            setTimeout(async () => {\n                this.setState({isSuccessIndicator: false, successMessage: \"\"});\n            }, 4000);\n        } catch (e) {\n            this.setState({\n                editLoading: false,\n                isSuccessIndicator: true,\n                message: {type: \"error\", text: e.toString()}\n            });\n        }\n    }\n\n    async onSubmitDeleteCustomer(customer) {\n        this.setState({showDeleteModal: false, editLoading: true});\n        try {\n            const {body} = await api({type: \"DELETE\", uri: \"customer/\" + customer._id});\n            this.setState({\n                editLoading: false,\n                isSuccessIndicator: true,\n                message: {type: \"success\", text: body.message}\n            });\n\n            this.props.getAllCustomer(this.props.page);\n            setTimeout(async () => {\n                this.setState({isSuccessIndicator: false, successMessage: \"\"});\n            }, 4000);\n        } catch (e) {\n            this.setState({\n                editLoading: false,\n                isSuccessIndicator: true,\n                message: {type: \"error\", text: e.toString()}\n            });\n        }\n    }\n\n    isAllInputOkay() {\n        const {editCustomerData} = this.state;\n        return !editCustomerData.full_name || !editCustomerData.mobile_number || !editCustomerData.gender || !editCustomerData.age\n    }\n\n    render() {\n        const {user, type, onClickAction} = this.props;\n\n        const userOptions = [];\n\n        if (!user.deleted) {\n            if (type === \"branch\") {\n                userOptions.push(\n                    {\n                        icon: \"view-detail\",\n                        value: \"view-detail\"\n                    }, {\n                        icon: \"edit permission\",\n                        value: \"edit permission\"\n                    }, {\n                        icon: \"remove from branch\",\n                        value: \"remove from branch\"\n                    }\n                );\n            } else {\n                userOptions.push(\n                    {\n                        icon: \"view-detail\",\n                        value: \"view-detail\"\n                    }, {\n                        icon: \"edit\",\n                        value: \"edit\"\n                    }, {\n                        icon: \"delete\",\n                        value: \"delete\"\n                    }\n                );\n            }\n        }\n\n        return (\n            <div className=\"grid-main\">\n                <div>\n                    <div className=\"grid-split grid-name\">\n                        {user.full_name}\n                    </div>\n                    <div className=\"grid-split\" style={{float: \"right\"}}>\n                        <Dropdown\n                            list={userOptions}\n                            onSelectOption={(val) => {\n                                if (val === \"view-detail\") {\n                                    this.setState({showDetailModal: true});\n                                } else {\n                                    if (!!onClickAction) onClickAction(val, user);\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className=\"grid-padding\">\n                    {user.mobile_number &&\n                    <div className=\"grid-split\">\n                        <img style={{width: 15}} src=\"https://img.icons8.com/carbon-copy/100/000000/phone.png\"/>\n                        <div className=\"grid-split\">\n                            {user.mobile_number}\n                        </div>\n                    </div>}\n                </div>\n                <div>\n                    {user._id &&\n                    <div className=\"grid-split grid-label\">\n                        {user._id}\n                    </div>}\n                    {user.added_date_time && <div className=\"grid-split grid-label\">\n                        {getDesiredDateTimeNow(user.added_date_time)}\n                    </div>}\n                    {user.deleted &&\n                    <div className=\"grid-split grid-deleted\">\n                        Deleted\n                    </div>}\n                </div>\n\n                <Modal\n                    open={this.state.showDetailModal}\n                    center={false}\n                    onClose={() => this.setState({showDetailModal: false})}\n                    showCloseIcon={false}\n                    size=\"big\"\n                    header={\n                        <div>\n                            Employee Detail - {user.full_name}\n                        </div>\n                    }\n                    content={\n                        <div style={{padding: 10}}>\n                            <div className=\"Detail-View\">\n                                <div className=\"Detail-View-Main-Content\">\n                                    <div className=\"Detail-View-Main-Content-Column1\">\n                                        <div className=\"Detail-View-Main-Content-Name\">\n                                            {user.full_name}\n                                        </div>\n                                        <div className=\"Detail-View-Main-Content-Id\">\n                                            <img className=\"image\"\n                                                 src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\n                                            {user._id}\n                                        </div>\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-Column2\">\n                                        <div className=\"container\">\n                                            <div className=\"information\">User Information:</div>\n                                            <div className=\"stat no-border\">\n                                                <div className=\"Detail-View-Main-Content-split\">\n                                                    <div className=\"information-heading\">Created On</div>\n                                                    <div className=\"information-val\">\n                                                        {getDesiredDateTimeNow(user.added_date_time)}\n                                                    </div>\n                                                </div>\n                                                <div className=\"Detail-View-Main-Content-split\">\n                                                    <div className=\"information-heading\">Mobile Number</div>\n                                                    <div className=\"information-val\">{user.mobile_number}</div>\n                                                </div>\n                                                {user.added_by &&\n                                                <div className=\"Detail-View-Main-Content-split\">\n                                                    <div className=\"information-heading\">Created by</div>\n                                                    <div\n                                                        className=\"information-val\">{user.added_by}\n                                                    </div>\n                                                </div>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {type === \"branch\" &&\n                            <div className=\"employee-permission\">\n                                <div className=\"employee-permission-header-name\"> User Permissions</div>\n                                <div className=\"employee-permission-box\">\n                                    {user.perm &&\n                                    <table className=\"content-header-table\">\n                                        <tbody>\n                                        <tr>\n                                            <td className=\"content-header-name\">Invoice</td>\n                                            <td className=\"content-header-name\">Customer</td>\n                                            <td className=\"content-header-name\">Items</td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"content-header-name\">\n                                                <Checkbox disabled checked={user.perm.bill.add}/> Add\n                                                <br/>\n                                                <Checkbox disabled checked={user.perm.bill.view}/> View\n                                                <br/>\n                                                <Checkbox disabled checked={user.perm.bill.edit}/> Edit\n                                                <br/>\n                                                <Checkbox disabled checked={user.perm.bill.delete}/> Delete\n                                                <br/>\n                                            </td>\n                                            <td className=\"content-header-name\">\n                                                <Checkbox disabled checked={user.perm.customer.add}/> Add <br/>\n                                                <Checkbox disabled checked={user.perm.customer.view}/> View <br/>\n                                                <Checkbox disabled checked={user.perm.customer.edit}/> Edit <br/>\n                                                <Checkbox disabled\n                                                          checked={user.perm.customer.delete}/> Delete <br/>\n                                            </td>\n                                            <td className=\"content-header-name\">\n                                                <Checkbox disabled checked={user.perm.items.add}/> Add <br/>\n                                                <Checkbox disabled checked={user.perm.items.view}/> View <br/>\n                                                <Checkbox disabled checked={user.perm.items.edit}/> Edit <br/>\n                                                <Checkbox disabled\n                                                          checked={user.perm.items.delete}/> Delete <br/>\n                                            </td>\n                                        </tr>\n                                        </tbody>\n                                    </table>}\n                                </div>\n                            </div>\n                            }\n                        </div>\n                    }\n                    footer={\n                        <div>\n                            <Button name=\"Close\" onClick={() => this.setState({showDetailModal: false})}/>\n                        </div>\n                    }\n\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default UserGrid;","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nimport {appModuleActions as actions, BRANCH_ADD_MODAL, BRANCH_EDIT_MODAL, PRODUCT_EDIT_MODAL} from \"../../AppModule\";\n\nimport \"./style.css\";\nimport {getDesiredDateTimeNow} from \"../../utils/index\";\nimport UserLi from \"../../components/ListView/UserLi\";\nimport Tabs from \"../../components/Tabs\";\nimport Button from \"../../components/Button\";\nimport Modal from \"../../components/Modal\";\nimport Checkbox from \"react-simple-checkbox\";\nimport api from \"../../utils/api\";\nimport Loading from \"../../components/Loading\";\nimport {IoIosAdd} from \"react-icons/io\";\nimport UserGrid from \"../../components/GridView/UserGrid\";\nimport {FiEdit} from \"react-icons/fi\";\nimport AddOrEditBranch from \"./AddOrEditBranch\";\nimport {RiDeleteBinLine} from \"react-icons/ri\";\n\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteBranchModal: false,\n            whichBranch: {},\n            updatePermissionModal: false,\n            updatePermissionData: {},\n            updateData: {},\n            removeUserModal: false,\n            settingsLoading: false,\n            showDeleteModal: false\n        };\n\n        this.onClickAction = this.onClickAction.bind(this);\n        this.isAllInputOkay = this.isAllInputOkay.bind(this)\n        this.onChangePermission = this.onChangePermission.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.onClickUpdatePermission = this.onClickUpdatePermission.bind(this);\n        this.onClickRemoveUser = this.onClickRemoveUser.bind(this);\n    }\n\n    componentWillMount() {\n        let {branchId} = this.props.match.params;\n        this.props.getById({type: \"branch\", branchId});\n    }\n\n    onClickAction(type, userData) {\n        if (type === \"edit permission\") {\n            this.setState({updatePermissionModal: true, updatePermissionData: userData.perm, updateData: userData});\n        } else if (type === \"remove from branch\") {\n            this.setState({removeUserModal: true, updateData: userData});\n        }\n    }\n\n    isAllInputOkay() {\n        const {updatePermissionData} = this.state;\n        return false\n    }\n\n    onChangePermission(type, action, permFlag) {\n        let {updatePermissionData} = this.state;\n        updatePermissionData[type][action] = permFlag;\n        this.setState({updatePermissionData});\n    }\n\n    closeModal() {\n        this.setState({\n            updatePermissionData: {},\n            updatePermissionModal: false,\n            updateData: {},\n            removeUserModal: false,\n        });\n    }\n\n    async onClickUpdatePermission() {\n        const {currentBranch} = this.props.appModuleData.toJS();\n        this.setState({settingsLoading: true});\n\n        try {\n            const {body} = await api({\n                type: \"PUT\",\n                uri: `branch/${currentBranch._id}/${this.state.updateData._id}`,\n                obj: {perm: this.state.updatePermissionData}\n            });\n            // this.props.getById({type: \"branch\", branchId: currentBranch._id});\n            this.closeModal();\n            this.props.addNotification({\n                message: body.message,\n                level: \"success\"\n            });\n            window.location.reload();\n        } catch (e) {\n            this.props.addNotification({\n                message: e.toString(),\n                level: \"error\"\n            });\n        }\n        this.setState({settingsLoading: false});\n    }\n\n    async onClickRemoveUser() {\n        const {currentBranch} = this.props.appModuleData.toJS();\n        this.setState({settingsLoading: true});\n\n        try {\n            const {body} = await api({\n                type: \"DELETE\",\n                uri: `branch/${currentBranch._id}/${this.state.updateData._id}`,\n            });\n            this.props.getById({type: \"branch\", branchId: currentBranch._id});\n            this.closeModal();\n            this.props.addNotification({\n                message: body.message,\n                level: \"success\"\n            });\n        } catch (e) {\n            this.props.addNotification({\n                message: e.toString(),\n                level: \"error\"\n            });\n        }\n        this.setState({settingsLoading: false});\n    }\n\n    async onSubmitDeleteBranch(branch) {\n        this.setState({showDeleteModal: false, settingsLoading: true});\n        try {\n            const {body} = await api({type: \"DELETE\", uri: `branch/${branch._id}`});\n\n            if (!body || body.status === 'error') {\n                if (body.data) {\n                    this.props.addNotification({message: body.data, level: \"error\"});\n                }\n            } else {\n                let {id} = this.props.match.params;\n                // this.props.getById({type: \"branch\", id});\n                if (body.message) {\n                    this.props.addNotification({message: body.message, level: \"success\"});\n                }\n\n                window.location.href = \"/\"\n            }\n            this.setState({settingsLoading: false});\n        } catch (e) {\n            this.setState({settingsLoading: false});\n            this.props.addNotification({message: e.toString(), level: \"error\"});\n        }\n    }\n\n    render() {\n        const {detailData, modal, loading, myUserAccess} = this.props.appModuleData.toJS();\n        const {detail} = detailData;\n        const {updatePermissionData, updateData} = this.state;\n\n        const panes = [\n            {\n                menuItem: 'Employees',\n                menuButton: <IoIosAdd/>,\n                menuButtonClick: () => {\n                },\n                render:\n                    <div className=\"grid-container\">\n                        {detail.employees && detail.employees.filter((emp) => emp.employee_id.role === \"employee\").map((user, key) => {\n                            return (\n                                <UserGrid key={key} user={{...user.employee_id, perm: user.perm}} type=\"branch\"\n                                          onClickAction={this.onClickAction} {...this.props}/>\n                            )\n                        })}\n                    </div>\n            },\n            {\n                menuItem: 'Admins',\n                menuButton: <IoIosAdd size=\"30px\"/>,\n                menuButtonClick: () => {\n                },\n                render:\n                    <div className=\"grid-container\">\n                        {detail.employees && detail.employees.filter((emp) => emp.employee_id.role === \"admin\").map((user, key) => {\n                            return (\n                                <UserGrid key={key} user={{...user.employee_id, perm: user.perm}} type=\"branch\"\n                                          onClickAction={this.onClickAction} {...this.props}/>\n                            )\n                        })}\n                    </div>\n            },\n        ];\n\n        return (\n            <div className=\"actual-content\">\n                <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                    <Loading type=\"simple\" style=\"native\"\n                             loading={this.state.settingsLoading || loading.getByIdLoading}/>\n                    {myUserAccess.role === \"admin\" && (!this.state.settingsLoading && !loading.getByIdLoading && !detail.deleted) &&\n                    <FiEdit size=\"20px\" style={{margin: 10}} className=\"button-icon\"\n                            onClick={() => this.props.modalToggle({modal: BRANCH_EDIT_MODAL, view: true})}/>}\n\n                    {myUserAccess.role === \"admin\" && (!this.state.settingsLoading && !loading.getByIdLoading && !detail.deleted) &&\n                    <RiDeleteBinLine size=\"20px\" style={{margin: 10}} className=\"button-icon\"\n                                     onClick={() => this.setState({showDeleteModal: true})}/>}\n                </div>\n                <div className=\"Detail-View\">\n                    <div className=\"Detail-View-Main-Content\">\n                        <div className=\"Detail-View-Main-Content-Column1\">\n                            <div className=\"Detail-View-Main-Content-Name\">\n                                {detail.name}\n                            </div>\n                            <div className=\"Detail-View-Main-Content-Id\">\n                                <img className=\"image\"\n                                     src=\"https://img.icons8.com/material-outlined/96/000000/face-id.png\"/>\n                                {detail._id}\n                            </div>\n                        </div>\n                        <div className=\"Detail-View-Main-Content-Column2\">\n                            <div className=\"container\">\n                                <div className=\"information\">Branch Information:</div>\n                                <div className=\"stat\">\n                                    <div className=\"Detail-View-Main-Content-split\">\n                                        <div className=\"information-heading\">Location</div>\n                                        <div className=\"information-val\">\n                                            {detail.location ? detail.location : \"NIL\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-split\">\n                                        <div className=\"information-heading\">Created On</div>\n                                        <div className=\"information-val\">\n                                            {getDesiredDateTimeNow(detail.added_date_time)}\n                                        </div>\n                                    </div>\n                                    <div className=\"Detail-View-Main-Content-split\">\n                                        <div className=\"information-heading\">Mobile Number</div>\n                                        <div className=\"information-val\">{detail.mobile_number}</div>\n                                    </div>\n                                    {detail.added_by &&\n                                    <div className=\"Detail-View-Main-Content-split\">\n                                        <div className=\"information-heading\">Created by</div>\n                                        <div\n                                            className=\"information-val\">{detail.added_by && detail.added_by.full_name} ({detail.added_by && detail.added_by._id})\n                                        </div>\n                                    </div>\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"container\">\n                                <div className=\"information\">Employee Information:</div>\n                                <div className=\"stat no-border\">\n                                    <div className=\"Detail-View-Main-Content-split\">\n                                        <div className=\"information-heading\">No of employees</div>\n                                        <div className=\"information-val\">\n                                            {detail.employees ? detail.employees.length : 0}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{paddingTop: 10}}>\n                        <Tabs panes={panes} type=\"default\"/>\n                    </div>\n\n                    {this.state.updatePermissionModal &&\n                    <Modal\n                        open={this.state.updatePermissionModal}\n                        center={false}\n                        onClose={() => this.closeModal()}\n                        showCloseIcon={false}\n                        size=\"mini\"\n                        header={\n                            <div>\n                                EDIT PERMISSION: <span\n                                className=\"Modal-Header-name\">{this.state.updateData.full_name}</span>\n                            </div>\n                        }\n                        content={\n                            <div>\n                                {Object.keys(updatePermissionData).length > 0 &&\n                                <div className=\"employee-permission-box\">\n                                    {/*<div className=\"employee-permission-header-name\"> User Permissions</div>*/}\n                                    <div className=\"employee-permission-box\">\n                                        <table className=\"content-header-table add-employee-permission-table\">\n                                            <tbody>\n                                            <tr className=\"add-employee-permission-tr\">\n                                                <td className=\"content-header-name\">Invoice</td>\n                                                <td className=\"content-header-name\">Customer</td>\n                                                <td className=\"content-header-name\">Items</td>\n                                            </tr>\n                                            <tr className=\"add-employee-permission-tr\">\n                                                <td className=\"content-header-name\">\n                                                    <Checkbox checked={updatePermissionData.bill.add}\n                                                              onChange={(data) => this.onChangePermission('bill', 'add', data)}/> Add <br/>\n                                                    <Checkbox\n                                                        checked={updatePermissionData.bill.view}\n                                                        onChange={(data) => this.onChangePermission('bill', 'view', data)}/> View <br/>\n                                                    <Checkbox\n                                                        checked={updatePermissionData.bill.edit}\n                                                        onChange={(data) => this.onChangePermission('bill', 'edit', data)}/> Edit <br/>\n                                                    <Checkbox\n                                                        checked={updatePermissionData.bill.delete}\n                                                        onChange={(data) => this.onChangePermission('bill', 'delete', data)}/> Delete <br/>\n                                                </td>\n                                                <td className=\"content-header-name\">\n                                                    <Checkbox\n                                                        checked={updatePermissionData.customer.add}\n                                                        onChange={(data) => this.onChangePermission('customer', 'add', data)}/> Add <br/>\n                                                    <Checkbox\n                                                        checked={updatePermissionData.customer.view}\n                                                        onChange={(data) => this.onChangePermission('customer', 'view', data)}/> View <br/>\n                                                    <Checkbox\n                                                        checked={updatePermissionData.customer.edit}\n                                                        onChange={(data) => this.onChangePermission('customer', 'edit', data)}/> Edit <br/>\n                                                    <Checkbox\n                                                        checked={updatePermissionData.customer.delete}\n                                                        onChange={(data) => this.onChangePermission('customer', 'delete', data)}/> Delete <br/>\n                                                </td>\n                                                <td className=\"content-header-name\">\n                                                    <Checkbox checked={updatePermissionData.items.add}\n                                                              onChange={(data) => this.onChangePermission('items', 'add', data)}/> Add <br/>\n                                                    <Checkbox\n                                                        checked={updatePermissionData.items.view}\n                                                        onChange={(data) => this.onChangePermission('items', 'view', data)}/> View <br/>\n                                                    <Checkbox\n                                                        checked={updatePermissionData.items.edit}\n                                                        onChange={(data) => this.onChangePermission('items', 'edit', data)}/> Edit <br/>\n                                                    <Checkbox\n                                                        checked={updatePermissionData.items.delete}\n                                                        onChange={(data) => this.onChangePermission('items', 'delete', data)}/> Delete <br/>\n                                                </td>\n                                            </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                }\n                                <Loading loading={this.state.settingsLoading}/>\n                            </div>\n                        }\n                        footer={\n                            <div>\n                                <Button name=\"Update\"\n                                        disabled={this.isAllInputOkay() || this.state.settingsLoading}\n                                        onClick={async () => await this.onClickUpdatePermission()}/>\n                                <Button disabled={this.state.settingsLoading} name=\"Close\"\n                                        onClick={() => this.closeModal()}/>\n                            </div>\n                        }\n                    />\n                    }\n\n                    {this.state.removeUserModal &&\n                    <Modal\n                        open={this.state.removeUserModal}\n                        center={false}\n                        onClose={() => this.closeModal()}\n                        showCloseIcon={false}\n                        size=\"mini\"\n                        header={\n                            <div>\n                                REMOVE EMPLOYEE FROM BRANCH:<span>{updateData.full_name}</span>\n                            </div>\n                        }\n                        content={\n                            <div style={{padding: 10}}>\n                                Remove employee from branch will revoke permission for user to do any further action\n                                in branch.\n                                <Loading loading={this.state.settingsLoading}/>\n                            </div>\n                        }\n                        footer={\n                            <div>\n                                <Button name=\"Remove from branch\" disabled={this.state.settingsLoading}\n                                        onClick={async () => this.onClickRemoveUser()}/>\n                                <Button name=\"Close\" disabled={this.state.settingsLoading}\n                                        onClick={() => this.closeModal()}/>\n                            </div>\n                        }\n                    />\n                    }\n\n                    {modal.branchEditModal && <AddOrEditBranch type={\"edit-branch\"} branchData={detail}/>}\n\n                    {\n                        this.state.showDeleteModal &&\n                        <Modal\n                            open={this.state.showDeleteModal}\n                            center={false}\n                            onClose={() => this.setState({showDeleteModal: false})}\n                            showCloseIcon={false}\n                            size=\"mini\"\n                            header={\n                                <div>\n                                    DELETE BRANCH: <span>{detail.name}</span>\n                                </div>\n                            }\n                            content={\n                                <div style={{padding: 10}}>\n                                    Are you sure you want to delete this branch? Once the branch is deleted,\n                                    you cannot revert, add or make any changes to the branch propertoes.\n                                    <Loading loading={this.state.settingsLoading}/>\n                                </div>\n                            }\n                            footer={\n                                <div>\n                                    <Button name=\"Delete\"\n                                            onClick={async () => {\n                                                await this.onSubmitDeleteBranch(detail);\n                                            }}/>\n                                    <Button name=\"Close\" onClick={() => this.setState({showDeleteModal: false})}/>\n                                </div>\n                            }\n                        />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Settings));","import React, {Component} from \"react\";\nimport {Route, withRouter, Switch} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nimport './Dashboard.css';\n\nimport {appModuleActions as actions, CUSTOMER_ADD_MODAL, PRODUCT_ADD_MODAL} from \"../../AppModule\";\nimport NotificationSystem from \"../../components/Notification\";\nimport ViewCustomers from \"../Customer/CustomerList\";\nimport CustomerDetail from \"../Customer/CustomerDetail\";\nimport Items from \"../Items\";\nimport ProductDetail from \"../Items/ProductDetail\";\nimport ServiceDetail from \"../Items/ServiceDetail\";\nimport ViewBills from \"../Invoice\";\nimport InvoiceDetail from \"../Invoice/InvoiceDetail\";\nimport CreateInvoice from \"../Invoice/CreateInvoice\";\nimport AppLayout from \"../../components/AppLayout\";\nimport {setLocalStorage} from \"../../utils/index\";\nimport AddCustomer from \"../Customer/AddCustomer\";\nimport AddOrEditItems from \"../Items/AddOrEditItems\";\nimport BranchSettings from \"../Branch/Settings\";\nimport {RiAccountCircleLine, RiSettings3Line, RiHome7Line} from \"react-icons/ri\";\nimport {IoMdLogOut} from \"react-icons/io\";\n\nclass DashboardOne extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        setLocalStorage('activeBranch', this.props.match.params.branchId);\n        const {myUserAccess} = this.props.appModuleData.toJS();\n        const branchId = this.props.match.params.branchId;\n        const activeBranch = myUserAccess.access_branches.filter((branch) => branch._id === Number(branchId));\n        if (activeBranch && activeBranch.length > 0) {\n            this.props.setCurrentBranch(activeBranch[0])\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const prevBranchId = prevProps.match.params.branchId;\n        const currentBranch = this.props.match.params.branchId;\n        if (prevBranchId !== currentBranch) {\n            const {myUserAccess} = this.props.appModuleData.toJS();\n            const activeBranch = myUserAccess.access_branches.filter((branch) => branch._id === Number(currentBranch));\n            if (activeBranch && activeBranch.length > 0) {\n                this.props.setCurrentBranch(activeBranch[0])\n            }\n        }\n    }\n\n    render() {\n        const {myUserAccess, currentBranch, modal} = this.props.appModuleData.toJS();\n        const leftMenu = [];\n\n        const branchId = this.props.match.params.branchId;\n        const activeBranch = myUserAccess.access_branches.filter((branch) => branch._id === Number(branchId));\n\n        if (activeBranch && activeBranch.length > 0) {\n            const branchPerm = activeBranch[0].employees[0].perm\n            if (branchPerm.customer.view) {\n                let custAccData = {\n                    name: \"Customers\",\n                    id: \"customers\",\n                    link: `/branch/${branchId}/customers`\n                };\n                if (branchPerm.customer.add && !currentBranch.deleted)\n                    custAccData.addFunc = () => this.props.modalToggle({\n                        modal: CUSTOMER_ADD_MODAL,\n                        view: true\n                    });\n                leftMenu.push(custAccData);\n            }\n\n            if (branchPerm.items.view) {\n                let itemAccData = {\n                    name: \"Product/Service\",\n                    id: \"items\",\n                    link: `/branch/${branchId}/items`,\n                };\n                if (branchPerm.items.add && !currentBranch.deleted)\n                    itemAccData.addFunc = () => this.props.modalToggle({\n                        modal: PRODUCT_ADD_MODAL,\n                        view: true\n                    });\n                leftMenu.push(itemAccData);\n            }\n\n            if (branchPerm.bill.view) {\n                let billAccData = {\n                    name: \"Invoice\",\n                    id: \"Invoice\",\n                    link: `/branch/${branchId}/invoices`\n                };\n                if (branchPerm.bill.add && !currentBranch.deleted) billAccData.addLink = `/branch/${branchId}/new-invoice`;\n                leftMenu.push(billAccData);\n            }\n\n            if (myUserAccess.role === \"admin\") {\n                leftMenu.push({\n                    name: \"Settings\",\n                    id: \"Settings\",\n                    link: `/branch/${branchId}/settings`\n                });\n            }\n\n            let actions = [{\n                link: \"/dashboard\",\n                icon: <RiHome7Line size=\"24px\"/>\n            }, {\n                link: \"/account\",\n                icon: <RiAccountCircleLine size=\"24px\"/>\n            }, {\n                link: \"/settings\",\n                icon: <RiSettings3Line size=\"24px\"/>\n            }, {\n                link: \"/logout\",\n                icon: <IoMdLogOut size=\"24px\"/>\n            }];\n\n            return (\n                <AppLayout\n                    history={this.props.history}\n                    location={this.props.location}\n                    pageHeader={{\n                        appName: `Bill1ne`,\n                        isBranch: true,\n                        branchName: currentBranch.name,\n                        routeLinks: [],\n                        rightUserDetail: myUserAccess,\n                        leftMenu,\n                        actions,\n                        changePasswordFn: () => this.props.history.push(\"/change-password\"),\n                        checkAuth: this.props.checkAuth\n                    }}\n                >\n                    <NotificationSystem props/>\n\n                    {modal.customerAddModal && <AddCustomer/>}\n                    {modal.productAddModal && <AddOrEditItems type={\"add-product\"}/>}\n                    {modal.serviceAddModal && <AddOrEditItems type={\"add-service\"}/>}\n\n                    <Switch>\n                        <Route path={`/branch/:branchId/customers`} component={ViewCustomers}/>\n                        <Route path={`/branch/:branchId/customer/:id`} component={CustomerDetail}/>\n\n                        <Route path={`/branch/:branchId/items`} component={Items}/>\n                        <Route path={`/branch/:branchId/product/:id`} component={ProductDetail}/>\n                        <Route path={`/branch/:branchId/service/:id`} component={ServiceDetail}/>\n\n                        <Route path={`/branch/:branchId/invoices`} component={ViewBills}/>\n                        <Route path={`/branch/:branchId/invoice/:id/`} component={InvoiceDetail}/>\n                        <Route path={`/branch/:branchId/new-invoice`} component={CreateInvoice}/>\n                        {(myUserAccess.role === \"admin\") &&\n                        <Route path={`/branch/:branchId/settings`} component={BranchSettings}/>}\n                    </Switch>\n                </AppLayout>\n            );\n        } else {\n            return (\n                <div align=\"center\" style={{padding: 20}}>You dont have access to this branch</div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardOne));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter, Route, Switch} from 'react-router-dom';\n\nimport bec from '../utils/bec';\nimport {appModuleActions as actions} from \"../AppModule\";\nimport DashboardAll from \"./DashboardAll\";\nimport DashboardOne from \"./DashboardOne\";\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: false,\n            loading: true,\n            navOpenState: {\n                isOpen: true,\n                width: 304,\n            },\n            modalVisible: false,\n            modalType: ''\n        };\n\n        this.checkedLogin = this.checkedLogin.bind(this);\n    }\n\n    componentWillMount() {\n        const {checkedLogin} = this;\n        const {updateUserAccessDetails, appModuleData, firstTimeBoot, updateHistoryFun} = this.props;\n        if (!appModuleData.getIn(['myUserAccess', 'role'])) {\n            bec({type: 'GET', uri: 'auth/verify'}, true, (error, {body}) => {\n                if (!body || body.status === 'error') {\n                    if (window.location.pathname !== '/auth') {\n                        //window.location.href = '/auth';\n                        this.props.history.push('/auth');\n                    }\n                    checkedLogin(false);\n                } else {\n                    updateUserAccessDetails(body.response);\n                    if (!appModuleData.get('firstTimeBoot')) {\n                        firstTimeBoot(true);\n                    }\n                    updateHistoryFun(this.props.history);\n                    checkedLogin(true, false);\n                    if (window.location.pathname === '/' || window.location.pathname === '') {\n                        //window.location.href = '/auth';\n                        this.props.history.push('/dashboard');\n                    }\n                }\n            });\n        } else {\n            checkedLogin(true, false);\n        }\n    }\n\n    componentDidMount() {\n        const checkAuth = this.props.checkAuth;\n        setInterval(() => {\n            checkAuth();\n        }, 60000 * 2);\n    }\n\n    checkedLogin(data, loading) {\n        this.setState({loggedIn: data, loading: !loading ? loading : true});\n    }\n\n    render() {\n\n\n        if (this.state.loggedIn) {\n            return (\n                <div>\n                    <Switch>\n                        <Route path=\"/branch/:branchId\" component={DashboardOne}/>\n                        <Route path=\"/\" component={DashboardAll}/>\n                    </Switch>\n                </div>\n            );\n        }\n\n        return (\n            <div align=\"center\" style={{padding: 20}}>Loading...</div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import {combineReducers} from 'redux';\n\nimport appModuleReducer from '../AppModule';\n\nexport default combineReducers({\n    appModuleReducer,\n});","import {fork, all} from 'redux-saga/effects';\n\nimport {appModuleSaga} from '../AppModule';\n\nexport default function* root() {\n    yield all([\n        fork(appModuleSaga),\n    ]);\n}","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {Box, Grid as GridGrom} from \"grommet\";\n\nimport NotificationSystem from '../../components/Notification';\nimport {appModuleActions as actions} from \"../../AppModule\";\nimport bec from \"../../utils/bec\";\nimport {setLocalStorage} from \"../../utils/index\";\n\nimport \"./style.css\";\nimport Input from \"../../components/Input\";\n\nfunction renderBranchOptions(branches) {\n    let branchesRet = [];\n    branches.filter((o) => !o.deleted).forEach((branch) => {\n        branchesRet.push({\n            key: branch._id,\n            value: branch._id,\n            text: branch['name'] + ' - ' + branch['location']\n        });\n    });\n    return branchesRet;\n}\n\nclass Auth extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            empId: '',\n            password: '',\n            'login-branch': '',\n            loginLoading: false,\n            loginError: '',\n            loginView: true\n        };\n\n        this.setLoginState = this.setLoginState.bind(this);\n        this.doLogin = this.doLogin.bind(this);\n    }\n\n    setLoginState(data) {\n        this.setState({...data});\n    }\n\n    componentWillMount() {\n        // this.props.getAllBranch();\n        bec({type: 'GET', uri: 'auth/verify'}, true, (error, {body}) => {\n            if (body && body.status === 'ok') {\n                if (window.location.pathname === '/auth') {\n                    this.props.history.push('/dashboard');\n                    //window.location.href = '/';\n                }\n            }\n        });\n    }\n\n    doLogin({empId, password}) {\n        const {addNotification} = this.props;\n        this.setLoginState({loginLoading: true, loginError: \"\"});\n        bec({\n            type: 'POST',\n            uri: 'auth/login',\n            obj: {'emp-id': Number(empId), password}\n        }, true, (error, {body}) => {\n            if (body && body.status === 'ok') {\n                setLocalStorage('t', body.response.token);\n                // window.location.href = '/';\n                this.props.history.push('/dashboard');\n                this.setLoginState({loginLoading: false})\n            } else {\n                let err = \"Error while login\";\n                if (body !== null && body.data !== null) {\n                    err = err + \" :\" + body.data\n                }\n                addNotification({message: err, level: 'error'});\n                this.setLoginState({loginError: err, loginLoading: false})\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <NotificationSystem props/>\n                <div className=\"auth-main\">\n                    <div className=\"auth-banner\">\n                        <img src={require('../../components/AppLayout/icon.png')} className=\"auth-banner-logo\"/>\n                        <p className=\"auth-banner-app-name\">Bill1ne</p>\n                        <div className=\"input-main\">\n                            <div className=\"input-label\">\n                                Emp Id\n                            </div>\n                            <div\n                                className={(!this.state.empId) ? \"input-content-error\" : \"input-content\"}>\n                                <input\n                                    className={(!this.state.empId) ? \"input-content-box input-content-box-error\" : \"input-content-box\"}\n                                    style={{width: window.innerWidth < 800 ? \"100%\" : \"90%\"}}\n                                    value={this.state.empId} type=\"number\"\n                                    onChange={(e) => this.setState({empId: e.target.value})}/>\n                            </div>\n                        </div>\n                        <div className=\"input-main\">\n                            <div className=\"input-label\">\n                                Password\n                            </div>\n                            <div\n                                className={(!this.state.password) ? \"input-content-error\" : \"input-content\"}>\n                                <input\n                                    className={(!this.state.password) ? \"input-content-box input-content-box-error\" : \"input-content-box\"}\n                                    style={{width: window.innerWidth < 800 ? \"100%\" : \"90%\"}}\n                                    value={this.state.password} type=\"password\"\n                                    onChange={(e) => this.setState({password: e.target.value})}/>\n                            </div>\n                        </div>\n                        {/*<Input*/}\n                        {/*    name=\"Username\"*/}\n                        {/*    required={true}*/}\n                        {/*    type=\"user_id\"*/}\n                        {/*    value={this.state.empId}*/}\n                        {/*    onValChange={(data) => this.setState({empId: data.value})}*/}\n                        {/*/>*/}\n                        {/*<Input*/}\n                        {/*    name=\"Password\"*/}\n                        {/*    type=\"password\"*/}\n                        {/*    required={true}*/}\n                        {/*    value={this.state.password}*/}\n                        {/*    onValChange={(data) => this.setState({password: data.value})}*/}\n                        {/*/>*/}\n                        <button\n                            className=\"auth-button\"\n                            type=\"submit\"\n                            disabled={!this.state.empId || !this.state.password || this.state.loginLoading}\n                            onClick={() => this.doLogin({empId: this.state.empId, password: this.state.password})}\n                        >\n                            Login\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => ({\n    appModuleData: state.appModuleReducer,\n});\n\nconst mapDispatchToProps = {\n    ...actions,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Auth));","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {ConnectedRouter, routerMiddleware} from 'react-router-redux';\nimport {createBrowserHistory} from 'history';\nimport createSagaMiddleware from 'redux-saga';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport Main from \"./screens/Main\";\nimport configureStore from './store/configureStore';\nimport root from './Sagas';\nimport Auth from \"./screens/Auth/Auth\";\n\nexport const history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore(sagaMiddleware, routeMiddleware);\n\nsagaMiddleware.run(root);\n\nclass Index extends Component {\n\n    render() {\n        return (\n            <Provider store={store}>\n                <div>\n                    <Router>\n                        <div>\n                            <Switch>\n                                <Route path={'/auth'} component={Auth}/>\n                                <Route path={'/'} component={Main}/>\n                            </Switch>\n                        </div>\n                    </Router>\n                </div>\n            </Provider>\n        )\n    }\n\n}\n\nReactDOM.render(<Index/>, document.getElementById(\"root\"));\n\nregisterServiceWorker();\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(sagaMiddleware, routeMiddleware, initialState) {\n    const enhancer = compose(\n        applyMiddleware(sagaMiddleware, routeMiddleware),\n    );\n\n    return createStore(rootReducer, initialState, enhancer)\n}\n"],"sourceRoot":""}